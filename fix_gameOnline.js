const fs = require('fs');

// Leer el archivo
let content = fs.readFileSync('./frontend/src/pages/gameOnline.ts', 'utf8');

// Obtener el usuario actual al inicio de la funciÃ³n showGameView
const getUserCurrentCode = `
  // Obtener usuario actual
  const currentUser = getCurrentUser();
  const currentUserName = currentUser?.username || 'Usuario';
`;

// Insertar el cÃ³digo para obtener el usuario al inicio de showGameView
content = content.replace(
  'function showGameView(gameId: string): void {',
  `function showGameView(gameId: string): void {${getUserCurrentCode}`
);

// Reemplazar los tÃ­tulos iniciales para usar nombres dinÃ¡micos
content = content.replace(
  '<h3 class="text-xl font-bold text-yellow-400" id="score1-title">ðŸŸ¡ Jugador 1</h3>',
  '<h3 class="text-xl font-bold text-yellow-400" id="score1-title">ðŸŸ¡ Jugador 1</h3>'
);

content = content.replace(
  '<h3 class="text-xl font-bold text-blue-400" id="score2-title">ðŸ”µ Jugador 2</h3>',
  '<h3 class="text-xl font-bold text-blue-400" id="score2-title">ðŸ”µ Jugador 2</h3>'
);

// Reemplazar la lÃ³gica de actualizaciÃ³n de tÃ­tulos
content = content.replace(
  /if \(playerNumber === 1\) \{\s*score1Title\.innerHTML = 'ðŸŸ¡ Jugador 1 \(TÃº\)';[\s\S]*?score2Title\.innerHTML = 'ðŸ”µ Jugador 2 \(TÃº\)';/g,
  `if (playerNumber === 1) {
        score1Title.innerHTML = \`ðŸŸ¡ \${currentUserName} (TÃº)\`;
        score2Title.innerHTML = isPvE ? 'ðŸ”µ IA (Oponente)' : 'ðŸ”µ Oponente';
      } else {
        score1Title.innerHTML = isPvE ? 'ðŸŸ¡ IA (Oponente)' : 'ðŸŸ¡ Oponente';
        score2Title.innerHTML = \`ðŸ”µ \${currentUserName} (TÃº)\`;`
);

// Escribir el archivo actualizado
fs.writeFileSync('./frontend/src/pages/gameOnline.ts', content);

console.log('âœ… Archivo gameOnline.ts actualizado correctamente');
