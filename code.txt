[1;32m=== ESTRUCTURA DE DIRECTORIOS ===[0m
.
├── api-gateway
│   ├── src
│   │   └── server.ts
│   ├── Dockerfile
│   ├── package.json
│   └── tsconfig.json
├── auth-service
│   ├── src
│   │   ├── database.ts
│   │   ├── redis-client.ts
│   │   └── server.ts
│   ├── Dockerfile
│   ├── package.json
│   └── tsconfig.json
├── chat-service
│   ├── src
│   │   └── server.ts
│   ├── Dockerfile
│   ├── package.json
│   └── tsconfig.json
├── db-service
│   ├── redis
│   │   ├── Dockerfile
│   │   ├── healthcheck.sh
│   │   └── redis.conf
│   ├── sqlite-writer
│   │   ├── Dockerfile
│   │   ├── package.json
│   │   ├── tsconfig.json
│   │   └── writer.ts
│   ├── src
│   │   ├── database.ts
│   │   ├── redis-client.ts
│   │   └── server.ts
│   ├── Dockerfile
│   ├── package.json
│   └── tsconfig.json
├── documents
│   ├── GAME_IMPROVEMENTS_SUMMARY.md
│   ├── PONG_FIXES.md
│   ├── PRUEBA_JUEGO_MEJORADO.md
│   ├── ProyectoTranscendence_DOC.md
│   ├── SISTEMA_LOGIN_RESUMEN.md
│   └── escritura_bbdd.md
├── frontend
│   ├── src
│   │   ├── components
│   │   │   ├── navbar.ts
│   │   │   └── playerDisplay.ts
│   │   ├── pages
│   │   │   ├── gameAI.ts
│   │   │   ├── gameLobby.ts
│   │   │   ├── gameLocal.ts
│   │   │   ├── gameMultiplayer.ts
│   │   │   ├── gameObserver.ts
│   │   │   ├── gameOnline.ts
│   │   │   ├── gameSelect.ts
│   │   │   ├── gameSelection.ts
│   │   │   ├── gameSelector.ts
│   │   │   ├── home.ts
│   │   │   ├── login.ts
│   │   │   ├── play.ts
│   │   │   ├── profile.ts
│   │   │   ├── ranking.ts
│   │   │   ├── register.ts
│   │   │   └── settings.ts
│   │   ├── types
│   │   │   └── google.d.ts
│   │   ├── utils
│   │   │   ├── gameStats.ts
│   │   │   └── safariPolyfills.ts
│   │   ├── auth.ts
│   │   ├── google-config.ts
│   │   ├── i18n.ts
│   │   ├── input.css
│   │   ├── main.ts
│   │   ├── router.ts
│   │   ├── safariPolyfills.ts
│   │   └── types.d.ts
│   ├── Dockerfile
│   ├── index.html
│   ├── nginx.conf
│   ├── package.json
│   ├── tailwind.config.js
│   ├── tsconfig.json
│   └── webpack.config.js
├── game-service
│   ├── src
│   │   ├── server.ts
│   │   └── server.ts.bak
│   ├── Dockerfile
│   ├── README.md
│   ├── package-lock.json
│   ├── package.json
│   ├── start-server.sh
│   └── tsconfig.json
├── nginx-waf
│   ├── modsecurity.conf
│   ├── nginx.conf
│   └── proxy_backend.conf
├── secrets
│   └── redis
│       └── password.txt
├── ssl
│   ├── localhost.crt
│   └── localhost.key
├── .env
├── Makefile
├── README.md
├── code.txt
├── docker-compose.yml
├── fix_gameOnline.js
├── nginx-proxy.conf
├── print_tree.sh
├── start-dev.sh
├── test-game-improvements.js
├── test-game.sh
├── test_auth_system.sh
├── test_browser.html
├── test_google_auth.sh
├── test_user_auth.js
└── usuarios.txt

24 directories, 99 files

[1;32m=== CONTENIDO DE ARCHIVOS DE TEXTO ===[0m

[1;34m=== ./test_browser.html ===[0m
<!DOCTYPE html>
<html>
<head>
    <title>Test Auth System</title>
    <script src="https://accounts.google.com/gsi/client" async defer></script>
</head>
<body>
    <h1>Test del Sistema de Autenticación</h1>
    
    <h2>Registro Manual</h2>
    <form id="registerForm">
        <input type="text" id="username" placeholder="Username" required><br><br>
        <input type="email" id="email" placeholder="Email" required><br><br>
        <input type="password" id="password" placeholder="Password" required><br><br>
        <button type="submit">Registrar</button>
    </form>
    
    <h2>Login Manual</h2>
    <form id="loginForm">
        <input type="email" id="loginEmail" placeholder="Email" required><br><br>
        <input type="password" id="loginPassword" placeholder="Password" required><br><br>
        <button type="submit">Login</button>
    </form>
    
    <h2>Google Sign-In</h2>
    <div id="g_id_onload"
         data-client_id="58128894262-ak29ohah5ovkh31dvp2srdbm16thp961.apps.googleusercontent.com"
         data-callback="handleCredentialResponse">
    </div>
    <div class="g_id_signin" data-type="standard"></div>

    <div id="result"></div>

    <script>
        function showResult(message, isError = false) {
            const result = document.getElementById('result');
            result.innerHTML = `<p style="color: ${isError ? 'red' : 'green'}">${message}</p>`;
        }

        // Registro
        document.getElementById('registerForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const username = document.getElementById('username').value;
            const email = document.getElementById('email').value;
            const password = document.getElementById('password').value;

            try {
                const response = await fetch('http://localhost:8001/auth/register', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ username, email, password })
                });

                const data = await response.json();
                if (response.ok) {
                    showResult('✅ Registro exitoso: ' + data.message);
                } else {
                    showResult('❌ Error en registro: ' + data.message, true);
                }
            } catch (error) {
                showResult('❌ Error de conexión: ' + error.message, true);
            }
        });

        // Login
        document.getElementById('loginForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const email = document.getElementById('loginEmail').value;
            const password = document.getElementById('loginPassword').value;

            try {
                const response = await fetch('http://localhost:8001/auth/login', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ email, password })
                });

                const data = await response.json();
                if (response.ok) {
                    showResult('✅ Login exitoso! Token: ' + data.token.substring(0, 50) + '...');
                    localStorage.setItem('jwt', data.token);
                } else {
                    showResult('❌ Error en login: ' + data.message, true);
                }
            } catch (error) {
                showResult('❌ Error de conexión: ' + error.message, true);
            }
        });

        // Google Sign-In
        function handleCredentialResponse(response) {
            fetch('http://localhost:8001/auth/google', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ token: response.credential })
            })
            .then(res => res.json())
            .then(data => {
                if (data.token) {
                    showResult('✅ Google Sign-In exitoso! Token: ' + data.token.substring(0, 50) + '...');
                    localStorage.setItem('jwt', data.token);
                } else {
                    showResult('❌ Error en Google Sign-In: ' + data.message, true);
                }
            })
            .catch(error => {
                showResult('❌ Error de conexión con Google: ' + error.message, true);
            });
        }
    </script>
</body>
</html>
[1;30m----------------------------------------[0m

[1;34m=== ./usuarios.txt ===[0m
- Manu con correo ardeiro@outlook.com y contraseña Temp.2
- Ardeiro con correo ardeiro@gmail.com y contraseña Temp.1
- HAL7000 con correo manuel.ardeiro@gmail.com y contraseña Temp.3
- Verdu con correo jorge.verdu.ruiz@gmail.com y contraseña pass.11
- David con correo david.aparicio247@hotmail.com y contraseña pass.22
- ManuFern con correo manufern@student.42madrid.com y contraseña pass.33
- Diego con correo diegorubiomorato@gmail.com y contraseña pass.44[1;30m----------------------------------------[0m

[1;34m=== ./secrets/redis/password.txt ===[0m
o-meu-contrasinal.42[1;30m----------------------------------------[0m

[1;34m=== ./game-service/start-server.sh ===[0m
#!/bin/bash

# Script para iniciar el servidor de juego sin Docker

echo "🚀 Iniciando servidor de juego..."

# Verificar si Node.js está instalado
if ! command -v node &> /dev/null; then
    echo "❌ Node.js no está instalado. Por favor, instala Node.js primero."
    exit 1
fi

# Verificar si las dependencias están instaladas
if [ ! -d "node_modules" ]; then
    echo "📦 Instalando dependencias..."
    npm install --no-bin-links
fi

# Iniciar el servidor
echo "🎮 Iniciando servidor en puerto 8000..."
npm run dev

echo "🎯 Servidor disponible en http://localhost:8000"
echo "🎮 Abre test/test_network.html en tu navegador para jugar"
[1;30m----------------------------------------[0m

[1;34m=== ./game-service/tsconfig.json ===[0m
{
  "compilerOptions": {
    "target": "es2020",
    "module": "NodeNext",
    "moduleResolution": "NodeNext",
    "outDir": "dist",
    "rootDir": "src",
    "esModuleInterop": true,
    "strict": true,
    "skipLibCheck": true
  },
  "ts-node": {
    "transpileOnly": true,
    "esm": true
  }
}
[1;30m----------------------------------------[0m

[1;34m=== ./game-service/src/server.ts.bak ===[0m
// 📦 Importamos Fastify, framework para crear servidores web en Node.js
import Fastify from 'fastify';

// 🔌 Plugin para WebSocket: nos permite comunicación en tiempo real con clientes
import websocket from '@fastify/websocket';

// 📁 Plugin para servir archivos estáticos
import fastifyStatic from '@fastify/static';

// 📁 Para manejar rutas de archivos
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// 🔐 Función para generar IDs únicos, para identificar a cada jugador y partida
import { randomUUID } from 'crypto';

// 🚀 Creamos el servidor Fastify, activamos el logger para ver qué pasa en consola
const fastify = Fastify({ logger: true });

// 🔧 Registramos el plugin WebSocket para que el servidor soporte conexiones en tiempo real
// Como esto es async, usamos await para que espere a que se configure bien
await fastify.register(websocket);

// 📁 Registramos el plugin de archivos estáticos para servir los archivos HTML del juego
await fastify.register(fastifyStatic, {
  root: path.join(__dirname, '..', 'test'),
  prefix: '/test/'
});

// 🔗 Ruta de prueba para verificar que el servidor funciona
fastify.get('/health', async (request, reply) => {
  return { status: 'ok', message: 'Game service is running', timestamp: new Date().toISOString() };
});

// 🎮 API REST para controlar el juego
// Obtener lista de partidas
fastify.get('/api/games', async (request, reply) => {
  const gamesList = Array.from(partidas.values()).map(game => ({
    id: game.id,
    nombre: game.nombre,
    jugadoresConectados: game.jugadores.size,
    capacidadMaxima: game.capacidadMaxima,
    enJuego: game.enJuego,
    puntuacion: game.puntuacion,
    gameMode: game.gameMode,
    maxPlayers: game.maxPlayers
  }));
  return { games: gamesList };
});

// Crear nueva partida
fastify.post('/api/games', async (request, reply) => {
  const body = request.body as { nombre?: string, gameMode?: 'pvp' | 'pve' | 'multiplayer', maxPlayers?: number };
  const partidaId = randomUUID();
  const nombre = body.nombre || `Partida ${partidas.size + 1}`;
  const gameMode = body.gameMode || 'pvp';
  const maxPlayers = body.maxPlayers || 2;
  
  const nuevaPartida = new GameState(partidaId, nombre, gameMode, maxPlayers);
  partidas.set(partidaId, nuevaPartida);
  
  fastify.log.info(`Partida ${partidaId} creada via API: ${nombre}`);
  
  return { 
    id: partidaId, 
    nombre, 
    gameMode, 
    maxPlayers,
    message: 'Partida creada exitosamente' 
  };
});

// Obtener estado de una partida específica
fastify.get('/api/games/:gameId', async (request, reply) => {
  const { gameId } = request.params as { gameId: string };
  const game = partidas.get(gameId);
  
  if (!game) {
    reply.status(404);
    return { error: 'Partida no encontrada' };
  }
  
  return game.obtenerEstadoCompletoJuego();
});

// Mover pala (simulando entrada de teclado)
fastify.post('/api/games/:gameId/move', async (request, reply) => {
  const { gameId } = request.params as { gameId: string };
  const body = request.body as { player: 1 | 2, direction: 'up' | 'down', distance?: number };
  
  const game = partidas.get(gameId);
  if (!game) {
    reply.status(404);
    return { error: 'Partida no encontrada' };
  }
  
  const { player, direction, distance = 10 } = body;
  const pala = player === 1 ? game.palas.jugador1 : game.palas.jugador2;
  
  if (direction === 'up') {
    pala.y = Math.max(0, pala.y - distance);
  } else {
    pala.y = Math.min(game.alto - game.palaAlto, pala.y + distance);
  }
  
  return { 
    success: true, 
    player, 
    newY: pala.y,
    message: `Jugador ${player} movido ${direction}` 
  };
});

// Agregar IA a una partida
fastify.post('/api/games/:gameId/ai', async (request, reply) => {
  const { gameId } = request.params as { gameId: string };
  const body = request.body as { player: 1 | 2, difficulty?: 'easy' | 'medium' | 'hard' };
  
  const game = partidas.get(gameId);
  if (!game) {
    reply.status(404);
    return { error: 'Partida no encontrada' };
  }
  
  const { player, difficulty = 'medium' } = body;
  
  // Verificar si ya existe un jugador humano en esa posición
  const humanPlayer = Array.from(game.jugadores.values()).find(j => j.numero === player && !j.esIA);
  if (humanPlayer) {
    reply.status(400);
    return { error: `Ya hay un jugador humano en la posición ${player}` };
  }
  
  game.addAIPlayer(player, difficulty);
  
  return { 
    success: true, 
    player, 
    difficulty,
    message: `IA agregada como jugador ${player} con dificultad ${difficulty}` 
  };
});

// Iniciar partida manualmente
fastify.post('/api/games/:gameId/start', async (request, reply) => {
  const { gameId } = request.params as { gameId: string };
  const game = partidas.get(gameId);
  
  if (!game) {
    reply.status(404);
    return { error: 'Partida no encontrada' };
  }
  
  if (game.enJuego || game.cuentaAtrasActiva) {
    reply.status(400);
    return { error: 'La partida ya está en curso' };
  }
  
  // Verificar condiciones según el tipo de partida
  if (game.gameMode === 'pve') {
    const jugadoresHumanos = Array.from(game.jugadores.values()).filter(j => !j.esIA);
    if (jugadoresHumanos.length < 1 || game.aiPlayers.size < 1) {
      reply.status(400);
      return { error: 'Se necesita 1 jugador humano y 1 IA para iniciar una partida PvE' };
    }
  } else {
    if (game.jugadores.size < 2) {
      reply.status(400);
      return { error: 'Se necesitan al menos 2 jugadores para iniciar' };
    }
  }
  
  game.iniciarCuentaAtrasInicial();
  
  return { 
    success: true, 
    message: 'Partida iniciada' 
  };
});

// Eliminar partida
fastify.delete('/api/games/:gameId', async (request, reply) => {
  const { gameId } = request.params as { gameId: string };
  const game = partidas.get(gameId);
  
  if (!game) {
    reply.status(404);
    return { error: 'Partida no encontrada' };
  }
  
  game.destroy();
  partidas.delete(gameId);
  
  return { 
    success: true, 
    message: 'Partida eliminada' 
  };
});

// 🧍 Estructuras para jugadores y observadores
type Jugador = {
  id: string,
  socket: WebSocket,
  numero: 1 | 2 | null, // Puede ser null si aún no está asignado a una partida
  partidaId: string | null, // Puede ser null si está en el lobby
  esIA: boolean // Indica si es un jugador controlado por IA
}

type Observador = {
  id: string,
  socket: WebSocket,
  viendoPartidaId: string | null // ID de la partida que está viendo (o null si en lobby global)
}

// 🤖 Clase AI para controlar jugadores automáticos
class AIPlayer {
  private gameState: GameState;
  private playerNumber: 1 | 2;
  private lastUpdateTime: number;
  private predictedBallY: number;
  private reactionTime: number;
  private maxSpeed: number;
  private difficulty: 'easy' | 'medium' | 'hard';
  private lastDecision: number;
  private targetY: number;
  private randomOffset: number;

  constructor(gameState: GameState, playerNumber: 1 | 2, difficulty: 'easy' | 'medium' | 'hard' = 'medium') {
    this.gameState = gameState;
    this.playerNumber = playerNumber;
    this.lastUpdateTime = Date.now();
    this.predictedBallY = gameState.alto / 2;
    this.difficulty = difficulty;
    this.lastDecision = 0;
    this.targetY = gameState.alto / 2;
    this.randomOffset = 0;
    
    // Configurar dificultad
    switch(difficulty) {
      case 'easy':
        this.reactionTime = 1000; // 1 segundo
        this.maxSpeed = 2;
        break;
      case 'medium':
        this.reactionTime = 500; // 0.5 segundos
        this.maxSpeed = 4;
        break;
      case 'hard':
        this.reactionTime = 200; // 0.2 segundos
        this.maxSpeed = 6;
        break;
    }
  }

  // Actualizar la IA cada segundo (según los requerimientos)
  update(): void {
    const currentTime = Date.now();
    if (currentTime - this.lastUpdateTime < this.reactionTime) {
      return; // No actualizar hasta que pase el tiempo de reacción
    }
    
    this.lastUpdateTime = currentTime;
    this.lastDecision = currentTime;
    
    // Obtener información del juego
    const pelota = this.gameState.pelota;
    const pala = this.playerNumber === 1 ? this.gameState.palas.jugador1 : this.gameState.palas.jugador2;
    
    // Predecir hacia dónde va la pelota
    this.predictBallPosition();
    
    // Agregar algo de error humano
    this.addHumanError();
    
    // Calcular nueva posición de la pala
    const centroPala = pala.y + this.gameState.palaAlto / 2;
    const targetY = this.predictedBallY + this.randomOffset;
    
    const diff = targetY - centroPala;
    const moveDistance = Math.min(Math.abs(diff), this.maxSpeed);
    
    if (Math.abs(diff) > 5) { // Zona muerta para evitar temblores
      if (diff > 0) {
        pala.y += moveDistance;
      } else {
        pala.y -= moveDistance;
      }
    }
    
    // Limitar movimiento dentro de los límites
    pala.y = Math.max(0, Math.min(this.gameState.alto - this.gameState.palaAlto, pala.y));
  }
  
  private predictBallPosition(): void {
    const pelota = this.gameState.pelota;
    const palaX = this.playerNumber === 1 ? this.gameState.palas.jugador1.x : this.gameState.palas.jugador2.x;
    
    // Calcular cuánto tiempo tardará la pelota en llegar a la pala
    const timeToReach = Math.abs(pelota.x - palaX) / Math.abs(pelota.vx);
    
    // Predecir posición Y considerando rebotes en paredes
    let predictedY = pelota.y + (pelota.vy * timeToReach);
    
    // Simular rebotes en paredes superior e inferior
    while (predictedY < 0 || predictedY > this.gameState.alto) {
      if (predictedY < 0) {
        predictedY = Math.abs(predictedY);
      } else if (predictedY > this.gameState.alto) {
        predictedY = this.gameState.alto - (predictedY - this.gameState.alto);
      }
    }
    
    this.predictedBallY = predictedY;
  }
  
  private addHumanError(): void {
    // Agregar error aleatorio basado en la dificultad
    const errorRange = this.difficulty === 'easy' ? 40 : this.difficulty === 'medium' ? 20 : 10;
    this.randomOffset = (Math.random() - 0.5) * errorRange;
  }
}

// 🎮 Estado del juego: ahora es una clase para crear múltiples instancias
class GameState {
  id: string
  nombre: string
  ancho: number
  alto: number
  palaAncho: number
  palaAlto: number
  pelota: { x: number, y: number, vx: number, vy: number, radio: number }
  palas: {
    jugador1: { x: number, y: number },
    jugador2: { x: number, y: number },
  }
  puntuacion: { jugador1: number, jugador2: number }
  rallyCount: number
  enJuego: boolean
  cuentaAtrasActiva: boolean
  cuentaAtrasValor: number
  jugadoresConectados: number
  capacidadMaxima: number
  intervalId: NodeJS.Timeout | null // Para controlar el bucle del juego
  countdownIntervalId: NodeJS.Timeout | null; // Para controlar el bucle de cuenta atrás
  aiUpdateIntervalId: NodeJS.Timeout | null; // Para controlar la actualización de IA
  aiPlayers: Map<number, AIPlayer> // Jugadores IA
  gameMode: 'pvp' | 'pve' | 'multiplayer' // Modo de juego
  maxPlayers: number // Número máximo de jugadores (2, 4, 6, etc.)
  createdAt: number // Timestamp de creación para limpieza

  // Referencias a los jugadores y observadores de ESTA partida
  jugadores: Map<string, Jugador> // Jugadores que pertenecen a esta partida
  observadores: Map<string, Observador> // Observadores que están viendo esta partida

  constructor(id: string, nombre: string, gameMode: 'pvp' | 'pve' | 'multiplayer' = 'pvp', maxPlayers: number = 2) {
    this.id = id
    this.nombre = nombre
    this.ancho = 600
    this.alto = 400
    this.palaAncho = 12
    this.palaAlto = 80
    this.pelota = { x: 300, y: 200, vx: 0, vy: 0, radio: 8 }
    this.palas = {
      jugador1: { x: 15, y: this.alto / 2 - this.palaAlto / 2 }, // Centrar pala al inicio
      jugador2: { x: this.ancho - 15 - this.palaAncho, y: this.alto / 2 - this.palaAlto / 2 }, // Centrar pala al inicio
    }
    this.puntuacion = { jugador1: 0, jugador2: 0 }
    this.rallyCount = 0
    this.enJuego = false // El juego no está activo hasta que empiece la cuenta atrás inicial
    this.cuentaAtrasActiva = false
    this.cuentaAtrasValor = 0
    this.jugadoresConectados = 0
    this.capacidadMaxima = Math.min(maxPlayers, 2) // Por ahora máximo 2 jugadores
    this.intervalId = null
    this.countdownIntervalId = null
    this.aiUpdateIntervalId = null
    this.aiPlayers = new Map<number, AIPlayer>()
    this.gameMode = gameMode
    this.maxPlayers = maxPlayers
    this.createdAt = Date.now()

    this.jugadores = new Map<string, Jugador>()
    this.observadores = new Map<string, Observador>()

    // Iniciar el bucle de juego para esta instancia
    this.intervalId = setInterval(() => this.update(), 1000 / 60); // 60 FPS
    
    // Iniciar bucle de actualización de IA cada segundo
    this.aiUpdateIntervalId = setInterval(() => this.updateAI(), 1000);
    
    // Si es modo PvE, agregar IA automáticamente como jugador 2
    if (gameMode === 'pve') {
      this.addAIPlayer(2, 'medium');
      fastify.log.info(`Partida PvE ${this.id}: IA agregada automáticamente como jugador 2`);
    }
  }

  // 🔄 Función para reiniciar la pelota después de un punto
  reiniciarPelota(direccion: number) {
    this.pelota.x = this.ancho / 2;
    this.pelota.y = this.alto / 2;
    this.pelota.vx = 5 * direccion; // Velocidad inicial de la pelota
    this.pelota.vy = (Math.random() - 0.5) * 5;
    // Asegurarse de que la velocidad vertical no sea cero
    if (this.pelota.vy === 0) {
        this.pelota.vy = (Math.random() > 0.5 ? 1 : -1) * 0.5;
    }
    this.rallyCount = 0; // Reiniciar cuenta de rally
    this.enJuego = true; // Asegurarse de que el juego esté marcado como en curso
  }

  // Función para enviar un mensaje a los jugadores de ESTA partida
  emitirATodosLosJugadores(mensaje: any) {
    for (const j of this.jugadores.values()) {
      if (j.socket && j.socket.readyState === j.socket.OPEN) {
        j.socket.send(JSON.stringify(mensaje));
      }
    }
  }

  // Función para enviar un mensaje a los observadores de ESTA partida
  emitirATodosLosObservadores(mensaje: any) {
    for (const o of this.observadores.values()) {
      if (o.socket.readyState === o.socket.OPEN) {
        o.socket.send(JSON.stringify(mensaje));
      }
    }
  }

  // Función para enviar un mensaje a todos los clientes (jugadores y observadores) de ESTA partida
  emitirATodosLosClientes(mensaje: any) {
    this.emitirATodosLosJugadores(mensaje);
    this.emitirATodosLosObservadores(mensaje);
  }

  // Método para agregar un jugador IA
  addAIPlayer(playerNumber: 1 | 2, difficulty: 'easy' | 'medium' | 'hard' = 'medium'): void {
    // Verificar si ya existe una IA en esta posición
    if (this.aiPlayers.has(playerNumber)) {
      // Si ya existe, solo actualizar la dificultad
      const existingAI = this.aiPlayers.get(playerNumber);
      if (existingAI) {
        this.aiPlayers.delete(playerNumber);
        fastify.log.info(`IA existente en posición ${playerNumber} reemplazada con dificultad ${difficulty}`);
      }
    }
    
    // Verificar si ya existe un jugador virtual IA en esta posición
    const existingAIPlayer = Array.from(this.jugadores.values()).find(j => j.numero === playerNumber && j.esIA);
    if (existingAIPlayer) {
      this.jugadores.delete(existingAIPlayer.id);
      fastify.log.info(`Jugador virtual IA existente en posición ${playerNumber} eliminado`);
    }
    
    const aiPlayer = new AIPlayer(this, playerNumber, difficulty);
    this.aiPlayers.set(playerNumber, aiPlayer);
    
    // Crear un jugador virtual para la IA
    const aiJugador: Jugador = {
      id: `ai_player_${playerNumber}`,
      socket: null as any, // IA no tiene socket
      numero: playerNumber,
      partidaId: this.id,
      esIA: true
    };
    
    this.jugadores.set(aiJugador.id, aiJugador);
    this.jugadoresConectados = this.jugadores.size;
    
    fastify.log.info(`IA agregada como jugador ${playerNumber} en partida ${this.id}`);
  }

  // Método para actualizar todos los jugadores IA
  updateAI(): void {
    for (const [playerNumber, aiPlayer] of this.aiPlayers) {
      if (this.enJuego) {
        aiPlayer.update();
      }
    }
  }

  // Verificar si un jugador es IA
  isAIPlayer(playerNumber: 1 | 2): boolean {
    return this.aiPlayers.has(playerNumber);
  }

  // Función para obtener el estado simplificado de ESTA partida para el lobby/observadores
  obtenerEstadoParaLobby() {
    return {
      id: this.id,
      nombre: this.nombre,
      jugadoresConectados: this.jugadores.size,
      capacidadMaxima: this.capacidadMaxima,
      enJuego: this.enJuego,
      puntuacion: this.puntuacion,
    };
  }

  // 🔁 Motor del juego para esta instancia
  update() {
    // Verificar condiciones para continuar el juego según el tipo de partida
    let puedeJugar = false;
    
    if (this.gameMode === 'pve') {
      // Para PvE, necesitamos 1 jugador humano + 1 IA
      const jugadoresHumanos = Array.from(this.jugadores.values()).filter(j => !j.esIA);
      puedeJugar = jugadoresHumanos.length === 1 && this.aiPlayers.size === 1;
    } else {
      // Para PvP, necesitamos al menos 2 jugadores
      puedeJugar = this.jugadores.size >= 2;
    }
    
    // Si no hay suficientes jugadores o el juego no está activo, o cuenta atrás
    if (!puedeJugar || !this.enJuego || this.cuentaAtrasActiva) {
      // Solo enviamos el estado si hay observadores o si hay al menos un jugador esperando
      if (this.observadores.size > 0 || this.jugadores.size > 0) {
        // Si no puede jugar y no está en cuenta atrás y no en juego, indicar espera
        if (!puedeJugar && !this.cuentaAtrasActiva && !this.enJuego) {
            this.emitirATodosLosJugadores({ tipo: 'estado_general', estado: 'esperando_jugador' });
        }
        // Enviar el estado actual del juego a todos los clientes (jugadores y observadores)
        this.emitirATodosLosJugadores({ tipo: 'estado', juego: this.obtenerEstadoCompletoJuego() });
        this.emitirATodosLosObservadores({ tipo: 'estado_partida_observada', juego: this.obtenerEstadoCompletoJuego() });
      }
      return; // Salimos de la función sin actualizar la lógica del juego
    }

    const pelota = this.pelota;

    // Las palas ya se actualizan con los mensajes 'mover' del cliente, solo se limita aquí
    this.palas.jugador1.y = Math.max(0, Math.min(this.alto - this.palaAlto, this.palas.jugador1.y));
    this.palas.jugador2.y = Math.max(0, Math.min(this.alto - this.palaAlto, this.palas.jugador2.y));


    // ⏩ Movemos la pelota sumando su velocidad a su posición actual
    pelota.x += pelota.vx;
    pelota.y += pelota.vy;

    // ⚽ Detección de puntos y reinicio de la pelota
    let puntoMarcado = false;
    if (pelota.x > this.ancho) {
      this.puntuacion.jugador1++;
      this.emitirATodosLosClientes({ tipo: 'sonido', evento: 'punto' });
      fastify.log.info(`Punto para Jugador 1 en ${this.id}. Marcador: ${this.puntuacion.jugador1}-${this.puntuacion.jugador2}`);
      puntoMarcado = true;
    }
    else if (pelota.x < 0) {
      this.puntuacion.jugador2++;
      this.emitirATodosLosClientes({ tipo: 'sonido', evento: 'punto' });
      fastify.log.info(`Punto para Jugador 2 en ${this.id}. Marcador: ${this.puntuacion.jugador1}-${this.puntuacion.jugador2}`);
      puntoMarcado = true;
    }
    
    // Verificar si el juego terminó ANTES de hacer return
    if (puntoMarcado) {
      // Lógica para terminar el juego (ej. a 5 puntos)
      if (this.puntuacion.jugador1 >= 5 || this.puntuacion.jugador2 >= 5) {
        this.stopGame(); // Detener el bucle del juego y cuenta atrás
        const winner = this.puntuacion.jugador1 >= 5 ? 'Jugador 1' : 'Jugador 2';
        const message = `¡Fin de la partida ${this.id}! Ganador: ${winner} (${this.puntuacion.jugador1}-${this.puntuacion.jugador2})`;
        fastify.log.info(message);
        
        const finalMessage = { tipo: 'juego_finalizado', mensaje: message, ganador: winner, partidaId: this.id };
        fastify.log.info(`Enviando mensaje de fin de juego: ${JSON.stringify(finalMessage)}`);
        fastify.log.info(`Jugadores conectados: ${this.jugadores.size}`);
        
        this.emitirATodosLosClientes(finalMessage);

        // Delay antes de reiniciar para asegurar que el mensaje llegue
        setTimeout(() => {
          // Reiniciar la partida para que pueda ser jugada de nuevo
          this.puntuacion = { jugador1: 0, jugador2: 0 };
          this.pelota = { x: this.ancho / 2, y: this.alto / 2, vx: 0, vy: 0, radio: 8 }; // Bola estática hasta el inicio
          this.palas = {
              jugador1: { x: 15, y: this.alto / 2 - this.palaAlto / 2 },
              jugador2: { x: this.ancho - 15 - this.palaAncho, y: this.alto / 2 - this.palaAlto / 2 }
          };
          this.rallyCount = 0;
          this.enJuego = false; // Marcar como no en juego hasta que se inicie de nuevo
          this.cuentaAtrasActiva = false;
          this.cuentaAtrasValor = 0;
          this.emitirActualizacionLobby(); // Actualizar el lobby con el estado de la partida reseteada
          fastify.log.info(`Partida ${this.id} reiniciada después de fin de juego`);
        }, 1000); // Esperar 1 segundo antes de reiniciar
        return; // Salir después de procesar el fin de juego
      } else {
        // Si no terminó el juego, reiniciar la pelota
        // La pelota va hacia quien NO marcó el punto
        const direccion = pelota.x > this.ancho ? 1 : -1; // Si salió por la derecha, va hacia la derecha (1), si salió por la izquierda, va hacia la izquierda (-1)
        this.reiniciarPelota(direccion);
        this.emitirActualizacionLobby(); // Actualizar lobby global
        return;
      }
    }

    // 🧱 Rebote con paredes superior e inferior
    if (pelota.y - pelota.radio <= 0) {
      pelota.y = pelota.radio;
      pelota.vy *= -1;
      this.emitirATodosLosClientes({ tipo: 'sonido', evento: 'pared' });
    } else if (pelota.y + pelota.radio >= this.alto) {
      pelota.y = this.alto - pelota.radio;
      pelota.vy *= -1;
      this.emitirATodosLosClientes({ tipo: 'sonido', evento: 'pared' });
    }

    // 🥅 Rebote con las palas
    const pala1 = this.palas.jugador1;
    const pala2 = this.palas.jugador2;

    // Rebote pala izquierda (jugador1)
    if (
      pelota.vx < 0 &&
      pelota.x - pelota.radio <= pala1.x + this.palaAncho &&
      pelota.x - pelota.radio > pala1.x && // Evitar doble rebote
      pelota.y + pelota.radio >= pala1.y &&
      pelota.y - pelota.radio <= pala1.y + this.palaAlto
    ) {
      pelota.x = pala1.x + this.palaAncho + pelota.radio; // Ajustar posición para evitar "sticking"
      this.rallyCount++;
      pelota.vx *= -1;

      const centroPala = pala1.y + this.palaAlto / 2;
      const distanciaCentro = pelota.y - centroPala;
      const normalizado = distanciaCentro / (this.palaAlto / 2);
      const maxVy = 5; // Velocidad Y máxima al rebotar

      const factorAumento = 1.08; // Factor de aceleración de la pelota
      const maxVelocidad = 9; // Velocidad máxima absoluta de la pelota
      pelota.vx = Math.min(maxVelocidad, pelota.vx * factorAumento); // Acelera
      pelota.vy = normalizado * maxVy; // Cambia dirección Y según donde golpea
      this.emitirATodosLosClientes({ tipo: 'sonido', evento: 'pala' });
    }

    // Rebote pala derecha (jugador2)
    else if (
      pelota.vx > 0 &&
      pelota.x + pelota.radio >= pala2.x &&
      pelota.x + pelota.radio < pala2.x + this.palaAncho && // Evitar doble rebote
      pelota.y + pelota.radio >= pala2.y &&
      pelota.y - pelota.radio <= pala2.y + this.palaAlto
    ) {
      pelota.x = pala2.x - pelota.radio; // Ajustar posición para evitar "sticking"
      this.rallyCount++;
      pelota.vx *= -1;

      const centroPala = pala2.y + this.palaAlto / 2;
      const distanciaCentro = pelota.y - centroPala;
      const normalizado = distanciaCentro / (this.palaAlto / 2);
      const maxVy = 5; // Velocidad Y máxima al rebotar

      const factorAumento = 1.08; // Factor de aceleración de la pelota
      const maxVelocidad = 9; // Velocidad máxima absoluta de la pelota
      pelota.vx = Math.max(-maxVelocidad, pelota.vx * factorAumento); // Acelera (negativo)
      pelota.vy = normalizado * maxVy; // Cambia dirección Y según donde golpea
      this.emitirATodosLosClientes({ tipo: 'sonido', evento: 'pala' });
    }

    // 📤 Enviamos el estado actualizado del juego a los jugadores y observadores
    this.emitirATodosLosJugadores({ tipo: 'estado', juego: this.obtenerEstadoCompletoJuego() });
    this.emitirATodosLosObservadores({ tipo: 'estado_partida_observada', juego: this.obtenerEstadoCompletoJuego() });
  }

  // Obtiene el estado completo del juego para ser enviado a los clientes
  obtenerEstadoCompletoJuego() {
    return {
      id: this.id,
      nombre: this.nombre,
      ancho: this.ancho,
      alto: this.alto,
      palaAncho: this.palaAncho,
      palaAlto: this.palaAlto,
      pelota: this.pelota,
      palas: this.palas,
      puntuacion: this.puntuacion,
      rallyCount: this.rallyCount,
      enJuego: this.enJuego,
      cuentaAtrasActiva: this.cuentaAtrasActiva,
      cuentaAtrasValor: this.cuentaAtrasValor,
      jugadoresConectados: this.jugadores.size,
      capacidadMaxima: this.capacidadMaxima,
    };
  }

  // Método para emitir la actualización de esta partida a TODOS los observadores del lobby principal y jugadores en el lobby
  emitirActualizacionLobby() {
    const listaPartidas = Array.from(partidas.values()).map(p => p.obtenerEstadoParaLobby());
    emitirATodosLosObservadoresDelLobby({
      tipo: 'partidas_disponibles',
      partidas: listaPartidas
    });
    emitirATodosLosJugadoresDelLobby({ // ¡NUEVO! Para jugadores en el lobby
        tipo: 'partidas_disponibles',
        partidas: listaPartidas
    });
  }

  // Lógica de inicio de cuenta atrás (solo al inicio de la partida)
  iniciarCuentaAtrasInicial() {
    this.cuentaAtrasActiva = true;
    this.cuentaAtrasValor = 3;
    this.pelota.vx = 0;
    this.pelota.vy = 0;
    fastify.log.info(`Partida ${this.id}: Dos jugadores conectados. Iniciando cuenta atrás inicial...`);
    this.emitirATodosLosClientes({ tipo: 'cuenta_atras', valor: this.cuentaAtrasValor });
    this.emitirATodosLosClientes({ tipo: 'sonido', evento: 'countdown' });
    this.emitirActualizacionLobby(); // Actualizar estado en lobby

    if (this.countdownIntervalId) {
        clearInterval(this.countdownIntervalId);
    }
    this.countdownIntervalId = setInterval(() => {
        this.cuentaAtrasValor--;
        if (this.cuentaAtrasValor > 0) {
            fastify.log.info(`Partida ${this.id}: Cuenta atrás: ${this.cuentaAtrasValor}`);
            this.emitirATodosLosClientes({ tipo: 'cuenta_atras', valor: this.cuentaAtrasValor });
            this.emitirATodosLosClientes({ tipo: 'sonido', evento: 'countdown' });
        } else {
            clearInterval(this.countdownIntervalId!);
            this.countdownIntervalId = null;
            this.cuentaAtrasActiva = false;
            this.enJuego = true; // Marcar juego como activo
            this.reiniciarPelota(1); // Inicia el primer saque
            fastify.log.info(`Partida ${this.id}: ¡Juego iniciado!`);
            this.emitirATodosLosClientes({ tipo: 'juego_iniciado', mensaje: '¡El juego ha comenzado!' });
            this.emitirATodosLosClientes({ tipo: 'sonido', evento: 'start' });
            this.emitirActualizacionLobby(); // Actualizar estado en lobby
        }
    }, 1000);
  }

  // Lógica de desconexión de jugador
  manejarDesconexionJugador(jugadorId: string) {
    this.jugadores.delete(jugadorId);
    this.jugadoresConectados = this.jugadores.size;
    fastify.log.info(`Jugador ${jugadorId} desconectado de partida ${this.id}. Jugadores restantes: ${this.jugadores.size}`);

    this.emitirActualizacionLobby(); // Notificar a los observadores y jugadores del lobby

    // Si un jugador se desconecta, el juego ya no puede continuar
    if (this.enJuego || this.cuentaAtrasActiva) {
        this.enJuego = false;
        this.cuentaAtrasActiva = false;
        if (this.countdownIntervalId) {
            clearInterval(this.countdownIntervalId);
            this.countdownIntervalId = null;
        }
        this.pelota.vx = 0;
        this.pelota.vy = 0;
        this.pelota.x = this.ancho / 2;
        this.pelota.y = this.alto / 2;
        this.emitirATodosLosClientes({ tipo: 'jugador_desconectado', mensaje: 'El otro jugador se ha desconectado. Esperando un nuevo oponente.' });
        fastify.log.info(`Partida ${this.id}: Juego detenido: un jugador se ha desconectado.`);
    }
    // Si queda un solo jugador, o si no queda ninguno, asegurarse de que el estado refleje "esperando"
    if (this.jugadores.size === 1) {
        this.emitirATodosLosJugadores({ tipo: 'estado_general', estado: 'esperando_jugador' });
        fastify.log.info(`Partida ${this.id}: Un jugador restante. Volviendo al estado de espera.`);
    } else if (this.jugadores.size === 0) {
        // Si no quedan jugadores, reiniciar puntuación para el próximo juego
        this.puntuacion = { jugador1: 0, jugador2: 0 };
        fastify.log.info(`Partida ${this.id}: Todos los jugadores desconectados. Puntuación reiniciada.`);
    }
  }

  // Método para detener el intervalo de actualización (cuando la partida ya no sea necesaria)
  stopGame() {
      this.enJuego = false;
      this.cuentaAtrasActiva = false;
      if (this.countdownIntervalId) {
          clearInterval(this.countdownIntervalId);
          this.countdownIntervalId = null;
      }
      this.pelota.vx = 0;
      this.pelota.vy = 0;
  }

  destroy() {
    if (this.intervalId) {
      clearInterval(this.intervalId);
      this.intervalId = null;
    }
    if (this.countdownIntervalId) {
        clearInterval(this.countdownIntervalId);
        this.countdownIntervalId = null;
    }
    if (this.aiUpdateIntervalId) {
        clearInterval(this.aiUpdateIntervalId);
        this.aiUpdateIntervalId = null;
    }
    this.jugadores.clear();
    this.observadores.clear();
    this.aiPlayers.clear();
    fastify.log.info(`Partida ${this.id} destruida.`);
  }
}


// 🕹️ Almacén de todas las partidas activas
const partidas = new Map<string, GameState>();
// Almacén global de observadores del lobby (distinto de los observadores de una partida específica)
const observadoresLobby = new Map<string, Observador>();
// ¡NUEVO! Almacén global de jugadores en el lobby (antes de unirse a una partida)
const jugadoresLobby = new Map<string, Jugador>();

// Helper para emitir a TODOS los observadores del lobby
function emitirATodosLosObservadoresDelLobby(mensaje: any) {
  for (const o of observadoresLobby.values()) {
      if (o.socket.readyState === o.socket.OPEN) {
          o.socket.send(JSON.stringify(mensaje));
      }
  }
}

// ¡NUEVO! Helper para emitir a TODOS los jugadores del lobby
function emitirATodosLosJugadoresDelLobby(mensaje: any) {
    for (const j of jugadoresLobby.values()) {
        if (j.socket.readyState === j.socket.OPEN) {
            j.socket.send(JSON.stringify(mensaje));
        }
    }
}

// Inicializar una partida de ejemplo al iniciar el servidor para que el visor siempre tenga algo que mostrar
function crearPartidaNueva(gameMode: 'pvp' | 'pve' | 'multiplayer' = 'pvp', maxPlayers: number = 2) {
    const partidaId = randomUUID();
    const nuevaPartida = new GameState(partidaId, `Partida de Pong ${partidas.size + 1}`, gameMode, maxPlayers);
    partidas.set(partidaId, nuevaPartida);
    fastify.log.info(`Partida ${partidaId} creada: ${nuevaPartida.nombre} (${gameMode})`);
    // Notificar a todos los observadores y jugadores del lobby que hay una nueva partida
    nuevaPartida.emitirActualizacionLobby();
    return nuevaPartida;
}

// 📡 Definimos la ruta WebSocket principal para JUGADORES: LOBBY
fastify.get('/pong/lobby', { websocket: true }, (connection, req) => {
    const id = randomUUID();
    const jugador: Jugador = { id, socket: connection.socket, numero: null, partidaId: null, esIA: false };
    jugadoresLobby.set(id, jugador);
    fastify.log.info(`Jugador ${id} conectado al lobby de jugadores.`);

    // Enviar la lista de partidas disponibles al nuevo jugador del lobby
    const listaPartidas = Array.from(partidas.values()).map(p => p.obtenerEstadoParaLobby());
    connection.socket.send(JSON.stringify({
        tipo: 'partidas_disponibles',
        partidas: listaPartidas
    }));

    connection.socket.on('message', (mensaje) => {
        try {
            const datos = JSON.parse(mensaje.toString());

            if (datos.tipo === 'crear_partida_y_unirse') {
                const { gameMode = 'pvp', maxPlayers = 2 } = datos;
                fastify.log.info(`Jugador ${id} solicita crear partida y unirse. Partidas actuales: ${partidas.size}`);
                const nuevaPartida = crearPartidaNueva(gameMode, maxPlayers); // Crea la partida
                fastify.log.info(`Partida ${nuevaPartida.id} creada por ${id}. Total partidas: ${partidas.size}`);
                // Informa al cliente que creó la partida a qué ID debe conectarse
                connection.socket.send(JSON.stringify({ tipo: 'conectar_a_partida', partidaId: nuevaPartida.id }));
                fastify.log.info(`Enviando instrucción a ${id} para conectar a partida ${nuevaPartida.id}`);
                // Remover el jugador del lobby ya que se va a una partida
                jugadoresLobby.delete(id);
                fastify.log.info(`Jugador ${id} removido del lobby. Jugadores en lobby: ${jugadoresLobby.size}`);
                // El cliente cerrará esta conexión al lobby y abrirá una nueva a la partida.
            } else if (datos.tipo === 'unirse_a_partida') {
                const partidaIdAUnirse = datos.partidaId;
                const partidaObjetivo = partidas.get(partidaIdAUnirse);

                if (!partidaObjetivo) {
                    connection.socket.send(JSON.stringify({ tipo: 'error', mensaje: 'La partida seleccionada no existe.' }));
                    return;
                }
                if (partidaObjetivo.jugadores.size >= partidaObjetivo.capacidadMaxima) {
                    connection.socket.send(JSON.stringify({ tipo: 'error', mensaje: 'La partida seleccionada está llena.' }));
                    return;
                }
                // Informa al cliente a qué ID de partida debe conectarse
                connection.socket.send(JSON.stringify({ tipo: 'conectar_a_partida', partidaId: partidaObjetivo.id }));
                // Remover el jugador del lobby ya que se va a una partida
                jugadoresLobby.delete(id);
                // El cliente cerrará esta conexión al lobby y abrirá una nueva a la partida.
            } else if (datos.tipo === 'get_partidas_disponibles') {
                // Reenviar la lista de partidas disponibles a este jugador del lobby específico
                const listaPartidasReenviar = Array.from(partidas.values()).map(p => p.obtenerEstadoParaLobby());
                connection.socket.send(JSON.stringify({
                    tipo: 'partidas_disponibles',
                    partidas: listaPartidasReenviar
                }));
                fastify.log.info(`Jugador ${id} en lobby solicitó actualizar lista de partidas.`);
            }
        } catch (e) {
            console.error('Mensaje inválido en lobby de jugadores:', mensaje.toString(), e);
        }
    });

    connection.socket.on('close', () => {
        jugadoresLobby.delete(id);
        fastify.log.info(`Jugador ${id} desconectado del lobby de jugadores.`);
        // No es necesario actualizar el lobby aquí, porque el cliente se reconecta
        // o simplemente abandona. La limpieza de partidas inactivas ya lo maneja.
    });

    connection.socket.on('error', (err) => {
        fastify.log.error(`Error en WebSocket de jugador ${id} en lobby: ${err.message}`);
    });
});

// 📡 Definimos ruta WebSocket para JUGADORES: PARTIDA ESPECÍFICA
fastify.get('/pong/:partidaId', { websocket: true }, (connection, req) => {
  const partidaId = (req.params as { partidaId: string }).partidaId;
  let partida = partidas.get(partidaId);

  // Si la partida no existe (ej. ID inválido, o fue limpiada), informar error y cerrar
  if (!partida) {
    connection.socket.send(JSON.stringify({ tipo: 'error', mensaje: `Partida ${partidaId} no encontrada o ya no existe.` }));
    connection.socket.close();
    fastify.log.info(`Conexión rechazada: partida ${partidaId} no existe.`);
    return;
  }

  // Para partidas PvE, verificar si hay espacio para el jugador humano
  if (partida.gameMode === 'pve') {
    // En PvE, contar solo jugadores humanos (no IA)
    const jugadoresHumanos = Array.from(partida.jugadores.values()).filter(j => !j.esIA);
    if (jugadoresHumanos.length >= 1) {
      connection.socket.send(JSON.stringify({ tipo: 'error', mensaje: 'Partida PvE llena. Solo puede haber un jugador humano.' }));
      connection.socket.close();
      fastify.log.info(`Conexión rechazada: partida PvE ${partidaId} ya tiene un jugador humano.`);
      return;
    }
  } else {
    // Para partidas PvP, verificar capacidad total
    if (partida.jugadores.size >= partida.capacidadMaxima) {
      connection.socket.send(JSON.stringify({ tipo: 'error', mensaje: 'Partida llena. Intenta otra o crea una nueva.' }));
      connection.socket.close();
      fastify.log.info(`Conexión rechazada: partida ${partidaId} está llena.`);
      return;
    }
  }

  const id = randomUUID();
  const numerosEnUso = new Set([...partida.jugadores.values()].map(j => j.numero));
  // Asigna el primer número disponible (1 o 2)
  const numeroJugador: 1 | 2 = numerosEnUso.has(1) ? 2 : 1;

  const jugador: Jugador = { id, socket: connection.socket, numero: numeroJugador, partidaId: partida.id, esIA: false };
  partida.jugadores.set(id, jugador);
  partida.jugadoresConectados = partida.jugadores.size; // Actualiza el contador de jugadores conectados

  fastify.log.info(`Jugador ${id} (número ${numeroJugador}) conectado a la partida ${partida.id}. Jugadores en partida: ${partida.jugadoresConectados}`);
  connection.socket.send(JSON.stringify({ tipo: 'bienvenida', id, numero: numeroJugador, partidaId: partida.id }));

  partida.emitirActualizacionLobby(); // Actualizar el lobby global (observadores y otros jugadores en lobby)

  // Iniciar cuenta atrás según el tipo de partida
  if (partida.gameMode === 'pve') {
    // Para PvE, iniciar cuando haya 1 jugador humano + 1 IA
    const jugadoresHumanos = Array.from(partida.jugadores.values()).filter(j => !j.esIA);
    if (jugadoresHumanos.length === 1 && partida.aiPlayers.size === 1 && !partida.enJuego && !partida.cuentaAtrasActiva) {
      partida.iniciarCuentaAtrasInicial();
    } else {
      connection.socket.send(JSON.stringify({ tipo: 'estado_general', estado: 'esperando_jugador' }));
    }
  } else {
    // Para PvP, iniciar cuando se alcance la capacidad máxima
    if (partida.jugadores.size === partida.capacidadMaxima && !partida.enJuego && !partida.cuentaAtrasActiva) {
      partida.iniciarCuentaAtrasInicial();
    } else {
      connection.socket.send(JSON.stringify({ tipo: 'estado_general', estado: 'esperando_jugador' }));
    }
  }

  connection.socket.on('message', (mensaje) => {
    try {
      if (!partida) return; // La partida podría haberse eliminado
      const datos = JSON.parse(mensaje.toString());
      if (datos.tipo === 'mover') {
        // El cliente envía la dirección del movimiento
        const pala = numeroJugador === 1 ? partida.palas.jugador1 : partida.palas.jugador2;
        const velocidadMovimiento = 5;
        
        if (datos.y < 0) {
          // Mover hacia arriba
          pala.y = Math.max(0, pala.y + datos.y);
        } else if (datos.y > 0) {
          // Mover hacia abajo
          pala.y = Math.min(partida.alto - partida.palaAlto, pala.y + datos.y);
        }
        
        fastify.log.debug(`Jugador ${numeroJugador} movido a Y: ${pala.y}`);
      }
    } catch (e) {
      console.error('Mensaje inválido:', mensaje.toString(), e);
    }
  });

  connection.socket.on('close', () => {
    partida?.manejarDesconexionJugador(id); // Usa el método de la instancia de partida
    // Lógica para limpiar partidas sin jugadores ni observadores
    if (partida?.jugadores.size === 0 && partida?.observadores.size === 0) {
        fastify.log.info(`Partida ${partida.id} vacía (sin jugadores ni observadores), eliminando.`);
        partida.destroy(); // Detener el intervalo de actualización
        partidas.delete(partida.id);
        // Notificar a observadores y jugadores del lobby que la partida fue eliminada
        partida.emitirActualizacionLobby(); // Llamar de nuevo a emitirActualizacionLobby para refrescar la lista
    }
  });

  connection.socket.on('error', (err) => {
    fastify.log.error(`Error en WebSocket de jugador ${id} en partida ${partidaId}: ${err.message}`);
  });
});

// Ruta WebSocket para observadores '/observar' (para el lobby principal de observadores y luego para observar partidas específicas)
fastify.get('/observar', { websocket: true }, (connection, req) => {
    const id = randomUUID();
    const observador: Observador = { id, socket: connection.socket, viendoPartidaId: null };
    observadoresLobby.set(id, observador); // Se conecta al lobby de observadores
    fastify.log.info(`Observador ${id} conectado al lobby.`);

    // Enviar la lista de partidas disponibles al nuevo observador
    const listaPartidas = Array.from(partidas.values()).map(p => p.obtenerEstadoParaLobby());
    connection.socket.send(JSON.stringify({
        tipo: 'partidas_disponibles',
        partidas: listaPartidas
    }));

    connection.socket.on('message', (message) => {
        try {
            const data = JSON.parse(message.toString());
            if (data.tipo === 'seleccionar_partida') {
                const partidaIdASeleccionar = data.partidaId;
                const partidaActual = partidas.get(partidaIdASeleccionar);

                if (partidaActual) {
                    fastify.log.info(`Observador ${id} seleccionó la partida: ${partidaIdASeleccionar}`);
                    // Remover observador de cualquier partida anterior que estuviera viendo
                    if (observador.viendoPartidaId) {
                        const oldPartida = partidas.get(observador.viendoPartidaId);
                        oldPartida?.observadores.delete(id);
                    }
                    // Asignar este observador a la nueva partida
                    partidaActual.observadores.set(id, observador);
                    observador.viendoPartidaId = partidaIdASeleccionar;
                    // Enviar un estado inicial de la partida al observador
                    connection.socket.send(JSON.stringify({ tipo: 'estado_partida_observada', juego: partidaActual.obtenerEstadoCompletoJuego() }));
                    // Actualizar el lobby porque el número de observadores de la partida ha cambiado
                    partidaActual.emitirActualizacionLobby();
                } else {
                    fastify.log.warn(`Observador ${id} intentó ver partida no existente: ${partidaIdASeleccionar}`);
                    connection.socket.send(JSON.stringify({ tipo: 'error', mensaje: 'Partida no encontrada para observar.' }));
                    observador.viendoPartidaId = null; // Resetear lo que este observador estaba viendo
                }
            } else if (data.tipo === 'dejar_observar') {
                fastify.log.info(`Observador ${id} dejó de observar la partida: ${observador.viendoPartidaId}`);
                if (observador.viendoPartidaId) {
                    const oldPartida = partidas.get(observador.viendoPartidaId);
                    oldPartida?.observadores.delete(id);
                    oldPartida?.emitirActualizacionLobby(); // Actualizar el lobby al dejar de observar
                }
                observador.viendoPartidaId = null; // Este observador ya no está viendo ninguna partida específica
                // Enviar la lista de partidas actualizada para que el visor vuelva al modo lobby
                const listaPartidasActualizada = Array.from(partidas.values()).map(p => p.obtenerEstadoParaLobby());
                connection.socket.send(JSON.stringify({
                    tipo: 'partidas_disponibles',
                    partidas: listaPartidasActualizada
                }));
            } else if (data.tipo === 'crear_partida') {
                const nuevaPartida = crearPartidaNueva();
                connection.socket.send(JSON.stringify({ tipo: 'partida_creada', partidaId: nuevaPartida.id, nombre: nuevaPartida.nombre }));
                fastify.log.info(`Partida ${nuevaPartida.id} creada por solicitud del observador ${id}.`);
                // La función crearPartidaNueva ya llama a emitirActualizacionLobby()
            } else if (data.tipo === 'get_partidas_disponibles') {
                // Reenviar la lista de partidas disponibles a este observador específico
                const listaPartidasReenviar = Array.from(partidas.values()).map(p => p.obtenerEstadoParaLobby());
                connection.socket.send(JSON.stringify({
                    tipo: 'partidas_disponibles',
                    partidas: listaPartidasReenviar
                }));
                fastify.log.info(`Observador ${id} solicitó actualizar lista de partidas.`);
            }
        } catch (e) {
            console.error(`Mensaje inválido del observador ${id}: ${message.toString()}`, e);
        }
    });

    connection.socket.on('close', () => {
        fastify.log.info(`Observador ${id} desconectado del lobby.`);
        // Si el observador estaba viendo una partida específica, removerlo de esa partida
        if (observador.viendoPartidaId) {
            const partida = partidas.get(observador.viendoPartidaId);
            partida?.observadores.delete(id);
            partida?.emitirActualizacionLobby(); // Notificar a los lobbies que el número de observadores de la partida cambió
        }
        observadoresLobby.delete(id); // Eliminar del mapa global de observadores del lobby
        // La limpieza periódica se encargará de las partidas vacías.
        // También podemos forzar una actualización del lobby si el observador estaba viendo una partida
        // Y esa partida queda vacía y se elimina. Esto lo cubre el clean-up.
    });

    connection.socket.on('error', (err) => {
        fastify.log.error(`Error en WebSocket de observador ${id}: ${err.message}`);
    });
});

// 🚀 Iniciamos el servidor Fastify
try {
  await fastify.listen({ port: 8000, host: '0.0.0.0' }); // Escucha en todas las interfaces de red
  
  // Crear una partida inicial para que siempre haya al menos una disponible
  const partidaInicial = crearPartidaNueva();
  fastify.log.info(`Servidor iniciado. Partida inicial creada: ${partidaInicial.id}`);
  
} catch (err) {
  fastify.log.error(err);
  process.exit(1);
}

// Limpieza periódica de partidas inactivas (sin jugadores ni observadores conectados)
setInterval(() => {
    let changed = false;
    for (const [gameId, game] of partidas.entries()) {
        // Solo limpiar partidas que estén completamente vacías por más de 2 minutos
        if (game.jugadores.size === 0 && game.observadores.size === 0) {
            // Agregar timestamp de creación para evitar limpieza prematura
            const now = Date.now();
            if (!game.createdAt) {
                game.createdAt = now;
            }
            
            // Solo limpiar después de 2 minutos de inactividad
            if (now - game.createdAt > 120000) {
                fastify.log.info(`Limpiando partida inactiva: ${gameId} (inactiva por ${(now - game.createdAt)/1000}s)`);
                game.destroy();
                partidas.delete(gameId);
                changed = true;
            }
        } else {
            // Si hay jugadores/observadores, resetear el timestamp
            game.createdAt = Date.now();
        }
    }
    
    // Asegurar que siempre haya al menos una partida disponible
    if (partidas.size === 0) {
        const nuevaPartida = crearPartidaNueva();
        fastify.log.info(`No hay partidas disponibles. Creando nueva partida: ${nuevaPartida.id}`);
        changed = true;
    }
    
    if (changed) {
        // Si se eliminaron partidas, actualizar ambos lobbies
        const listaPartidas = Array.from(partidas.values()).map(p => p.obtenerEstadoParaLobby());
        emitirATodosLosObservadoresDelLobby({ tipo: 'partidas_disponibles', partidas: listaPartidas });
        emitirATodosLosJugadoresDelLobby({ tipo: 'partidas_disponibles', partidas: listaPartidas });
    }
}, 60000); // Ejecutar cada 60 segundos
[1;30m----------------------------------------[0m

[1;34m=== ./game-service/src/server.ts ===[0m
import Fastify from 'fastify';
import fastifyWebsocket from '@fastify/websocket';
import { v4 as uuidv4 } from 'uuid';
import { WebSocket } from 'ws';

const fastify = Fastify({
  logger: true
});

// Registrar el plugin de WebSocket
fastify.register(fastifyWebsocket, {
  options: {
    maxPayload: 1048576,
    verifyClient: (info) => {
      console.log('WebSocket client attempting to connect:', info.origin);
      return true;
    }
  }
});

// Configurar CORS
fastify.register(require('@fastify/cors'), {
  origin: ['http://localhost:3000', 'http://localhost:3001'],
  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],
  credentials: true
});

// Interfaces para manejar conexiones
interface ClientConnection {
  id: string;
  ws: WebSocket;
  gameId?: string;
  playerNumber?: 1 | 2;
  isAI?: boolean;
}

interface GameConnections {
  [gameId: string]: {
    players: ClientConnection[];
    gameState: GameState;
  };
}

// Almacenar las conexiones de los clientes
const connections: Map<string, ClientConnection> = new Map();
const gameConnections: GameConnections = {};

// Función para enviar mensaje a un cliente específico
function sendToClient(clientId: string, message: any): void {
  const connection = connections.get(clientId);
  if (connection && connection.ws.readyState === WebSocket.OPEN) {
    connection.ws.send(JSON.stringify(message));
  }
}

// Función para enviar mensaje a todos los clientes de un juego
function sendToGameClients(gameId: string, message: any): void {
  const gameConnection = gameConnections[gameId];
  if (gameConnection) {
    gameConnection.players.forEach(player => {
      if (player.ws.readyState === WebSocket.OPEN) {
        player.ws.send(JSON.stringify(message));
      }
    });
  }
}

// Función para generar posición aleatoria de pelota
function randomBallPosition() {
  return {
    x: 400,
    y: 300,
    vx: (Math.random() > 0.5 ? 1 : -1) * (3 + Math.random() * 2),
    vy: (Math.random() > 0.5 ? 1 : -1) * (2 + Math.random() * 2),
    radio: 10
  };
}

// Función para resetear pelota
function resetBall(gameState: GameState) {
  const newBall = randomBallPosition();
  gameState.pelota = newBall;
  gameState.rallyCount = 0;
}

// Función para generar un ID único para el juego
function generateGameId(): string {
  return uuidv4();
}

// Función para crear un nuevo estado de juego
function createGameState(gameId: string, gameMode: 'pvp' | 'pve' | 'multiplayer' = 'pvp'): GameState {
  return new GameState(gameId, gameMode);
}

// Función para obtener o crear un juego
function getOrCreateGame(gameId?: string, gameMode: 'pvp' | 'pve' | 'multiplayer' = 'pvp'): { gameId: string; gameState: GameState } {
  if (gameId && gameConnections[gameId]) {
    return { gameId, gameState: gameConnections[gameId].gameState };
  }
  
  const newGameId = gameId || generateGameId();
  const newGameState = createGameState(newGameId, gameMode);
  gameConnections[newGameId] = {
    players: [],
    gameState: newGameState
  };
  return { gameId: newGameId, gameState: newGameState };
}

// Función para detectar colisiones
function detectCollision(pelota: any, pala: any, gameState: GameState): boolean {
  return (
    pelota.x - pelota.radio < pala.x + gameState.palaAncho &&
    pelota.x + pelota.radio > pala.x &&
    pelota.y - pelota.radio < pala.y + gameState.palaAlto &&
    pelota.y + pelota.radio > pala.y
  );
}

// Función para manejar el rebote en las palas
function handlePaddleCollision(pelota: any, pala: any, gameState: GameState): void {
  // Calcular el punto de impacto relativo en la pala (-1 a 1)
  const impactPoint = (pelota.y - (pala.y + gameState.palaAlto / 2)) / (gameState.palaAlto / 2);
  
  // Cambiar dirección horizontal
  pelota.vx = -pelota.vx;
  
  // Ajustar velocidad vertical basada en el punto de impacto
  const maxAngle = Math.PI / 3; // 60 grados máximo
  const angle = impactPoint * maxAngle;
  
  // Aumentar velocidad ligeramente para hacer el juego más dinámico
  const currentSpeed = Math.sqrt(pelota.vx * pelota.vx + pelota.vy * pelota.vy);
  const newSpeed = Math.min(currentSpeed * 1.05, 8); // Limitar velocidad máxima
  
  pelota.vx = Math.cos(angle) * newSpeed * (pelota.vx > 0 ? 1 : -1);
  pelota.vy = Math.sin(angle) * newSpeed;
  
  // Incrementar contador de rally
  gameState.rallyCount++;
}

// Función para actualizar la física del juego
function updateGamePhysics(gameState: GameState): void {
  if (!gameState.enJuego) return;

  const pelota = gameState.pelota;
  const palas = gameState.palas;

  // Actualizar posición de la pelota
  pelota.x += pelota.vx;
  pelota.y += pelota.vy;

  // Rebote en paredes superior e inferior
  if (pelota.y - pelota.radio <= 0 || pelota.y + pelota.radio >= gameState.alto) {
    pelota.vy = -pelota.vy;
    pelota.y = Math.max(pelota.radio, Math.min(gameState.alto - pelota.radio, pelota.y));
  }

  // Detectar colisiones con las palas
  if (detectCollision(pelota, palas.jugador1, gameState)) {
    handlePaddleCollision(pelota, palas.jugador1, gameState);
    pelota.x = palas.jugador1.x + gameState.palaAncho + pelota.radio; // Evitar que se pegue
  } else if (detectCollision(pelota, palas.jugador2, gameState)) {
    handlePaddleCollision(pelota, palas.jugador2, gameState);
    pelota.x = palas.jugador2.x - pelota.radio; // Evitar que se pegue
  }

  // Detectar puntos (pelota sale por los lados)
  if (pelota.x < 0) {
    gameState.puntuacion.jugador2++;
    resetBall(gameState);
    sendToGameClients(gameState.id, {
      tipo: 'puntuacion',
      puntuacion: gameState.puntuacion
    });
  } else if (pelota.x > gameState.ancho) {
    gameState.puntuacion.jugador1++;
    resetBall(gameState);
    sendToGameClients(gameState.id, {
      tipo: 'puntuacion',
      puntuacion: gameState.puntuacion
    });
  }

  // Enviar estado actualizado a todos los clientes
  sendToGameClients(gameState.id, {
    tipo: 'estado',
    estado: {
      pelota: gameState.pelota,
      palas: gameState.palas,
      puntuacion: gameState.puntuacion,
      rallyCount: gameState.rallyCount
    }
  });
}

// Función para iniciar el bucle del juego
function startGameLoop(gameState: GameState): void {
  if (gameState.intervalId) {
    clearInterval(gameState.intervalId);
  }
  
  gameState.intervalId = setInterval(() => {
    updateGamePhysics(gameState);
  }, 16); // ~60 FPS
}

// Función para detener el bucle del juego
function stopGameLoop(gameState: GameState): void {
  if (gameState.intervalId) {
    clearInterval(gameState.intervalId);
    gameState.intervalId = null;
  }
  if (gameState.countdownIntervalId) {
    clearInterval(gameState.countdownIntervalId);
    gameState.countdownIntervalId = null;
  }
  if (gameState.aiUpdateIntervalId) {
    clearInterval(gameState.aiUpdateIntervalId);
    gameState.aiUpdateIntervalId = null;
  }
}

// Función para iniciar cuenta atrás
function startCountdown(gameState: GameState): void {
  gameState.cuentaAtrasActiva = true;
  gameState.cuentaAtrasValor = 3;
  gameState.enJuego = false;
  
  // Enviar estado inicial de cuenta atrás
  sendToGameClients(gameState.id, {
    tipo: 'cuentaAtras',
    valor: gameState.cuentaAtrasValor
  });
  
  gameState.countdownIntervalId = setInterval(() => {
    gameState.cuentaAtrasValor--;
    
    if (gameState.cuentaAtrasValor > 0) {
      sendToGameClients(gameState.id, {
        tipo: 'cuentaAtras',
        valor: gameState.cuentaAtrasValor
      });
    } else {
      // Terminar cuenta atrás e iniciar juego
      gameState.cuentaAtrasActiva = false;
      gameState.enJuego = true;
      
      sendToGameClients(gameState.id, {
        tipo: 'iniciarJuego'
      });
      
      if (gameState.countdownIntervalId) {
        clearInterval(gameState.countdownIntervalId);
        gameState.countdownIntervalId = null;
      }
      
      // Iniciar bucle del juego
      startGameLoop(gameState);
    }
  }, 1000); // 1 segundo entre cada número
}

// Función para verificar si el juego puede iniciar
function canStartGame(gameState: GameState): boolean {
  return gameState.jugadoresConectados >= 2 && !gameState.enJuego && !gameState.cuentaAtrasActiva;
}

// Función para manejar el movimiento de las palas
function handlePlayerMovement(gameState: GameState, playerNumber: 1 | 2, direction: 'arriba' | 'abajo'): void {
  const pala = playerNumber === 1 ? gameState.palas.jugador1 : gameState.palas.jugador2;
  const velocidad = 8; // Velocidad de movimiento
  
  if (direction === 'arriba') {
    pala.y = Math.max(0, pala.y - velocidad);
  } else if (direction === 'abajo') {
    pala.y = Math.min(gameState.alto - gameState.palaAlto, pala.y + velocidad);
  }
}

// 🤖 Clase para manejar la IA
class AIPlayer {
  private gameState: GameState;
  private playerNumber: 1 | 2;
  private lastUpdateTime: number;
  private predictedBallY: number;
  private reactionTime: number;
  private difficulty: 'easy' | 'medium' | 'hard';
  private lastDecision: number;
  private randomOffset: number;
  private clientId: string;

  constructor(gameState: GameState, playerNumber: 1 | 2, clientId: string, difficulty: 'easy' | 'medium' | 'hard' = 'medium') {
    this.gameState = gameState;
    this.playerNumber = playerNumber;
    this.clientId = clientId;
    this.lastUpdateTime = Date.now();
    this.predictedBallY = gameState.alto / 2;
    this.difficulty = difficulty;
    this.lastDecision = 0;
    this.randomOffset = 0;
    
    // Configurar dificultad
    switch(difficulty) {
      case 'easy':
        this.reactionTime = 1000; // 1 segundo
        break;
      case 'medium':
        this.reactionTime = 500; // 0.5 segundos
        break;
      case 'hard':
        this.reactionTime = 200; // 0.2 segundos
        break;
    }
  }

  // Actualizar la IA cada segundo (según los requerimientos)
  update(): void {
    const currentTime = Date.now();
    if (currentTime - this.lastUpdateTime < this.reactionTime) {
      return; // No actualizar hasta que pase el tiempo de reacción
    }
    
    this.lastUpdateTime = currentTime;
    this.lastDecision = currentTime;
    
    // Obtener información del juego
    const pelota = this.gameState.pelota;
    const pala = this.playerNumber === 1 ? this.gameState.palas.jugador1 : this.gameState.palas.jugador2;
    
    // Predecir hacia dónde va la pelota
    this.predictBallPosition();
    
    // Agregar algo de error humano
    this.addHumanError();
    
    // Calcular la decisión de movimiento
    const centroPala = pala.y + this.gameState.palaAlto / 2;
    const targetY = this.predictedBallY + this.randomOffset;
    
    const diff = targetY - centroPala;
    
    // Simular entrada de teclado enviando mensaje de movimiento
    if (Math.abs(diff) > 20) { // Zona muerta para evitar temblores
      const direction = diff > 0 ? 'abajo' : 'arriba';
      this.simulateKeyPress(direction);
    }
  }
  
  private simulateKeyPress(direction: 'arriba' | 'abajo'): void {
    // Simular el envío de un mensaje de movimiento como lo haría un jugador humano
    const message = {
      tipo: 'mover',
      jugador: this.playerNumber,
      direccion: direction
    };
    
    // Procesar el mensaje como si viniera del cliente
    this.processMovementMessage(message);
  }
  
  private processMovementMessage(message: any): void {
    // Procesar el mensaje de movimiento de la IA
    handlePlayerMovement(this.gameState, this.playerNumber, message.direccion);
  }
  
  private predictBallPosition(): void {
    const pelota = this.gameState.pelota;
    const palaX = this.playerNumber === 1 ? this.gameState.palas.jugador1.x : this.gameState.palas.jugador2.x;
    
    // Calcular cuánto tiempo tardará la pelota en llegar a la pala
    const timeToReach = Math.abs(pelota.x - palaX) / Math.abs(pelota.vx);
    
    // Predecir posición Y considerando rebotes en paredes
    let predictedY = pelota.y + (pelota.vy * timeToReach);
    
    // Simular rebotes en paredes superior e inferior
    while (predictedY < 0 || predictedY > this.gameState.alto) {
      if (predictedY < 0) {
        predictedY = Math.abs(predictedY);
      } else if (predictedY > this.gameState.alto) {
        predictedY = this.gameState.alto - (predictedY - this.gameState.alto);
      }
    }
    
    this.predictedBallY = predictedY;
  }
  
  private addHumanError(): void {
    // Agregar error aleatorio basado en la dificultad
    const errorRange = this.difficulty === 'easy' ? 40 : this.difficulty === 'medium' ? 20 : 10;
    this.randomOffset = (Math.random() - 0.5) * errorRange;
  }
}

// 🎮 Estado del juego: ahora es una clase para crear múltiples instancias
class GameState {
  id: string
  nombre: string
  ancho: number
  alto: number
  palaAncho: number
  palaAlto: number
  pelota: { x: number, y: number, vx: number, vy: number, radio: number }
  palas: {
    jugador1: { x: number, y: number },
    jugador2: { x: number, y: number },
  }
  puntuacion: { jugador1: number, jugador2: number }
  rallyCount: number
  enJuego: boolean
  cuentaAtrasActiva: boolean
  cuentaAtrasValor: number
  jugadoresConectados: number
  capacidadMaxima: number
  intervalId: NodeJS.Timeout | null // Para controlar el bucle del juego
  countdownIntervalId: NodeJS.Timeout | null; // Para controlar el bucle de cuenta atrás
  aiUpdateIntervalId: NodeJS.Timeout | null; // Para controlar la actualización de IA
  aiPlayers: Map<number, AIPlayer> // Jugadores IA
  gameMode: 'pvp' | 'pve' | 'multiplayer' // Modo de juego

  constructor(id: string, gameMode: 'pvp' | 'pve' | 'multiplayer' = 'pvp') {
    this.id = id;
    this.nombre = `Juego ${id}`;
    this.ancho = 800;
    this.alto = 600;
    this.palaAncho = 20;
    this.palaAlto = 100;
    this.pelota = randomBallPosition();
    this.palas = {
      jugador1: { x: 50, y: this.alto / 2 - 50 },
      jugador2: { x: this.ancho - 70, y: this.alto / 2 - 50 },
    };
    this.puntuacion = { jugador1: 0, jugador2: 0 };
    this.rallyCount = 0;
    this.enJuego = false;
    this.cuentaAtrasActiva = false;
    this.cuentaAtrasValor = 3;
    this.jugadoresConectados = 0;
    this.capacidadMaxima = 2;
    this.intervalId = null;
    this.countdownIntervalId = null;
    this.aiUpdateIntervalId = null;
    this.aiPlayers = new Map();
    this.gameMode = gameMode;
  }

  // Método para agregar un jugador IA
  addAIPlayer(playerNumber: 1 | 2, clientId: string, difficulty: 'easy' | 'medium' | 'hard' = 'medium'): void {
    const aiPlayer = new AIPlayer(this, playerNumber, clientId, difficulty);
    this.aiPlayers.set(playerNumber, aiPlayer);
    
    // Iniciar el bucle de actualización de IA si no está ya corriendo
    if (!this.aiUpdateIntervalId) {
      this.aiUpdateIntervalId = setInterval(() => {
        this.aiPlayers.forEach(ai => ai.update());
      }, 100); // Actualizar cada 100ms para mayor responsividad
    }
  }

  // Método para remover un jugador IA
  removeAIPlayer(playerNumber: 1 | 2): void {
    this.aiPlayers.delete(playerNumber);
    
    // Si no quedan jugadores IA, detener el bucle
    if (this.aiPlayers.size === 0 && this.aiUpdateIntervalId) {
      clearInterval(this.aiUpdateIntervalId);
      this.aiUpdateIntervalId = null;
    }
  }

  // Método para limpiar todos los intervalos
  cleanup(): void {
    if (this.intervalId) {
      clearInterval(this.intervalId);
      this.intervalId = null;
    }
    if (this.countdownIntervalId) {
      clearInterval(this.countdownIntervalId);
      this.countdownIntervalId = null;
    }
    if (this.aiUpdateIntervalId) {
      clearInterval(this.aiUpdateIntervalId);
      this.aiUpdateIntervalId = null;
    }
    this.aiPlayers.clear();
  }
}

// 🌐 Configurar la ruta de WebSocket
fastify.register(async function (fastify) {
  fastify.get('/ws', { websocket: true }, (connection, request) => {
    const clientId = uuidv4();
    const clientConnection: ClientConnection = {
      id: clientId,
      ws: connection.socket
    };
    
    connections.set(clientId, clientConnection);
    
    console.log(`Cliente conectado: ${clientId}`);
    
    // Enviar confirmación de conexión
    connection.socket.send(JSON.stringify({
      tipo: 'conexion',
      clientId: clientId,
      mensaje: 'Conectado al servidor de juego'
    }));

    connection.socket.on('message', (message) => {
      try {
        const data = JSON.parse(message.toString());
        console.log(`Mensaje recibido de ${clientId}:`, data);
        
        switch(data.tipo) {
          case 'unirseJuego':
            handleJoinGame(clientConnection, data);
            break;
          case 'crearJuego':
            handleCreateGame(clientConnection, data);
            break;
          case 'mover':
            handleMove(clientConnection, data);
            break;
          case 'iniciarJuego':
            handleStartGame(clientConnection, data);
            break;
          case 'obtenerJuegos':
            handleGetGames(clientConnection);
            break;
          default:
            console.log('Tipo de mensaje desconocido:', data.tipo);
        }
      } catch (error) {
        console.error('Error procesando mensaje:', error);
      }
    });

    connection.socket.on('close', () => {
      console.log(`Cliente desconectado: ${clientId}`);
      handleDisconnect(clientConnection);
      connections.delete(clientId);
    });
  });
});

// Función para manejar la creación de juego
function handleCreateGame(clientConnection: ClientConnection, data: any): void {
  const gameMode = data.gameMode || 'pvp';
  const { gameId, gameState } = getOrCreateGame(undefined, gameMode);
  
  // Agregar el cliente al juego
  clientConnection.gameId = gameId;
  clientConnection.playerNumber = 1;
  gameConnections[gameId].players.push(clientConnection);
  gameState.jugadoresConectados++;
  
  // Si es modo PvE, agregar IA como jugador 2
  if (gameMode === 'pve') {
    const aiClientId = uuidv4();
    const aiConnection: ClientConnection = {
      id: aiClientId,
      ws: clientConnection.ws, // Compartir la conexión para simplicidad
      gameId: gameId,
      playerNumber: 2,
      isAI: true
    };
    
    gameConnections[gameId].players.push(aiConnection);
    gameState.jugadoresConectados++;
    gameState.addAIPlayer(2, aiClientId, data.difficulty || 'medium');
  }
  
  sendToClient(clientConnection.id, {
    tipo: 'juegoCreado',
    gameId: gameId,
    playerNumber: clientConnection.playerNumber,
    gameMode: gameMode,
    estado: {
      pelota: gameState.pelota,
      palas: gameState.palas,
      puntuacion: gameState.puntuacion,
      jugadoresConectados: gameState.jugadoresConectados,
      enJuego: gameState.enJuego
    }
  });
  
  // Si el juego puede iniciar, empezar la cuenta atrás
  if (canStartGame(gameState)) {
    startCountdown(gameState);
  }
}

// Función para manejar la unión a un juego
function handleJoinGame(clientConnection: ClientConnection, data: any): void {
  const gameId = data.gameId;
  
  if (!gameConnections[gameId]) {
    sendToClient(clientConnection.id, {
      tipo: 'error',
      mensaje: 'Juego no encontrado'
    });
    return;
  }
  
  const gameState = gameConnections[gameId].gameState;
  
  if (gameState.jugadoresConectados >= gameState.capacidadMaxima) {
    sendToClient(clientConnection.id, {
      tipo: 'error',
      mensaje: 'Juego lleno'
    });
    return;
  }
  
  // Determinar número de jugador
  const playerNumber = gameState.jugadoresConectados + 1;
  
  clientConnection.gameId = gameId;
  clientConnection.playerNumber = playerNumber as 1 | 2;
  gameConnections[gameId].players.push(clientConnection);
  gameState.jugadoresConectados++;
  
  sendToClient(clientConnection.id, {
    tipo: 'juegoUnido',
    gameId: gameId,
    playerNumber: clientConnection.playerNumber,
    estado: {
      pelota: gameState.pelota,
      palas: gameState.palas,
      puntuacion: gameState.puntuacion,
      jugadoresConectados: gameState.jugadoresConectados,
      enJuego: gameState.enJuego
    }
  });
  
  // Notificar a otros jugadores
  sendToGameClients(gameId, {
    tipo: 'jugadorUnido',
    playerNumber: clientConnection.playerNumber,
    jugadoresConectados: gameState.jugadoresConectados
  });
  
  // Si el juego puede iniciar, empezar la cuenta atrás
  if (canStartGame(gameState)) {
    startCountdown(gameState);
  }
}

// Función para manejar el movimiento
function handleMove(clientConnection: ClientConnection, data: any): void {
  if (!clientConnection.gameId || !clientConnection.playerNumber) {
    return;
  }
  
  const gameState = gameConnections[clientConnection.gameId].gameState;
  if (!gameState.enJuego) {
    return;
  }
  
  handlePlayerMovement(gameState, clientConnection.playerNumber, data.direccion);
}

// Función para manejar el inicio de juego
function handleStartGame(clientConnection: ClientConnection, data: any): void {
  if (!clientConnection.gameId) {
    return;
  }
  
  const gameState = gameConnections[clientConnection.gameId].gameState;
  
  if (canStartGame(gameState)) {
    startCountdown(gameState);
  }
}

// Función para obtener la lista de juegos
function handleGetGames(clientConnection: ClientConnection): void {
  const gamesList = Object.keys(gameConnections).map(gameId => {
    const gameState = gameConnections[gameId].gameState;
    return {
      id: gameId,
      nombre: gameState.nombre,
      jugadoresConectados: gameState.jugadoresConectados,
      capacidadMaxima: gameState.capacidadMaxima,
      enJuego: gameState.enJuego,
      gameMode: gameState.gameMode
    };
  });
  
  sendToClient(clientConnection.id, {
    tipo: 'listaJuegos',
    juegos: gamesList
  });
}

// Función para manejar la desconexión
function handleDisconnect(clientConnection: ClientConnection): void {
  if (clientConnection.gameId) {
    const gameState = gameConnections[clientConnection.gameId].gameState;
    
    // Remover el cliente del juego
    gameConnections[clientConnection.gameId].players = gameConnections[clientConnection.gameId].players.filter(
      player => player.id !== clientConnection.id
    );
    
    gameState.jugadoresConectados--;
    
    // Remover jugador IA si existe
    if (clientConnection.playerNumber) {
      gameState.removeAIPlayer(clientConnection.playerNumber);
    }
    
    // Si no quedan jugadores, limpiar el juego
    if (gameState.jugadoresConectados <= 0) {
      stopGameLoop(gameState);
      gameState.cleanup();
      delete gameConnections[clientConnection.gameId];
    } else {
      // Notificar a otros jugadores
      sendToGameClients(clientConnection.gameId, {
        tipo: 'jugadorDesconectado',
        playerNumber: clientConnection.playerNumber,
        jugadoresConectados: gameState.jugadoresConectados
      });
    }
  }
}

// 🚀 Iniciar el servidor
const start = async () => {
  try {
    const port = process.env.PORT || 3001;
    await fastify.listen({ port: Number(port), host: '0.0.0.0' });
    console.log(`🎮 Servidor de juego funcionando en puerto ${port}`);
  } catch (err) {
    fastify.log.error(err);
    process.exit(1);
  }
};

start();
[1;30m----------------------------------------[0m

[1;34m=== ./game-service/package.json ===[0m
{
  "name": "game-service",
  "version": "1.0.0",
  "type": "module",
  "main": "dist/server.js",
  "scripts": {
    "dev": "node --watch --loader ts-node/esm --no-warnings src/server.ts",
    "build": "tsc",
    "start": "node dist/server.js"
  },
  "dependencies": {
    "@fastify/static": "^6.12.0",
    "@fastify/websocket": "^8.3.1",
    "fastify": "^4.27.2"
  },
  "devDependencies": {
    "ts-node": "^10.9.2",
    "ts-node-dev": "^2.0.0",
    "typescript": "^5.8.3"
  }
}
[1;30m----------------------------------------[0m

[1;34m=== ./game-service/package-lock.json ===[0m
{
  "name": "game-service",
  "version": "1.0.0",
  "lockfileVersion": 3,
  "requires": true,
  "packages": {
    "": {
      "name": "game-service",
      "version": "1.0.0",
      "dependencies": {
        "@fastify/websocket": "^8.3.1",
        "fastify": "^4.27.2"
      },
      "devDependencies": {
        "ts-node": "^10.9.2",
        "ts-node-dev": "^2.0.0",
        "typescript": "^5.8.3"
      }
    },
    "node_modules/@cspotcode/source-map-support": {
      "version": "0.8.1",
      "resolved": "https://registry.npmjs.org/@cspotcode/source-map-support/-/source-map-support-0.8.1.tgz",
      "integrity": "sha512-IchNf6dN4tHoMFIn/7OE8LWZ19Y6q/67Bmf6vnGREv8RSbBVb9LPJxEcnwrcwX6ixSvaiGoomAUvu4YSxXrVgw==",
      "dev": true,
      "dependencies": {
        "@jridgewell/trace-mapping": "0.3.9"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@fastify/ajv-compiler": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/@fastify/ajv-compiler/-/ajv-compiler-3.6.0.tgz",
      "integrity": "sha512-LwdXQJjmMD+GwLOkP7TVC68qa+pSSogeWWmznRJ/coyTcfe9qA05AHFSe1eZFwK6q+xVRpChnvFUkf1iYaSZsQ==",
      "dependencies": {
        "ajv": "^8.11.0",
        "ajv-formats": "^2.1.1",
        "fast-uri": "^2.0.0"
      }
    },
    "node_modules/@fastify/error": {
      "version": "3.4.1",
      "resolved": "https://registry.npmjs.org/@fastify/error/-/error-3.4.1.tgz",
      "integrity": "sha512-wWSvph+29GR783IhmvdwWnN4bUxTD01Vm5Xad4i7i1VuAOItLvbPAb69sb0IQ2N57yprvhNIwAP5B6xfKTmjmQ=="
    },
    "node_modules/@fastify/fast-json-stringify-compiler": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/@fastify/fast-json-stringify-compiler/-/fast-json-stringify-compiler-4.3.0.tgz",
      "integrity": "sha512-aZAXGYo6m22Fk1zZzEUKBvut/CIIQe/BapEORnxiD5Qr0kPHqqI69NtEMCme74h+at72sPhbkb4ZrLd1W3KRLA==",
      "dependencies": {
        "fast-json-stringify": "^5.7.0"
      }
    },
    "node_modules/@fastify/merge-json-schemas": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/@fastify/merge-json-schemas/-/merge-json-schemas-0.1.1.tgz",
      "integrity": "sha512-fERDVz7topgNjtXsJTTW1JKLy0rhuLRcquYqNR9rF7OcVpCa2OVW49ZPDIhaRRCaUuvVxI+N416xUoF76HNSXA==",
      "dependencies": {
        "fast-deep-equal": "^3.1.3"
      }
    },
    "node_modules/@fastify/websocket": {
      "version": "8.3.1",
      "resolved": "https://registry.npmjs.org/@fastify/websocket/-/websocket-8.3.1.tgz",
      "integrity": "sha512-hsQYHHJme/kvP3ZS4v/WMUznPBVeeQHHwAoMy1LiN6m/HuPfbdXq1MBJ4Nt8qX1YI+eVbog4MnOsU7MTozkwYA==",
      "dependencies": {
        "fastify-plugin": "^4.0.0",
        "ws": "^8.0.0"
      }
    },
    "node_modules/@jridgewell/resolve-uri": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz",
      "integrity": "sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==",
      "dev": true,
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/sourcemap-codec": {
      "version": "1.5.4",
      "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.4.tgz",
      "integrity": "sha512-VT2+G1VQs/9oz078bLrYbecdZKs912zQlkelYpuf+SXF+QvZDYJlbx/LSx+meSAwdDFnF8FVXW92AVjjkVmgFw==",
      "dev": true
    },
    "node_modules/@jridgewell/trace-mapping": {
      "version": "0.3.9",
      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.9.tgz",
      "integrity": "sha512-3Belt6tdc8bPgAtbcmdtNJlirVoTmEb5e2gC94PnkwEW9jI6CAHUeoG85tjWP5WquqfavoMtMwiG4P926ZKKuQ==",
      "dev": true,
      "dependencies": {
        "@jridgewell/resolve-uri": "^3.0.3",
        "@jridgewell/sourcemap-codec": "^1.4.10"
      }
    },
    "node_modules/@tsconfig/node10": {
      "version": "1.0.11",
      "resolved": "https://registry.npmjs.org/@tsconfig/node10/-/node10-1.0.11.tgz",
      "integrity": "sha512-DcRjDCujK/kCk/cUe8Xz8ZSpm8mS3mNNpta+jGCA6USEDfktlNvm1+IuZ9eTcDbNk41BHwpHHeW+N1lKCz4zOw==",
      "dev": true
    },
    "node_modules/@tsconfig/node12": {
      "version": "1.0.11",
      "resolved": "https://registry.npmjs.org/@tsconfig/node12/-/node12-1.0.11.tgz",
      "integrity": "sha512-cqefuRsh12pWyGsIoBKJA9luFu3mRxCA+ORZvA4ktLSzIuCUtWVxGIuXigEwO5/ywWFMZ2QEGKWvkZG1zDMTag==",
      "dev": true
    },
    "node_modules/@tsconfig/node14": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/@tsconfig/node14/-/node14-1.0.3.tgz",
      "integrity": "sha512-ysT8mhdixWK6Hw3i1V2AeRqZ5WfXg1G43mqoYlM2nc6388Fq5jcXyr5mRsqViLx/GJYdoL0bfXD8nmF+Zn/Iow==",
      "dev": true
    },
    "node_modules/@tsconfig/node16": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/@tsconfig/node16/-/node16-1.0.4.tgz",
      "integrity": "sha512-vxhUy4J8lyeyinH7Azl1pdd43GJhZH/tP2weN8TntQblOY+A0XbT8DJk1/oCPuOOyg/Ja757rG0CgHcWC8OfMA==",
      "dev": true
    },
    "node_modules/@types/node": {
      "version": "24.0.13",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-24.0.13.tgz",
      "integrity": "sha512-Qm9OYVOFHFYg3wJoTSrz80hoec5Lia/dPp84do3X7dZvLikQvM1YpmvTBEdIr/e+U8HTkFjLHLnl78K/qjf+jQ==",
      "dev": true,
      "peer": true,
      "dependencies": {
        "undici-types": "~7.8.0"
      }
    },
    "node_modules/@types/strip-bom": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/@types/strip-bom/-/strip-bom-3.0.0.tgz",
      "integrity": "sha512-xevGOReSYGM7g/kUBZzPqCrR/KYAo+F0yiPc85WFTJa0MSLtyFTVTU6cJu/aV4mid7IffDIWqo69THF2o4JiEQ==",
      "dev": true
    },
    "node_modules/@types/strip-json-comments": {
      "version": "0.0.30",
      "resolved": "https://registry.npmjs.org/@types/strip-json-comments/-/strip-json-comments-0.0.30.tgz",
      "integrity": "sha512-7NQmHra/JILCd1QqpSzl8+mJRc8ZHz3uDm8YV1Ks9IhK0epEiTw8aIErbvH9PI+6XbqhyIQy3462nEsn7UVzjQ==",
      "dev": true
    },
    "node_modules/abstract-logging": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/abstract-logging/-/abstract-logging-2.0.1.tgz",
      "integrity": "sha512-2BjRTZxTPvheOvGbBslFSYOUkr+SjPtOnrLP33f+VIWLzezQpZcqVg7ja3L4dBXmzzgwT+a029jRx5PCi3JuiA=="
    },
    "node_modules/acorn": {
      "version": "8.15.0",
      "resolved": "https://registry.npmjs.org/acorn/-/acorn-8.15.0.tgz",
      "integrity": "sha512-NZyJarBfL7nWwIq+FDL6Zp/yHEhePMNnnJ0y3qfieCrmNvYct8uvtiV41UvlSe6apAfk0fY1FbWx+NwfmpvtTg==",
      "dev": true,
      "bin": {
        "acorn": "bin/acorn"
      },
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/acorn-walk": {
      "version": "8.3.4",
      "resolved": "https://registry.npmjs.org/acorn-walk/-/acorn-walk-8.3.4.tgz",
      "integrity": "sha512-ueEepnujpqee2o5aIYnvHU6C0A42MNdsIDeqy5BydrkuC5R1ZuUFnm27EeFJGoEHJQgn3uleRvmTXaJgfXbt4g==",
      "dev": true,
      "dependencies": {
        "acorn": "^8.11.0"
      },
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/ajv": {
      "version": "8.17.1",
      "resolved": "https://registry.npmjs.org/ajv/-/ajv-8.17.1.tgz",
      "integrity": "sha512-B/gBuNg5SiMTrPkC+A2+cW0RszwxYmn6VYxB/inlBStS5nx6xHIt/ehKRhIMhqusl7a8LjQoZnjCs5vhwxOQ1g==",
      "dependencies": {
        "fast-deep-equal": "^3.1.3",
        "fast-uri": "^3.0.1",
        "json-schema-traverse": "^1.0.0",
        "require-from-string": "^2.0.2"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/epoberezkin"
      }
    },
    "node_modules/ajv-formats": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/ajv-formats/-/ajv-formats-2.1.1.tgz",
      "integrity": "sha512-Wx0Kx52hxE7C18hkMEggYlEifqWZtYaRgouJor+WMdPnQyEK13vgEWyVNup7SoeeoLMsr4kf5h6dOW11I15MUA==",
      "dependencies": {
        "ajv": "^8.0.0"
      },
      "peerDependencies": {
        "ajv": "^8.0.0"
      },
      "peerDependenciesMeta": {
        "ajv": {
          "optional": true
        }
      }
    },
    "node_modules/ajv/node_modules/fast-uri": {
      "version": "3.0.6",
      "resolved": "https://registry.npmjs.org/fast-uri/-/fast-uri-3.0.6.tgz",
      "integrity": "sha512-Atfo14OibSv5wAp4VWNsFYE1AchQRTv9cBGWET4pZWHzYshFSS9NQI6I57rdKn9croWVMbYFbLhJ+yJvmZIIHw==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/fastify"
        },
        {
          "type": "opencollective",
          "url": "https://opencollective.com/fastify"
        }
      ]
    },
    "node_modules/anymatch": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz",
      "integrity": "sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==",
      "dev": true,
      "dependencies": {
        "normalize-path": "^3.0.0",
        "picomatch": "^2.0.4"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/arg": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/arg/-/arg-4.1.3.tgz",
      "integrity": "sha512-58S9QDqG0Xx27YwPSt9fJxivjYl432YCwfDMfZ+71RAqUrZef7LrKQZ3LHLOwCS4FLNBplP533Zx895SeOCHvA==",
      "dev": true
    },
    "node_modules/atomic-sleep": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/atomic-sleep/-/atomic-sleep-1.0.0.tgz",
      "integrity": "sha512-kNOjDqAh7px0XWNI+4QbzoiR/nTkHAWNud2uvnJquD1/x5a7EQZMJT0AczqK0Qn67oY/TTQ1LbUKajZpp3I9tQ==",
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/avvio": {
      "version": "8.4.0",
      "resolved": "https://registry.npmjs.org/avvio/-/avvio-8.4.0.tgz",
      "integrity": "sha512-CDSwaxINFy59iNwhYnkvALBwZiTydGkOecZyPkqBpABYR1KqGEsET0VOOYDwtleZSUIdeY36DC2bSZ24CO1igA==",
      "dependencies": {
        "@fastify/error": "^3.3.0",
        "fastq": "^1.17.1"
      }
    },
    "node_modules/balanced-match": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
      "dev": true
    },
    "node_modules/binary-extensions": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.3.0.tgz",
      "integrity": "sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==",
      "dev": true,
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/brace-expansion": {
      "version": "1.1.12",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz",
      "integrity": "sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==",
      "dev": true,
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/braces": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.3.tgz",
      "integrity": "sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==",
      "dev": true,
      "dependencies": {
        "fill-range": "^7.1.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/buffer-from": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.2.tgz",
      "integrity": "sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==",
      "dev": true
    },
    "node_modules/chokidar": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-3.6.0.tgz",
      "integrity": "sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==",
      "dev": true,
      "dependencies": {
        "anymatch": "~3.1.2",
        "braces": "~3.0.2",
        "glob-parent": "~5.1.2",
        "is-binary-path": "~2.1.0",
        "is-glob": "~4.0.1",
        "normalize-path": "~3.0.0",
        "readdirp": "~3.6.0"
      },
      "engines": {
        "node": ">= 8.10.0"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      },
      "optionalDependencies": {
        "fsevents": "~2.3.2"
      }
    },
    "node_modules/concat-map": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
      "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==",
      "dev": true
    },
    "node_modules/cookie": {
      "version": "0.7.2",
      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.7.2.tgz",
      "integrity": "sha512-yki5XnKuf750l50uGTllt6kKILY4nQ1eNIQatoXEByZ5dWgnKqbnqmTrBE5B4N7lrMJKQ2ytWMiTO2o0v6Ew/w==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/create-require": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/create-require/-/create-require-1.1.1.tgz",
      "integrity": "sha512-dcKFX3jn0MpIaXjisoRvexIJVEKzaq7z2rZKxf+MSr9TkdmHmsU4m2lcLojrj/FHl8mk5VxMmYA+ftRkP/3oKQ==",
      "dev": true
    },
    "node_modules/diff": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/diff/-/diff-4.0.2.tgz",
      "integrity": "sha512-58lmxKSA4BNyLz+HHMUzlOEpg09FV+ev6ZMe3vJihgdxzgcwZ8VoEEPmALCZG9LmqfVoNMMKpttIYTVG6uDY7A==",
      "dev": true,
      "engines": {
        "node": ">=0.3.1"
      }
    },
    "node_modules/dynamic-dedupe": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/dynamic-dedupe/-/dynamic-dedupe-0.3.0.tgz",
      "integrity": "sha512-ssuANeD+z97meYOqd50e04Ze5qp4bPqo8cCkI4TRjZkzAUgIDTrXV1R8QCdINpiI+hw14+rYazvTRdQrz0/rFQ==",
      "dev": true,
      "dependencies": {
        "xtend": "^4.0.0"
      }
    },
    "node_modules/fast-content-type-parse": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/fast-content-type-parse/-/fast-content-type-parse-1.1.0.tgz",
      "integrity": "sha512-fBHHqSTFLVnR61C+gltJuE5GkVQMV0S2nqUO8TJ+5Z3qAKG8vAx4FKai1s5jq/inV1+sREynIWSuQ6HgoSXpDQ=="
    },
    "node_modules/fast-decode-uri-component": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/fast-decode-uri-component/-/fast-decode-uri-component-1.0.1.tgz",
      "integrity": "sha512-WKgKWg5eUxvRZGwW8FvfbaH7AXSh2cL+3j5fMGzUMCxWBJ3dV3a7Wz8y2f/uQ0e3B6WmodD3oS54jTQ9HVTIIg=="
    },
    "node_modules/fast-deep-equal": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
      "integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q=="
    },
    "node_modules/fast-json-stringify": {
      "version": "5.16.1",
      "resolved": "https://registry.npmjs.org/fast-json-stringify/-/fast-json-stringify-5.16.1.tgz",
      "integrity": "sha512-KAdnLvy1yu/XrRtP+LJnxbBGrhN+xXu+gt3EUvZhYGKCr3lFHq/7UFJHHFgmJKoqlh6B40bZLEv7w46B0mqn1g==",
      "dependencies": {
        "@fastify/merge-json-schemas": "^0.1.0",
        "ajv": "^8.10.0",
        "ajv-formats": "^3.0.1",
        "fast-deep-equal": "^3.1.3",
        "fast-uri": "^2.1.0",
        "json-schema-ref-resolver": "^1.0.1",
        "rfdc": "^1.2.0"
      }
    },
    "node_modules/fast-json-stringify/node_modules/ajv-formats": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/ajv-formats/-/ajv-formats-3.0.1.tgz",
      "integrity": "sha512-8iUql50EUR+uUcdRQ3HDqa6EVyo3docL8g5WJ3FNcWmu62IbkGUue/pEyLBW8VGKKucTPgqeks4fIU1DA4yowQ==",
      "dependencies": {
        "ajv": "^8.0.0"
      },
      "peerDependencies": {
        "ajv": "^8.0.0"
      },
      "peerDependenciesMeta": {
        "ajv": {
          "optional": true
        }
      }
    },
    "node_modules/fast-querystring": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/fast-querystring/-/fast-querystring-1.1.2.tgz",
      "integrity": "sha512-g6KuKWmFXc0fID8WWH0jit4g0AGBoJhCkJMb1RmbsSEUNvQ+ZC8D6CUZ+GtF8nMzSPXnhiePyyqqipzNNEnHjg==",
      "dependencies": {
        "fast-decode-uri-component": "^1.0.1"
      }
    },
    "node_modules/fast-redact": {
      "version": "3.5.0",
      "resolved": "https://registry.npmjs.org/fast-redact/-/fast-redact-3.5.0.tgz",
      "integrity": "sha512-dwsoQlS7h9hMeYUq1W++23NDcBLV4KqONnITDV9DjfS3q1SgDGVrBdvvTLUotWtPSD7asWDV9/CmsZPy8Hf70A==",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/fast-uri": {
      "version": "2.4.0",
      "resolved": "https://registry.npmjs.org/fast-uri/-/fast-uri-2.4.0.tgz",
      "integrity": "sha512-ypuAmmMKInk5q7XcepxlnUWDLWv4GFtaJqAzWKqn62IpQ3pejtr5dTVbt3vwqVaMKmkNR55sTT+CqUKIaT21BA=="
    },
    "node_modules/fastify": {
      "version": "4.29.1",
      "resolved": "https://registry.npmjs.org/fastify/-/fastify-4.29.1.tgz",
      "integrity": "sha512-m2kMNHIG92tSNWv+Z3UeTR9AWLLuo7KctC7mlFPtMEVrfjIhmQhkQnT9v15qA/BfVq3vvj134Y0jl9SBje3jXQ==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/fastify"
        },
        {
          "type": "opencollective",
          "url": "https://opencollective.com/fastify"
        }
      ],
      "dependencies": {
        "@fastify/ajv-compiler": "^3.5.0",
        "@fastify/error": "^3.4.0",
        "@fastify/fast-json-stringify-compiler": "^4.3.0",
        "abstract-logging": "^2.0.1",
        "avvio": "^8.3.0",
        "fast-content-type-parse": "^1.1.0",
        "fast-json-stringify": "^5.8.0",
        "find-my-way": "^8.0.0",
        "light-my-request": "^5.11.0",
        "pino": "^9.0.0",
        "process-warning": "^3.0.0",
        "proxy-addr": "^2.0.7",
        "rfdc": "^1.3.0",
        "secure-json-parse": "^2.7.0",
        "semver": "^7.5.4",
        "toad-cache": "^3.3.0"
      }
    },
    "node_modules/fastify-plugin": {
      "version": "4.5.1",
      "resolved": "https://registry.npmjs.org/fastify-plugin/-/fastify-plugin-4.5.1.tgz",
      "integrity": "sha512-stRHYGeuqpEZTL1Ef0Ovr2ltazUT9g844X5z/zEBFLG8RYlpDiOCIG+ATvYEp+/zmc7sN29mcIMp8gvYplYPIQ=="
    },
    "node_modules/fastq": {
      "version": "1.19.1",
      "resolved": "https://registry.npmjs.org/fastq/-/fastq-1.19.1.tgz",
      "integrity": "sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==",
      "dependencies": {
        "reusify": "^1.0.4"
      }
    },
    "node_modules/fill-range": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz",
      "integrity": "sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==",
      "dev": true,
      "dependencies": {
        "to-regex-range": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/find-my-way": {
      "version": "8.2.2",
      "resolved": "https://registry.npmjs.org/find-my-way/-/find-my-way-8.2.2.tgz",
      "integrity": "sha512-Dobi7gcTEq8yszimcfp/R7+owiT4WncAJ7VTTgFH1jYJ5GaG1FbhjwDG820hptN0QDFvzVY3RfCzdInvGPGzjA==",
      "dependencies": {
        "fast-deep-equal": "^3.1.3",
        "fast-querystring": "^1.0.0",
        "safe-regex2": "^3.1.0"
      },
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/forwarded": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz",
      "integrity": "sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/fs.realpath": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
      "integrity": "sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==",
      "dev": true
    },
    "node_modules/fsevents": {
      "version": "2.3.3",
      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",
      "integrity": "sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==",
      "dev": true,
      "hasInstallScript": true,
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
      }
    },
    "node_modules/function-bind": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
      "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
      "dev": true,
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/glob": {
      "version": "7.2.3",
      "resolved": "https://registry.npmjs.org/glob/-/glob-7.2.3.tgz",
      "integrity": "sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==",
      "deprecated": "Glob versions prior to v9 are no longer supported",
      "dev": true,
      "dependencies": {
        "fs.realpath": "^1.0.0",
        "inflight": "^1.0.4",
        "inherits": "2",
        "minimatch": "^3.1.1",
        "once": "^1.3.0",
        "path-is-absolute": "^1.0.0"
      },
      "engines": {
        "node": "*"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "dev": true,
      "dependencies": {
        "is-glob": "^4.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/hasown": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
      "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
      "dev": true,
      "dependencies": {
        "function-bind": "^1.1.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/inflight": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
      "integrity": "sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==",
      "deprecated": "This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.",
      "dev": true,
      "dependencies": {
        "once": "^1.3.0",
        "wrappy": "1"
      }
    },
    "node_modules/inherits": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==",
      "dev": true
    },
    "node_modules/ipaddr.js": {
      "version": "1.9.1",
      "resolved": "https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz",
      "integrity": "sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==",
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/is-binary-path": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz",
      "integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==",
      "dev": true,
      "dependencies": {
        "binary-extensions": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-core-module": {
      "version": "2.16.1",
      "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.16.1.tgz",
      "integrity": "sha512-UfoeMA6fIJ8wTYFEUjelnaGI67v6+N7qXJEvQuIGa99l4xsCruSYOVSQ0uPANn4dAzm8lkYPaKLrrijLq7x23w==",
      "dev": true,
      "dependencies": {
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-extglob": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-glob": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
      "dev": true,
      "dependencies": {
        "is-extglob": "^2.1.1"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-number": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
      "dev": true,
      "engines": {
        "node": ">=0.12.0"
      }
    },
    "node_modules/json-schema-ref-resolver": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/json-schema-ref-resolver/-/json-schema-ref-resolver-1.0.1.tgz",
      "integrity": "sha512-EJAj1pgHc1hxF6vo2Z3s69fMjO1INq6eGHXZ8Z6wCQeldCuwxGK9Sxf4/cScGn3FZubCVUehfWtcDM/PLteCQw==",
      "dependencies": {
        "fast-deep-equal": "^3.1.3"
      }
    },
    "node_modules/json-schema-traverse": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-1.0.0.tgz",
      "integrity": "sha512-NM8/P9n3XjXhIZn1lLhkFaACTOURQXjWhV4BA/RnOv8xvgqtqpAX9IO4mRQxSx1Rlo4tqzeqb0sOlruaOy3dug=="
    },
    "node_modules/light-my-request": {
      "version": "5.14.0",
      "resolved": "https://registry.npmjs.org/light-my-request/-/light-my-request-5.14.0.tgz",
      "integrity": "sha512-aORPWntbpH5esaYpGOOmri0OHDOe3wC5M2MQxZ9dvMLZm6DnaAn0kJlcbU9hwsQgLzmZyReKwFwwPkR+nHu5kA==",
      "dependencies": {
        "cookie": "^0.7.0",
        "process-warning": "^3.0.0",
        "set-cookie-parser": "^2.4.1"
      }
    },
    "node_modules/make-error": {
      "version": "1.3.6",
      "resolved": "https://registry.npmjs.org/make-error/-/make-error-1.3.6.tgz",
      "integrity": "sha512-s8UhlNe7vPKomQhC1qFelMokr/Sc3AgNbso3n74mVPA5LTZwkB9NlXf4XPamLxJE8h0gh73rM94xvwRT2CVInw==",
      "dev": true
    },
    "node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "dev": true,
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/minimist": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.8.tgz",
      "integrity": "sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==",
      "dev": true,
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/mkdirp": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-1.0.4.tgz",
      "integrity": "sha512-vVqVZQyf3WLx2Shd0qJ9xuvqgAyKPLAiqITEtqW0oIUjzo3PePDd6fW9iFz30ef7Ysp/oiWqbhszeGWW2T6Gzw==",
      "dev": true,
      "bin": {
        "mkdirp": "bin/cmd.js"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/normalize-path": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
      "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/on-exit-leak-free": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/on-exit-leak-free/-/on-exit-leak-free-2.1.2.tgz",
      "integrity": "sha512-0eJJY6hXLGf1udHwfNftBqH+g73EU4B504nZeKpz1sYRKafAghwxEJunB2O7rDZkL4PGfsMVnTXZ2EjibbqcsA==",
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/once": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
      "integrity": "sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==",
      "dev": true,
      "dependencies": {
        "wrappy": "1"
      }
    },
    "node_modules/path-is-absolute": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
      "integrity": "sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/path-parse": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
      "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==",
      "dev": true
    },
    "node_modules/picomatch": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
      "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
      "dev": true,
      "engines": {
        "node": ">=8.6"
      },
      "funding": {
        "url": "https://github.com/sponsors/jonschlinkert"
      }
    },
    "node_modules/pino": {
      "version": "9.7.0",
      "resolved": "https://registry.npmjs.org/pino/-/pino-9.7.0.tgz",
      "integrity": "sha512-vnMCM6xZTb1WDmLvtG2lE/2p+t9hDEIvTWJsu6FejkE62vB7gDhvzrpFR4Cw2to+9JNQxVnkAKVPA1KPB98vWg==",
      "dependencies": {
        "atomic-sleep": "^1.0.0",
        "fast-redact": "^3.1.1",
        "on-exit-leak-free": "^2.1.0",
        "pino-abstract-transport": "^2.0.0",
        "pino-std-serializers": "^7.0.0",
        "process-warning": "^5.0.0",
        "quick-format-unescaped": "^4.0.3",
        "real-require": "^0.2.0",
        "safe-stable-stringify": "^2.3.1",
        "sonic-boom": "^4.0.1",
        "thread-stream": "^3.0.0"
      },
      "bin": {
        "pino": "bin.js"
      }
    },
    "node_modules/pino-abstract-transport": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/pino-abstract-transport/-/pino-abstract-transport-2.0.0.tgz",
      "integrity": "sha512-F63x5tizV6WCh4R6RHyi2Ml+M70DNRXt/+HANowMflpgGFMAym/VKm6G7ZOQRjqN7XbGxK1Lg9t6ZrtzOaivMw==",
      "dependencies": {
        "split2": "^4.0.0"
      }
    },
    "node_modules/pino-std-serializers": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/pino-std-serializers/-/pino-std-serializers-7.0.0.tgz",
      "integrity": "sha512-e906FRY0+tV27iq4juKzSYPbUj2do2X2JX4EzSca1631EB2QJQUqGbDuERal7LCtOpxl6x3+nvo9NPZcmjkiFA=="
    },
    "node_modules/pino/node_modules/process-warning": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/process-warning/-/process-warning-5.0.0.tgz",
      "integrity": "sha512-a39t9ApHNx2L4+HBnQKqxxHNs1r7KF+Intd8Q/g1bUh6q0WIp9voPXJ/x0j+ZL45KF1pJd9+q2jLIRMfvEshkA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/fastify"
        },
        {
          "type": "opencollective",
          "url": "https://opencollective.com/fastify"
        }
      ]
    },
    "node_modules/process-warning": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/process-warning/-/process-warning-3.0.0.tgz",
      "integrity": "sha512-mqn0kFRl0EoqhnL0GQ0veqFHyIN1yig9RHh/InzORTUiZHFRAur+aMtRkELNwGs9aNwKS6tg/An4NYBPGwvtzQ=="
    },
    "node_modules/proxy-addr": {
      "version": "2.0.7",
      "resolved": "https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz",
      "integrity": "sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==",
      "dependencies": {
        "forwarded": "0.2.0",
        "ipaddr.js": "1.9.1"
      },
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/quick-format-unescaped": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/quick-format-unescaped/-/quick-format-unescaped-4.0.4.tgz",
      "integrity": "sha512-tYC1Q1hgyRuHgloV/YXs2w15unPVh8qfu/qCTfhTYamaw7fyhumKa2yGpdSo87vY32rIclj+4fWYQXUMs9EHvg=="
    },
    "node_modules/readdirp": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz",
      "integrity": "sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==",
      "dev": true,
      "dependencies": {
        "picomatch": "^2.2.1"
      },
      "engines": {
        "node": ">=8.10.0"
      }
    },
    "node_modules/real-require": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/real-require/-/real-require-0.2.0.tgz",
      "integrity": "sha512-57frrGM/OCTLqLOAh0mhVA9VBMHd+9U7Zb2THMGdBUoZVOtGbJzjxsYGDJ3A9AYYCP4hn6y1TVbaOfzWtm5GFg==",
      "engines": {
        "node": ">= 12.13.0"
      }
    },
    "node_modules/require-from-string": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/require-from-string/-/require-from-string-2.0.2.tgz",
      "integrity": "sha512-Xf0nWe6RseziFMu+Ap9biiUbmplq6S9/p+7w7YXP/JBHhrUDDUhwa+vANyubuqfZWTveU//DYVGsDG7RKL/vEw==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/resolve": {
      "version": "1.22.10",
      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.22.10.tgz",
      "integrity": "sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w==",
      "dev": true,
      "dependencies": {
        "is-core-module": "^2.16.0",
        "path-parse": "^1.0.7",
        "supports-preserve-symlinks-flag": "^1.0.0"
      },
      "bin": {
        "resolve": "bin/resolve"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/ret": {
      "version": "0.4.3",
      "resolved": "https://registry.npmjs.org/ret/-/ret-0.4.3.tgz",
      "integrity": "sha512-0f4Memo5QP7WQyUEAYUO3esD/XjOc3Zjjg5CPsAq1p8sIu0XPeMbHJemKA0BO7tV0X7+A0FoEpbmHXWxPyD3wQ==",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/reusify": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/reusify/-/reusify-1.1.0.tgz",
      "integrity": "sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==",
      "engines": {
        "iojs": ">=1.0.0",
        "node": ">=0.10.0"
      }
    },
    "node_modules/rfdc": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/rfdc/-/rfdc-1.4.1.tgz",
      "integrity": "sha512-q1b3N5QkRUWUl7iyylaaj3kOpIT0N2i9MqIEQXP73GVsN9cw3fdx8X63cEmWhJGi2PPCF23Ijp7ktmd39rawIA=="
    },
    "node_modules/rimraf": {
      "version": "2.7.1",
      "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
      "integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
      "deprecated": "Rimraf versions prior to v4 are no longer supported",
      "dev": true,
      "dependencies": {
        "glob": "^7.1.3"
      },
      "bin": {
        "rimraf": "bin.js"
      }
    },
    "node_modules/safe-regex2": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/safe-regex2/-/safe-regex2-3.1.0.tgz",
      "integrity": "sha512-RAAZAGbap2kBfbVhvmnTFv73NWLMvDGOITFYTZBAaY8eR+Ir4ef7Up/e7amo+y1+AH+3PtLkrt9mvcTsG9LXug==",
      "dependencies": {
        "ret": "~0.4.0"
      }
    },
    "node_modules/safe-stable-stringify": {
      "version": "2.5.0",
      "resolved": "https://registry.npmjs.org/safe-stable-stringify/-/safe-stable-stringify-2.5.0.tgz",
      "integrity": "sha512-b3rppTKm9T+PsVCBEOUR46GWI7fdOs00VKZ1+9c1EWDaDMvjQc6tUwuFyIprgGgTcWoVHSKrU8H31ZHA2e0RHA==",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/secure-json-parse": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/secure-json-parse/-/secure-json-parse-2.7.0.tgz",
      "integrity": "sha512-6aU+Rwsezw7VR8/nyvKTx8QpWH9FrcYiXXlqC4z5d5XQBDRqtbfsRjnwGyqbi3gddNtWHuEk9OANUotL26qKUw=="
    },
    "node_modules/semver": {
      "version": "7.7.2",
      "resolved": "https://registry.npmjs.org/semver/-/semver-7.7.2.tgz",
      "integrity": "sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==",
      "bin": {
        "semver": "bin/semver.js"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/set-cookie-parser": {
      "version": "2.7.1",
      "resolved": "https://registry.npmjs.org/set-cookie-parser/-/set-cookie-parser-2.7.1.tgz",
      "integrity": "sha512-IOc8uWeOZgnb3ptbCURJWNjWUPcO3ZnTTdzsurqERrP6nPyv+paC55vJM0LpOlT2ne+Ix+9+CRG1MNLlyZ4GjQ=="
    },
    "node_modules/sonic-boom": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/sonic-boom/-/sonic-boom-4.2.0.tgz",
      "integrity": "sha512-INb7TM37/mAcsGmc9hyyI6+QR3rR1zVRu36B0NeGXKnOOLiZOfER5SA+N7X7k3yUYRzLWafduTDvJAfDswwEww==",
      "dependencies": {
        "atomic-sleep": "^1.0.0"
      }
    },
    "node_modules/source-map": {
      "version": "0.6.1",
      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
      "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/source-map-support": {
      "version": "0.5.21",
      "resolved": "https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.21.tgz",
      "integrity": "sha512-uBHU3L3czsIyYXKX88fdrGovxdSCoTGDRZ6SYXtSRxLZUzHg5P/66Ht6uoUlHu9EZod+inXhKo3qQgwXUT/y1w==",
      "dev": true,
      "dependencies": {
        "buffer-from": "^1.0.0",
        "source-map": "^0.6.0"
      }
    },
    "node_modules/split2": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/split2/-/split2-4.2.0.tgz",
      "integrity": "sha512-UcjcJOWknrNkF6PLX83qcHM6KHgVKNkV62Y8a5uYDVv9ydGQVwAHMKqHdJje1VTWpljG0WYpCDhrCdAOYH4TWg==",
      "engines": {
        "node": ">= 10.x"
      }
    },
    "node_modules/strip-bom": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz",
      "integrity": "sha512-vavAMRXOgBVNF6nyEEmL3DBK19iRpDcoIwW+swQ+CbGiu7lju6t+JklA1MHweoWtadgt4ISVUsXLyDq34ddcwA==",
      "dev": true,
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/strip-json-comments": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-2.0.1.tgz",
      "integrity": "sha512-4gB8na07fecVVkOI6Rs4e7T6NOTki5EmL7TUduTs6bu3EdnSycntVJ4re8kgZA+wx9IueI2Y11bfbgwtzuE0KQ==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/supports-preserve-symlinks-flag": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
      "integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==",
      "dev": true,
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/thread-stream": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/thread-stream/-/thread-stream-3.1.0.tgz",
      "integrity": "sha512-OqyPZ9u96VohAyMfJykzmivOrY2wfMSf3C5TtFJVgN+Hm6aj+voFhlK+kZEIv2FBh1X6Xp3DlnCOfEQ3B2J86A==",
      "dependencies": {
        "real-require": "^0.2.0"
      }
    },
    "node_modules/to-regex-range": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
      "dev": true,
      "dependencies": {
        "is-number": "^7.0.0"
      },
      "engines": {
        "node": ">=8.0"
      }
    },
    "node_modules/toad-cache": {
      "version": "3.7.0",
      "resolved": "https://registry.npmjs.org/toad-cache/-/toad-cache-3.7.0.tgz",
      "integrity": "sha512-/m8M+2BJUpoJdgAHoG+baCwBT+tf2VraSfkBgl0Y00qIWt41DJ8R5B8nsEw0I58YwF5IZH6z24/2TobDKnqSWw==",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/tree-kill": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/tree-kill/-/tree-kill-1.2.2.tgz",
      "integrity": "sha512-L0Orpi8qGpRG//Nd+H90vFB+3iHnue1zSSGmNOOCh1GLJ7rUKVwV2HvijphGQS2UmhUZewS9VgvxYIdgr+fG1A==",
      "dev": true,
      "bin": {
        "tree-kill": "cli.js"
      }
    },
    "node_modules/ts-node": {
      "version": "10.9.2",
      "resolved": "https://registry.npmjs.org/ts-node/-/ts-node-10.9.2.tgz",
      "integrity": "sha512-f0FFpIdcHgn8zcPSbf1dRevwt047YMnaiJM3u2w2RewrB+fob/zePZcrOyQoLMMO7aBIddLcQIEK5dYjkLnGrQ==",
      "dev": true,
      "dependencies": {
        "@cspotcode/source-map-support": "^0.8.0",
        "@tsconfig/node10": "^1.0.7",
        "@tsconfig/node12": "^1.0.7",
        "@tsconfig/node14": "^1.0.0",
        "@tsconfig/node16": "^1.0.2",
        "acorn": "^8.4.1",
        "acorn-walk": "^8.1.1",
        "arg": "^4.1.0",
        "create-require": "^1.1.0",
        "diff": "^4.0.1",
        "make-error": "^1.1.1",
        "v8-compile-cache-lib": "^3.0.1",
        "yn": "3.1.1"
      },
      "bin": {
        "ts-node": "dist/bin.js",
        "ts-node-cwd": "dist/bin-cwd.js",
        "ts-node-esm": "dist/bin-esm.js",
        "ts-node-script": "dist/bin-script.js",
        "ts-node-transpile-only": "dist/bin-transpile.js",
        "ts-script": "dist/bin-script-deprecated.js"
      },
      "peerDependencies": {
        "@swc/core": ">=1.2.50",
        "@swc/wasm": ">=1.2.50",
        "@types/node": "*",
        "typescript": ">=2.7"
      },
      "peerDependenciesMeta": {
        "@swc/core": {
          "optional": true
        },
        "@swc/wasm": {
          "optional": true
        }
      }
    },
    "node_modules/ts-node-dev": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ts-node-dev/-/ts-node-dev-2.0.0.tgz",
      "integrity": "sha512-ywMrhCfH6M75yftYvrvNarLEY+SUXtUvU8/0Z6llrHQVBx12GiFk5sStF8UdfE/yfzk9IAq7O5EEbTQsxlBI8w==",
      "dev": true,
      "dependencies": {
        "chokidar": "^3.5.1",
        "dynamic-dedupe": "^0.3.0",
        "minimist": "^1.2.6",
        "mkdirp": "^1.0.4",
        "resolve": "^1.0.0",
        "rimraf": "^2.6.1",
        "source-map-support": "^0.5.12",
        "tree-kill": "^1.2.2",
        "ts-node": "^10.4.0",
        "tsconfig": "^7.0.0"
      },
      "bin": {
        "ts-node-dev": "lib/bin.js",
        "tsnd": "lib/bin.js"
      },
      "engines": {
        "node": ">=0.8.0"
      },
      "peerDependencies": {
        "node-notifier": "*",
        "typescript": "*"
      },
      "peerDependenciesMeta": {
        "node-notifier": {
          "optional": true
        }
      }
    },
    "node_modules/tsconfig": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/tsconfig/-/tsconfig-7.0.0.tgz",
      "integrity": "sha512-vZXmzPrL+EmC4T/4rVlT2jNVMWCi/O4DIiSj3UHg1OE5kCKbk4mfrXc6dZksLgRM/TZlKnousKH9bbTazUWRRw==",
      "dev": true,
      "dependencies": {
        "@types/strip-bom": "^3.0.0",
        "@types/strip-json-comments": "0.0.30",
        "strip-bom": "^3.0.0",
        "strip-json-comments": "^2.0.0"
      }
    },
    "node_modules/typescript": {
      "version": "5.8.3",
      "resolved": "https://registry.npmjs.org/typescript/-/typescript-5.8.3.tgz",
      "integrity": "sha512-p1diW6TqL9L07nNxvRMM7hMMw4c5XOo/1ibL4aAIGmSAt9slTE1Xgw5KWuof2uTOvCg9BY7ZRi+GaF+7sfgPeQ==",
      "dev": true,
      "bin": {
        "tsc": "bin/tsc",
        "tsserver": "bin/tsserver"
      },
      "engines": {
        "node": ">=14.17"
      }
    },
    "node_modules/undici-types": {
      "version": "7.8.0",
      "resolved": "https://registry.npmjs.org/undici-types/-/undici-types-7.8.0.tgz",
      "integrity": "sha512-9UJ2xGDvQ43tYyVMpuHlsgApydB8ZKfVYTsLDhXkFL/6gfkp+U8xTGdh8pMJv1SpZna0zxG1DwsKZsreLbXBxw==",
      "dev": true,
      "peer": true
    },
    "node_modules/v8-compile-cache-lib": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/v8-compile-cache-lib/-/v8-compile-cache-lib-3.0.1.tgz",
      "integrity": "sha512-wa7YjyUGfNZngI/vtK0UHAN+lgDCxBPCylVXGp0zu59Fz5aiGtNXaq3DhIov063MorB+VfufLh3JlF2KdTK3xg==",
      "dev": true
    },
    "node_modules/wrappy": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
      "integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==",
      "dev": true
    },
    "node_modules/ws": {
      "version": "8.18.3",
      "resolved": "https://registry.npmjs.org/ws/-/ws-8.18.3.tgz",
      "integrity": "sha512-PEIGCY5tSlUt50cqyMXfCzX+oOPqN0vuGqWzbcJ2xvnkzkq46oOpz7dQaTDBdfICb4N14+GARUDw2XV2N4tvzg==",
      "engines": {
        "node": ">=10.0.0"
      },
      "peerDependencies": {
        "bufferutil": "^4.0.1",
        "utf-8-validate": ">=5.0.2"
      },
      "peerDependenciesMeta": {
        "bufferutil": {
          "optional": true
        },
        "utf-8-validate": {
          "optional": true
        }
      }
    },
    "node_modules/xtend": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/xtend/-/xtend-4.0.2.tgz",
      "integrity": "sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ==",
      "dev": true,
      "engines": {
        "node": ">=0.4"
      }
    },
    "node_modules/yn": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/yn/-/yn-3.1.1.tgz",
      "integrity": "sha512-Ux4ygGWsu2c7isFWe8Yu1YluJmqVhxqK2cLXNQA5AcC3QfbGNpM7fu0Y8b/z16pXLnFxZYvWhd3fhBY9DLmC6Q==",
      "dev": true,
      "engines": {
        "node": ">=6"
      }
    }
  }
}
[1;30m----------------------------------------[0m

[1;34m=== ./game-service/Dockerfile ===[0m
FROM node:20-alpine

RUN apk add --no-cache bash python3 make g++

WORKDIR /app

COPY package*.json ./

RUN npm install

COPY . .

EXPOSE 8000

CMD ["npm", "run", "dev"]
[1;30m----------------------------------------[0m

[1;34m=== ./ssl/localhost.key ===[0m
-----BEGIN PRIVATE KEY-----
MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDHNy8TeBK2VZnu
K9H1ts5fktVHblUBlbc2gZIUFgowPjrdIb8MP273B+lo44BoY1dwbV3OSmhlurKk
tMr4KLwLQI/Q0LFi7ZCJ6KOGgrvRL1FzNkzJo081tSMR1mwvA+CzhHblcCjLbsbC
9uci23uFpPWjENH2qjnPSTCA1GRTXN71lOw4gXwacF8xjNRNtft9U4uZx+OdkMgg
Zeze1efxSDw9fz+Khp0eInNGjg56mnJChbImOcXOAKpTopMwzTsotZqHzLetEHQ9
u2hpf+Ml9W5nTVOs0vvnFvFiD1DZoG/btX0X71ZFLpz2uEfrnAegX67rp8ERkCyj
wIOloUuxAgMBAAECggEADCJ4Y580xJaCQde5elYgTAINq8Q0uVv9RPyvgTm2dSnV
PBMKKBzVDYcV2KXC9JjYgqimxiISKeAtcYrxshwJGEZefEG6DGScIUpia5cbCarw
MyxjkQS5lnPqJvQAsvxxe33eICus0Hd28/lGKwFjjMh3je9AWt4Tl2TF55MIaWtr
QIPrbzilGNUKShEdo/3CJS6nNLV+MlRGyGV52JlCNEVVTHxlcnruafYj9uNZ8Pcf
+FRB1ezCQLQYCU9sBmZ1MbU8Rqt8AdzWHaiUaXD9cxRPIgnikcmWzLp0HrZqL7GB
GntfPOZOjSlMM36Fw/uJOasKXkrvbb69OEvRWTtQAQKBgQDrJ1OWvvH6VuA4MgfK
DZ/uej3K4W26iuvKFMwXEK8XFgRg6YS99GWtfEFQNwj4+ZSI3jiSW4oJegsSF3lJ
3z5yQsiG0uMobVxuIG+vUWK22HqMWB8PRxBnPAQ3bPRUvtw8dVF1MA5VWhD8HRAx
enwFvQsgQ+aMNNPhFV4VdhPaUQKBgQDY4EOlTjRsopelxden71K1GJSzrcpTqld0
QTIPYz48PMUJ5ZG5lA1iPIVwNIBp4GCoRcL7OhpvBhXeLErN0aexSc9zZGHy8i6j
dBSyS5VK0sEGlxE+AXQM0wJBUlBIJ1r6tiLEKz4nLEeb7PoXTqs3bAjiMWsqC4nU
FT5pwfqjYQKBgBivqDbLFNwTArbjia3MgF2ot5P01nAe5WHxjPte5QKnbQ4/dY/7
eDEeOj0Rif+ZM96qdYXn1jXoegEMNc9rgEK+gA6nVPGJiYqGHTNqd9J6J2NUXO5d
p3su8cJfzcaXwscWCdcjlF2hducAphKLqTlw/xoEBs/xO80FUTsviiYBAoGBAInw
+pWlzEpckD/sOmKiIeT1oX83Rr04Vy+mWATZhrghnuHQloOG24xkGitn+VVeVZwx
4vaP2khLgpUxbtLCSvrEi6JFctdnmqp0JsXQtUBGFGfwphLeMcYGYCTUCiQahA96
0VocdwfLbjCK5fb1Hom9uVjFPfgcJqoyaOQzcQuBAoGAU3R0G/Oldh/Cze90MPL7
v5IphbFNntl/S6xzw9xZzDO1Y5RQT64i2VkwGXf1C1gQqXG93zDzq0B+ieNfG320
CNfhtqPanKI1FmGVefLc0U9+/prjRI9b6k7dWJwnkaCPmR6/sHKjvJamYpxpw+Fy
9x8zmSfOwCd2VqOOU/cKoCs=
-----END PRIVATE KEY-----
[1;30m----------------------------------------[0m

[1;34m=== ./ssl/localhost.crt ===[0m
-----BEGIN CERTIFICATE-----
MIIDjzCCAnegAwIBAgIUAMOu7Z2ZgiTR1IgawNyb370FFL0wDQYJKoZIhvcNAQEL
BQAwVzELMAkGA1UEBhMCVVMxDjAMBgNVBAgMBVN0YXRlMQ0wCwYDVQQHDARDaXR5
MRUwEwYDVQQKDAxPcmdhbml6YXRpb24xEjAQBgNVBAMMCWxvY2FsaG9zdDAeFw0y
NTA3MTYwOTExMDVaFw0yNjA3MTYwOTExMDVaMFcxCzAJBgNVBAYTAlVTMQ4wDAYD
VQQIDAVTdGF0ZTENMAsGA1UEBwwEQ2l0eTEVMBMGA1UECgwMT3JnYW5pemF0aW9u
MRIwEAYDVQQDDAlsb2NhbGhvc3QwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
AoIBAQDHNy8TeBK2VZnuK9H1ts5fktVHblUBlbc2gZIUFgowPjrdIb8MP273B+lo
44BoY1dwbV3OSmhlurKktMr4KLwLQI/Q0LFi7ZCJ6KOGgrvRL1FzNkzJo081tSMR
1mwvA+CzhHblcCjLbsbC9uci23uFpPWjENH2qjnPSTCA1GRTXN71lOw4gXwacF8x
jNRNtft9U4uZx+OdkMggZeze1efxSDw9fz+Khp0eInNGjg56mnJChbImOcXOAKpT
opMwzTsotZqHzLetEHQ9u2hpf+Ml9W5nTVOs0vvnFvFiD1DZoG/btX0X71ZFLpz2
uEfrnAegX67rp8ERkCyjwIOloUuxAgMBAAGjUzBRMB0GA1UdDgQWBBSEsJwTCTCE
pPb7Lwohk3VXGpm4uzAfBgNVHSMEGDAWgBSEsJwTCTCEpPb7Lwohk3VXGpm4uzAP
BgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBCwUAA4IBAQBHNgmnuXdlq/5F4UVr
P6VAR+uJzWs9H+DjjQaaI9ZFHLMJkzrp83XvJ+nhHiNqWyyK9vLA8GRxoDjd8in+
hg/VZQl/yGwhpEpQ3oKjIEhbDdO3gpCvO/UMjV1a7PIXqOsRYolql+1E2PaeKIlO
2/1PWnKf9u03crVCf4DY893Eci0NZ2Yzrsdz3mdThgutzodu+aap5rqip3AYdjb5
jX6oxPKbogCxWwbzxU1k0+fGZCYli1S6JIYy5GCIuyGhnsnb6t37qxobxDub6H1F
BG8iz6Yn5SooSsAT337O69HpmZni02YemxsPTLjzBPZN6+j/BMieiNk0joAtzjUn
jseG
-----END CERTIFICATE-----
[1;30m----------------------------------------[0m

[1;34m=== ./test_google_auth.sh ===[0m
#!/bin/bash

echo "🔍 Probando Google Sign-In..."

# Simular un token de Google válido (esto es solo para pruebas)
# En la vida real, esto vendría de Google
FAKE_GOOGLE_TOKEN="fake_google_token_for_testing"

echo "⚠️  Nota: Para probar Google Sign-In completo, necesitas:"
echo "1. Abrir http://localhost:9001 en un navegador"
echo "2. Hacer clic en 'Continue with Google' en la página de login o registro"
echo "3. El sistema debería funcionar automáticamente con el Client ID configurado"
echo ""
echo "🔑 Client ID de Google configurado: 58128894262-ak29ohah5ovkh31dvp2srdbm16thp961.apps.googleusercontent.com"
echo "📝 Endpoint de Google auth: http://localhost:8001/auth/google"
echo ""
echo "✅ Google Sign-In está integrado en el frontend"
echo "✅ Endpoint /auth/google está funcional"
echo "✅ El sistema manejará automáticamente el registro y login con Google"
[1;30m----------------------------------------[0m

[1;34m=== ./Makefile ===[0m
COMPOSE = /usr/bin/docker compose -f docker-compose.yml --env-file .env

PROJECT_NAME := transcendence
DATA_PATH ?= $(HOME)/data/$(PROJECT_NAME)
export DATA_PATH
MAKEFILE_PATH := $(abspath $(lastword $(MAKEFILE_LIST)))

# CONSTRUCCION__________________________________________________________________
all: prepare build up

prepare:
	mkdir -p "$(HOME)/data/transcendence/sqlite"
	chmod -R 777 "$(HOME)/data/transcendence/sqlite"
	@echo "SQLite data directory prepared at: $(HOME)/data/transcendence/sqlite"

	mkdir -p "$(HOME)/data/transcendence/redis"
	chown -R 1000:1000 "$(HOME)/data/transcendence/redis" || true
	chmod -R 750 "$(HOME)/data/transcendence/redis"
	@echo "Redis data directory prepared at: $(HOME)/data/transcendence/redis"

	mkdir -p "$(HOME)/data/transcendence/frontend"
	@echo "Frontend data directory prepared at: $(HOME)/data/transcendence/frontend"

build:
	@$(COMPOSE) build

up:
	@echo "     ,                                                                          ;                                            , "             
	@echo "     Et           :                                :                            ED.                                :         Et "            
	@echo "     E#t         t#,                              t#,     :      L.             E#Wi                        .     t#,        E#t "           
	@echo "     E##t       ;##W.              .    .        ;##W.    Ef     EW:        ,ft E###G.                     ;W    ;##W.       E##t "          
	@echo "     E#W#t     :#L:WE              Di   Dt      :#L:WE    E#t    E##;       t#E E#fD#W;                   f#E   :#L:WE       E#W#t GEEEEEEEL "
	@echo "     E#tfL.   .KG  ,#D  :KW,      LE#i  E#i    .KG  ,#D   E#t    E###t      t#E E#t t##L                .E#f   .KG  ,#D      E#tfL.,;;L#K;;. "
	@echo "     E#t      EE    ;#f  ,#W:   ,KGE#t  E#t    EE    ;#f  E#t    E#fE#f     t#E E#t  .E#K,             iWW;    EE    ;#f     E#t      t#E   "
	@echo "  ,ffW#Dffj. f#.     t#i  ;#W. jWi E#t  E#t   f#.     t#i E#t fi E#t D#G    t#E E#t    j##f           L##Lffi f#.     t#i ,ffW#Dffj.  t#E   "
	@echo "   ;LW#ELLLf.:#G     GK    i#KED.  E########f.:#G     GK  E#t L#jE#t  f#E.  t#E E#t    :E#K:         tLLG##L  :#G     GK   ;LW#ELLLf. t#E   "
	@echo "     E#t      ;#L   LW.     L#W.   E#j..K#j... ;#L   LW.  E#t L#LE#t   t#K: t#E E#t   t##L             ,W#i    ;#L   LW.     E#t      t#E   "
	@echo "     E#t       t#f f#:    .GKj#K.  E#t  E#t     t#f f#:   E#tf#E:E#t    ;#W,t#E E#t .D#W;             j#E.      t#f f#:      E#t      t#E   "
	@echo "     E#t        f#D#;    iWf  i#K. E#t  E#t      f#D#;    E###f  E#t     :K#D#E E#tiW#G.            .D#j         f#D#;       E#t      t#E   "
	@echo "     E#t         G#t    LK:    t#E f#t  f#t       G#t     E#K,   E#t      .E##E E#K##i             ,WK,           G#t        E#t      t#E   "
	@echo "     E#t          t     i       tDj ii   ii        t      EL     ..         G#E E##D.              EG.             t         E#t       fE   "
	@echo "     ;#t                                                  :                  fE E#t                ,                         ;#t        :   "
	@echo "      :;                                                                      , L:                                            :;  "
	@echo ""
	@echo ""
	@echo "                                                           :::;xx88&&&&&&&&&&&&&88xx; "
	@echo "                                                   ;x8&&&x;x&:;+;X.+;:X::;.x;:+:;x:xxx&8&88x; "
	@echo "                                                  :&&;:;x::x.x+..x8.:::x.:x.+;:+:;x.:;.x::::&&8 "
	@echo "                                                  :&&;.;x::x.x+.:;8.+;:x.:x.+;:x:;x.:..x::x.X&8 "
	@echo "                                                  :&&;:&8::x.8:;x.x.+;:8X;:;88::.+x.x:.x:;x.X&8 "
	@echo "                                                  :&&;:&&8xX&&88Xxx+;;x8&&&&&&&&&&&&&&88x;::8&8 "
	@echo "                                                  :&&&x;:;x+::............+&&&&&&&&&&&&&&&&&&&8 "
	@echo "                                                  :8:..;;..::xx;............:8&&&&&x;:..:8&&&&8 "
	@echo "                                                  :8:..;;x&x;.:xxx::.:;;xxxx::;&Xx;.:+X&;8&&&&8 "
	@echo "                                                  :8:..x.:&&8+:.;:+;.......:::x:+:.:x&&x.x&&&&8 "
	@echo "                                                  :8:..x:.&&&x:.:;;:;.......:;:+:..;X&&x.x&&&&8 "
	@echo "                                                  :8:..:X.&&&&;::;.............:;::x&&&x;&&&&&8 "
	@echo "                                                  :8:...x:.x&&x:..................;&&8:.x&&&&&8 "
	@echo "                                                  :8:...;+..:::....................:::.:8&&&&&8 "
	@echo "                                                  :8:....;x:..........................:&&&&&&&8 "
	@echo "                                                  :8:.....x;......:;+:......;+:......:X&&&&&&&8 "
	@echo "                                                  :8:....;x:..:++::..x+....;:...:;:..:xX&&&&&&8 "
	@echo "                                                  :8:....:8:;..:&+x;X&:....:&x;+xx..:;;8&&&&&&8 "
	@echo "                                                  :8:.....x.:;:.:x&&&&.....:&&&&x..:;:8&&&&&&&x "
	@echo "                                                   xx..x...;+:x;....:;;....:x:....;xx&&&&&&&&&: "
	@echo "                                                   :8x:X;...:x;::;;:.:......::;;:;x&&&&&&&&&&+ "
	@echo "                                                     8&&&x.....::+::;:......:::X&&&&&&&&&&&&x "
	@echo "                                                     :X&&&8;......x+.;.....::.8&&&&&&&&&&&&+ "
	@echo "                                     ;x;++;;;;;;;;;xXXx8xXxXXx;;+;x+..::::::..88888888x;;;;: "
	@echo "                                      :x:.:::;;;;;;;;;;;;:;:;;;:;;xx:.+8&&&;.+;.......x...;: "
	@echo "                                        :;;;;;;;;;;;;;;;;;;+xxx+;;xxx::;8X;.+&&&&&&&&&8;;;; "
	@echo "                                                           :x&&&X:x+..;++;+&&&&&&&&&8; "
	@echo "                                                             :x&&&+:.......:&&&&&&&; "
	@echo "                                                               :+8&;.......:8&&&X: "
	@echo "                                                                  :x8x:...:;88; "
	@echo "                                                                     :;X&&x: "
	@$(COMPOSE) up -d

down:
	@$(COMPOSE) down

start:
	@$(COMPOSE) start

stop:
	@$(COMPOSE) stop

shell:
	@bash -c '\
		read -p "=> Enter service: " service; \
		$(COMPOSE) exec -it $$service /bin/bash || $(COMPOSE) exec -it $$service /bin/sh'

# LIMPIEZA______________________________________________________________________
clean: down

fclean: clean
	@echo "Stopping and removing all containers..."
	@$(COMPOSE) down --volumes --rmi all --remove-orphans 2>/dev/null || true
	@echo "Cleaning up any manually created containers..."
	@docker stop WAF nginx-proxy 2>/dev/null || true
	@docker rm WAF nginx-proxy 2>/dev/null || true
	@echo "Cleaning up networks..."
	@docker network inspect inception_network > /dev/null 2>&1 && \
	docker network rm inception_network || true
	@docker network inspect transcendence_net > /dev/null 2>&1 && \
	docker network rm transcendence_net || true
	@echo "Pruning volumes..."
	@docker volume prune -f 2>/dev/null || true
	@echo "Removing data directory..."
	@sudo rm -rf "$(DATA_PATH)"

# REBUILD_______________________________________________________________________
quick-re: clean
	@$(COMPOSE) up -d --force-recreate

re: fclean all

.PHONY: all build up down start stop shell clean fclean re quick-re prepare check-secrets
[1;30m----------------------------------------[0m

[1;34m=== ./fix_gameOnline.js ===[0m
const fs = require('fs');

// Leer el archivo
let content = fs.readFileSync('./frontend/src/pages/gameOnline.ts', 'utf8');

// Obtener el usuario actual al inicio de la función showGameView
const getUserCurrentCode = `
  // Obtener usuario actual
  const currentUser = getCurrentUser();
  const currentUserName = currentUser?.username || 'Usuario';
`;

// Insertar el código para obtener el usuario al inicio de showGameView
content = content.replace(
  'function showGameView(gameId: string): void {',
  `function showGameView(gameId: string): void {${getUserCurrentCode}`
);

// Reemplazar los títulos iniciales para usar nombres dinámicos
content = content.replace(
  '<h3 class="text-xl font-bold text-yellow-400" id="score1-title">🟡 Jugador 1</h3>',
  '<h3 class="text-xl font-bold text-yellow-400" id="score1-title">🟡 Jugador 1</h3>'
);

content = content.replace(
  '<h3 class="text-xl font-bold text-blue-400" id="score2-title">🔵 Jugador 2</h3>',
  '<h3 class="text-xl font-bold text-blue-400" id="score2-title">🔵 Jugador 2</h3>'
);

// Reemplazar la lógica de actualización de títulos
content = content.replace(
  /if \(playerNumber === 1\) \{\s*score1Title\.innerHTML = '🟡 Jugador 1 \(Tú\)';[\s\S]*?score2Title\.innerHTML = '🔵 Jugador 2 \(Tú\)';/g,
  `if (playerNumber === 1) {
        score1Title.innerHTML = \`🟡 \${currentUserName} (Tú)\`;
        score2Title.innerHTML = isPvE ? '🔵 IA (Oponente)' : '🔵 Oponente';
      } else {
        score1Title.innerHTML = isPvE ? '🟡 IA (Oponente)' : '🟡 Oponente';
        score2Title.innerHTML = \`🔵 \${currentUserName} (Tú)\`;`
);

// Escribir el archivo actualizado
fs.writeFileSync('./frontend/src/pages/gameOnline.ts', content);

console.log('✅ Archivo gameOnline.ts actualizado correctamente');
[1;30m----------------------------------------[0m

[1;34m=== ./test_user_auth.js ===[0m
// Script para probar la autenticación del usuario

// Simular localStorage con un token válido
const mockToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJ1c2VybmFtZSI6InRlc3R1c2VyIiwiZW1haWwiOiJ0ZXN0dXNlckBleGFtcGxlLmNvbSIsImV4cCI6MTc1NzI3MjYyM30.test_signature';

// Función para simular parseJwt
function parseJwt(token) {
  try {
    const base64Url = token.split('.')[1];
    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
    const jsonPayload = decodeURIComponent(
      atob(base64)
        .split('')
        .map(c => `%${('00' + c.charCodeAt(0).toString(16)).slice(-2)}`)
        .join('')
    );
    return JSON.parse(jsonPayload);
  } catch (err) {
    console.error('Error al parsear JWT:', err);
    return null;
  }
}

// Función para simular getCurrentUser
function getCurrentUser() {
  const token = mockToken;
  if (!token) return null;
  
  const payload = parseJwt(token);
  if (!payload?.user_id) return null;
  
  return {
    id: payload.user_id,
    username: payload.username || 'Usuario',
    email: payload.email || 'desconocido@example.com'
  };
}

// Probar la función
const user = getCurrentUser();
console.log('Usuario obtenido:', user);

// Simular el nombre del jugador
const player1Name = user?.username || 'Jugador 1';
console.log('Nombre del jugador 1:', player1Name);

// Verificar que no sea "Jugador 1"
if (player1Name !== 'Jugador 1') {
  console.log('✅ ÉXITO: El nombre del usuario se obtiene correctamente');
} else {
  console.log('❌ ERROR: No se pudo obtener el nombre del usuario');
}
[1;30m----------------------------------------[0m

[1;34m=== ./db-service/redis/Dockerfile ===[0m
FROM redis:7.2-alpine

LABEL maintainer="jolopez- <jolopez-@student.42madrid.com>"

RUN mkdir -p /usr/local/etc/redis
COPY redis.conf healthcheck.sh /usr/local/etc/redis/
RUN apk add --no-cache tzdata && \
    cp /usr/share/zoneinfo/Europe/Madrid /etc/localtime && \
    echo "Europe/Madrid" > /etc/timezone && \
    apk del tzdata
RUN chmod +x /usr/local/etc/redis/healthcheck.sh

RUN mkdir -p /data && \
    chown redis:redis /data && \
    chmod 750 /data

EXPOSE 6379

RUN chmod 755 /usr/local/etc/redis/healthcheck.sh

RUN chown -R redis:redis /usr/local/etc/redis && \
    chmod 600 /usr/local/etc/redis/redis.conf

USER redis
CMD ["sh", "-c", "export REDIS_PASSWORD=$(cat ${REDIS_PASSWORD_FILE}) && exec redis-server /usr/local/etc/redis/redis.conf"][1;30m----------------------------------------[0m

[1;34m=== ./db-service/redis/healthcheck.sh ===[0m
#!/bin/sh
set -eo pipefail

REDIS_PASSWORD=$(cat ${REDIS_PASSWORD_FILE})

# Verificar conexión básica
if ! redis-cli -a "$REDIS_PASSWORD" ping | grep -q "PONG"; then
  echo "Error: No se pudo conectar a Redis"
  exit 1
fi

# Verificar estado completo
STATUS=$(redis-cli -a "$REDIS_PASSWORD" info all)
if [ -z "$STATUS" ]; then
  echo "Error: No se pudo obtener el estado de Redis"
  exit 1
fi

# Verificar memoria
MEM_USAGE=$(echo "$STATUS" | grep -E "used_memory_human:" | cut -d: -f2)
echo "Memoria usada: $MEM_USAGE"

exit 0[1;30m----------------------------------------[0m

[1;34m=== ./db-service/redis/redis.conf ===[0m
# Configuración de seguridad
requirepass o-meu-contrasinal.42
rename-command FLUSHDB ""
rename-command FLUSHALL ""
rename-command CONFIG ""
protected-mode yes

# Configuración de persistencia
appendonly yes
appendfilename "appendonly.aof"
appendfsync everysec
aof-rewrite-incremental-fsync yes

# Configuración de memoria
maxmemory 256mb
maxmemory-policy allkeys-lru

# Configuración de rendimiento
hash-max-ziplist-entries 512
hash-max-ziplist-value 64
activerehashing yes
hz 10

# Configuración de red
bind 0.0.0.0
port 6379
tcp-keepalive 60
timeout 300

# Configuración de conexiones
maxclients 50[1;30m----------------------------------------[0m

[1;34m=== ./db-service/tsconfig.json ===[0m
{
  "compilerOptions": {
    "target": "es2021",
    "module": "commonjs",
    "outDir": "./dist",
    "strict": true,
    "esModuleInterop": true,
    "skipLibCheck": true,
    "forceConsistentCasingInFileNames": true
  },
  "include": ["src/**/*.ts"],
  "exclude": ["node_modules"]
}
[1;30m----------------------------------------[0m

[1;34m=== ./db-service/src/database.ts ===[0m
import sqlite3 from 'sqlite3';
import { open, Database } from 'sqlite'; // Importar Database de sqlite
import path from 'path';

// Asegúrate de que el directorio 'data' exista en la raíz del proyecto para la persistencia.
// Docker montará un volumen aquí.
const DB_PATH = path.join(__dirname, '../data/app.db');

export async function openDb(): Promise<Database> { // Especificar tipo de retorno
    return open({
        filename: DB_PATH,
        driver: sqlite3.Database
    });
}

export async function initializeDb() {
    const db = await openDb();
    try {
        await db.exec(`
            CREATE TABLE IF NOT EXISTS users ( id INTEGER PRIMARY KEY AUTOINCREMENT, username TEXT UNIQUE NOT NULL, email TEXT UNIQUE NOT NULL, password_hash TEXT, google_id TEXT UNIQUE, intra_id TEXT UNIQUE, is_active BOOLEAN DEFAULT 1, is_admin BOOLEAN DEFAULT 0, last_login DATETIME, created_at DATETIME DEFAULT CURRENT_TIMESTAMP);
            CREATE TABLE IF NOT EXISTS user_profiles ( user_id INTEGER PRIMARY KEY, avatar_url TEXT, bio TEXT, language TEXT DEFAULT 'es', notifications BOOLEAN DEFAULT 1, sound BOOLEAN DEFAULT 1, difficulty INTEGER DEFAULT 2, theme TEXT DEFAULT 'light', FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE);
            CREATE TABLE IF NOT EXISTS sessions ( id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, session_token TEXT UNIQUE NOT NULL, expires_at DATETIME NOT NULL, created_at DATETIME DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE);
            CREATE TABLE IF NOT EXISTS friendships ( id INTEGER PRIMARY KEY AUTOINCREMENT, requester_id INTEGER NOT NULL, approver_id INTEGER, status TEXT DEFAULT 'pending', created_at DATETIME DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (requester_id) REFERENCES users(id) ON DELETE CASCADE, FOREIGN KEY (approver_id) REFERENCES users(id) ON DELETE CASCADE);
            CREATE TABLE IF NOT EXISTS chat_messages ( id INTEGER PRIMARY KEY AUTOINCREMENT, sender_id INTEGER NOT NULL, receiver_id INTEGER, message TEXT NOT NULL, sent_at DATETIME DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (sender_id) REFERENCES users(id) ON DELETE CASCADE, FOREIGN KEY (receiver_id) REFERENCES users(id) ON DELETE CASCADE);
            CREATE TABLE IF NOT EXISTS tournaments ( id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT NOT NULL, created_by INTEGER, status TEXT DEFAULT 'upcoming', created_at DATETIME DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (created_by) REFERENCES users(id) ON DELETE SET NULL);
            CREATE TABLE IF NOT EXISTS games ( id INTEGER PRIMARY KEY AUTOINCREMENT, tournament_id INTEGER, status TEXT DEFAULT 'pending', started_at DATETIME, finished_at DATETIME, FOREIGN KEY (tournament_id) REFERENCES tournaments(id) ON DELETE SET NULL);
            CREATE TABLE IF NOT EXISTS participants ( id INTEGER PRIMARY KEY AUTOINCREMENT, game_id INTEGER NOT NULL, user_id INTEGER, is_bot BOOLEAN DEFAULT 0, is_winner BOOLEAN DEFAULT 0, team_name TEXT NOT NULL, FOREIGN KEY (game_id) REFERENCES games(id) ON DELETE CASCADE, FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE SET NULL);
            CREATE TABLE IF NOT EXISTS scores (id INTEGER PRIMARY KEY AUTOINCREMENT, game_id INTEGER NOT NULL, scorer_id INTEGER, team_name TEXT NOT NULL, point_number INTEGER NOT NULL, timestamp DATETIME DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (game_id) REFERENCES games(id) ON DELETE CASCADE,  FOREIGN KEY (scorer_id) REFERENCES users(id) ON DELETE SET NULL);
            CREATE TABLE IF NOT EXISTS user_stats ( user_id INTEGER PRIMARY KEY, gamesplayed INTEGER DEFAULT 0, games_won INTEGER DEFAULT 0, game_lost INTEGER DEFAULT 0, best_score INTEGER DEFAULT 0, total_points INTEGER DEFAULT 0, received_points INTEGER DEFAULT 0, win_rate REAL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE);
            INSERT OR IGNORE INTO users (id, username, email, password_hash, created_at) VALUES (1, 'Manu', 'ardeiro@outlook.com', '$2b$12$U.2UHoDtA3/oeQHQIrznVuBokjoVRTfdv2zM7Qv7E3H0AldZ1Qhbe', datetime('now', '-1 days'));
            INSERT OR IGNORE INTO users (id, username, email, password_hash, created_at) VALUES (2, 'Ardeiro', 'ardeiro@gmail.com', '$2b$12$/1r9td3OkeutXq16OoALGuUeEO/nCCX4AwLvFJ2ZYZNWEuzkMyzEG', datetime('now', '-2 days'));
            INSERT OR IGNORE INTO users (id, username, email, password_hash, created_at) VALUES (3, 'HAL7000', 'manuel.ardeiro@gmail.com', '$2b$12$RagfU1ULf9zvoZBRqcQ5XOb.EgZybLX2mfr9W3gaKYiWiTUzi5sC6', datetime('now', '-3 days'));
            INSERT OR IGNORE INTO users (id, username, email, password_hash, created_at) VALUES (4, 'Verdu', 'jorge.verdu.ruiz@gmail.com', '$2b$12$fmkXJsqahw1S9bM8fQ6G3uhnDCfrLZlUwvKlKmr5SASA7AbX6kQZq', datetime('now', '-4 days'));
            INSERT OR IGNORE INTO users (id, username, email, password_hash, created_at) VALUES (5, 'David', 'david.aparicio247@hotmail.com', '$2b$12$iASlBV76WELxwwjOUmWeM.FjqHuDhkWQEEbTBBNRZb4B6/tEfyCmC', datetime('now', '-5 days'));
            INSERT OR IGNORE INTO users (id, username, email, password_hash, created_at) VALUES (6, 'ManuFern', 'manufern@student.42madrid.com', '$2b$12$1Mqudh5FrajQHKxtBOG26O/dL47xnZrbbQ8HjcipegON1NQdMFXou', datetime('now', '-6 days'));
            INSERT OR IGNORE INTO users (id, username, email, password_hash, created_at) VALUES (7, 'Diego', 'diegorubiomorato@gmail.com', '$2b$12$SC.8HYivrjOrLQQscZz7SuBNY4vodoHRh.cWXQ0htB/vBBJxblJPa', datetime('now', '-7 days'));
            INSERT OR IGNORE INTO user_profiles (user_id, avatar_url, bio, language, notifications, sound, difficulty, theme) VALUES (1, NULL, '', 'es', 1, 1, 2, 'light');
            INSERT OR IGNORE INTO user_profiles (user_id, avatar_url, bio, language, notifications, sound, difficulty, theme) VALUES (2, NULL, '', 'es', 1, 1, 2, 'light');
            INSERT OR IGNORE INTO user_profiles (user_id, avatar_url, bio, language, notifications, sound, difficulty, theme) VALUES (3, NULL, '', 'es', 1, 1, 2, 'light');
            INSERT OR IGNORE INTO user_profiles (user_id, avatar_url, bio, language, notifications, sound, difficulty, theme) VALUES (4, NULL, '', 'es', 1, 1, 2, 'light');
            INSERT OR IGNORE INTO user_profiles (user_id, avatar_url, bio, language, notifications, sound, difficulty, theme) VALUES (5, NULL, '', 'es', 1, 1, 2, 'light');
            INSERT OR IGNORE INTO user_profiles (user_id, avatar_url, bio, language, notifications, sound, difficulty, theme) VALUES (6, NULL, '', 'es', 1, 1, 2, 'light');
            INSERT OR IGNORE INTO user_profiles (user_id, avatar_url, bio, language, notifications, sound, difficulty, theme) VALUES (7, NULL, '', 'es', 1, 1, 2, 'light');
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (1, 1, 2, 'accepted', datetime('now', '-1 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (2, 3, 4, 'accepted', datetime('now', '-2 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (3, 2, 7, 'accepted', datetime('now', '-3 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (4, 1, 5, 'accepted', datetime('now', '-4 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (5, 3, 7, 'accepted', datetime('now', '-5 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (6, 4, 6, 'accepted', datetime('now', '-6 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (7, 1, 4, 'accepted', datetime('now', '-7 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (8, 5, 7, 'accepted', datetime('now', '-8 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (9, 6, 7, 'accepted', datetime('now', '-9 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (10, 1, 7, 'accepted', datetime('now', '-10 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (11, 4, 5, 'accepted', datetime('now', '-11 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (12, 5, 6, 'accepted', datetime('now', '-12 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (13, 3, 6, 'accepted', datetime('now', '-13 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (14, 2, 5, 'accepted', datetime('now', '-14 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (15, 1, 3, 'accepted', datetime('now', '-15 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (16, 4, 7, 'accepted', datetime('now', '-16 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (17, 3, 5, 'accepted', datetime('now', '-17 hours'));
            INSERT OR IGNORE INTO tournaments (id, name, created_by, status, created_at) VALUES (1, 'Torneo 1', 2, 'completed', datetime('now', '-1 days'));
            INSERT OR IGNORE INTO tournaments (id, name, created_by, status, created_at) VALUES (2, 'Torneo 2', 6, 'completed', datetime('now', '-2 days'));
            INSERT OR IGNORE INTO tournaments (id, name, created_by, status, created_at) VALUES (3, 'Torneo 3', 4, 'completed', datetime('now', '-3 days'));
            INSERT OR IGNORE INTO tournaments (id, name, created_by, status, created_at) VALUES (4, 'Torneo 4', 1, 'completed', datetime('now', '-4 days'));
            INSERT OR IGNORE INTO tournaments (id, name, created_by, status, created_at) VALUES (5, 'Torneo 5', 6, 'completed', datetime('now', '-5 days'));
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (1, 'finished', '2025-07-08 08:47:09.083019', '2025-07-08 08:54:35.083019');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (2, 'finished', '2025-07-04 08:47:09.083138', '2025-07-04 08:53:13.083138');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (3, 'finished', '2025-06-18 08:47:09.083191', '2025-06-18 08:53:44.083191');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (4, 'finished', '2025-05-30 08:47:09.083235', '2025-05-30 08:51:08.083235');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (5, 'finished', '2025-06-05 08:47:09.083262', '2025-06-05 08:51:43.083262');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (6, 'finished', '2025-06-19 08:47:09.083300', '2025-06-19 08:54:10.083300');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (7, 'finished', '2025-05-18 08:47:09.083336', '2025-05-18 08:53:40.083336');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (8, 'finished', '2025-06-19 08:47:09.083374', '2025-06-19 08:53:23.083374');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (9, 'finished', '2025-05-19 08:47:09.083411', '2025-05-19 08:49:32.083411');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (10, 'finished', '2025-07-04 08:47:09.083464', '2025-07-04 08:49:39.083464');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (11, 'finished', '2025-05-31 08:47:09.083498', '2025-05-31 08:55:47.083498');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (12, 'finished', '2025-06-28 08:47:09.083552', '2025-06-28 08:50:37.083552');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (13, 'finished', '2025-05-26 08:47:09.083604', '2025-05-26 08:51:18.083604');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (14, 'finished', '2025-06-07 08:47:09.083820', '2025-06-07 08:54:35.083820');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (15, 'finished', '2025-06-22 08:47:09.083856', '2025-06-22 08:49:51.083856');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (16, 'finished', '2025-06-12 08:47:09.083890', '2025-06-12 08:52:44.083890');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (17, 'finished', '2025-07-13 08:47:09.083923', '2025-07-13 08:55:22.083923');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (18, 'finished', '2025-06-16 08:47:09.083962', '2025-06-16 08:56:41.083962');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (19, 'finished', '2025-07-01 08:47:09.083994', '2025-07-01 08:52:36.083994');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (20, 'finished', '2025-06-19 08:47:09.084025', '2025-06-19 08:56:32.084025');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (21, 'finished', '2025-06-30 08:47:09.084045', '2025-06-30 08:50:27.084045');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (22, 'finished', '2025-07-01 08:47:09.084064', '2025-07-01 08:57:02.084064');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (23, 'finished', '2025-06-01 08:47:09.084093', '2025-06-01 08:54:33.084093');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (24, 'finished', '2025-06-12 08:47:09.084129', '2025-06-12 08:52:22.084129');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (25, 'finished', '2025-05-18 08:47:09.084169', '2025-05-18 08:54:50.084169');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (26, 'finished', '2025-05-19 08:47:09.084199', '2025-05-19 08:55:28.084199');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (27, 'finished', '2025-07-12 08:47:09.084235', '2025-07-12 08:51:29.084235');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (28, 'finished', '2025-06-05 08:47:09.084292', '2025-06-05 08:49:34.084292');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (29, 'finished', '2025-06-03 08:47:09.084349', '2025-06-03 08:51:03.084349');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (30, 'finished', '2025-06-30 08:47:09.084385', '2025-06-30 08:55:34.084385');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (31, 'finished', '2025-07-02 08:47:09.084420', '2025-07-02 08:56:24.084420');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (32, 'finished', '2025-05-22 08:47:09.084453', '2025-05-22 08:53:48.084453');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (33, 'finished', '2025-07-03 08:47:09.084484', '2025-07-03 08:49:29.084484');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (34, 'finished', '2025-05-29 08:47:09.084526', '2025-05-29 08:52:02.084526');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (35, 'finished', '2025-06-20 08:47:09.084556', '2025-06-20 08:51:17.084556');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (36, 'finished', '2025-06-07 08:47:09.084576', '2025-06-07 08:56:59.084576');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (37, 'finished', '2025-06-01 08:47:09.084603', '2025-06-01 08:48:23.084603');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (38, 'finished', '2025-07-02 08:47:09.084636', '2025-07-02 08:52:36.084636');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (39, 'finished', '2025-07-12 08:47:09.084676', '2025-07-12 08:52:32.084676');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (40, 'finished', '2025-05-23 08:47:09.084717', '2025-05-23 08:51:26.084717');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (41, 'finished', '2025-06-03 08:47:09.084740', '2025-06-03 08:48:36.084740');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (42, 'finished', '2025-06-04 08:47:09.084766', '2025-06-04 08:48:27.084766');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (43, 'finished', '2025-05-31 08:47:09.084798', '2025-05-31 08:52:37.084798');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (44, 'finished', '2025-06-02 08:47:09.084830', '2025-06-02 08:57:02.084830');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (45, 'finished', '2025-06-05 08:47:09.084854', '2025-06-05 08:53:13.084854');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (46, 'finished', '2025-06-15 08:47:09.084888', '2025-06-15 08:55:20.084888');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (47, 'finished', '2025-06-22 08:47:09.084943', '2025-06-22 08:56:40.084943');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (48, 'finished', '2025-05-24 08:47:09.084977', '2025-05-24 08:51:54.084977');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (49, 'finished', '2025-06-07 08:47:09.085010', '2025-06-07 08:50:25.085010');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (50, 'finished', '2025-05-26 08:47:09.085047', '2025-05-26 08:55:36.085047');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (51, 'finished', '2025-05-18 08:47:09.085567', '2025-05-18 08:49:06.085567');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (52, 'finished', '2025-05-27 08:47:09.085630', '2025-05-27 08:51:24.085630');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (53, 'finished', '2025-06-04 08:47:09.085670', '2025-06-04 08:52:18.085670');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (54, 'finished', '2025-05-29 08:47:09.085689', '2025-05-29 08:49:05.085689');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (55, 'finished', '2025-07-07 08:47:09.085896', '2025-07-07 08:51:28.085896');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (56, 'finished', '2025-05-29 08:47:09.085932', '2025-05-29 08:48:09.085932');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (57, 'finished', '2025-06-14 08:47:09.085960', '2025-06-14 08:52:47.085960');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (58, 'finished', '2025-06-02 08:47:09.085987', '2025-06-02 08:48:53.085987');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (59, 'finished', '2025-06-05 08:47:09.086011', '2025-06-05 08:51:39.086011');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (60, 'finished', '2025-06-11 08:47:09.086035', '2025-06-11 08:53:42.086035');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (61, 'finished', '2025-06-04 08:47:09.086084', '2025-06-04 08:53:19.086084');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (62, 'finished', '2025-06-04 08:47:09.086110', '2025-06-04 08:52:35.086110');
            INSERT OR IGNORE INTO games (id, tournament_id, status, started_at, finished_at) VALUES (63, 1, 'completed', '2025-07-10 09:31:02.895139', '2025-07-10 09:39:02.895139');
            INSERT OR IGNORE INTO games (id, tournament_id, status, started_at, finished_at) VALUES (64, 1, 'completed', '2025-07-10 07:31:02.895139', '2025-07-10 07:34:02.895139');
            INSERT OR IGNORE INTO games (id, tournament_id, status, started_at, finished_at) VALUES (65, 1, 'completed', '2025-07-10 05:31:02.895139', '2025-07-10 05:34:02.895139');
            INSERT OR IGNORE INTO games (id, tournament_id, status, started_at, finished_at) VALUES (66, 2, 'completed', '2025-07-11 09:31:02.895139', '2025-07-11 09:38:02.895139');
            INSERT OR IGNORE INTO games (id, tournament_id, status, started_at, finished_at) VALUES (67, 2, 'completed', '2025-07-11 07:31:02.895139', '2025-07-11 07:40:02.895139');
            INSERT OR IGNORE INTO games (id, tournament_id, status, started_at, finished_at) VALUES (68, 2, 'completed', '2025-07-11 05:31:02.895139', '2025-07-11 05:37:02.895139');
            INSERT OR IGNORE INTO games (id, tournament_id, status, started_at, finished_at) VALUES (69, 3, 'completed', '2025-07-12 09:31:02.895139', '2025-07-12 09:36:02.895139');
            INSERT OR IGNORE INTO games (id, tournament_id, status, started_at, finished_at) VALUES (70, 3, 'completed', '2025-07-12 07:31:02.895139', '2025-07-12 07:36:02.895139');
            INSERT OR IGNORE INTO games (id, tournament_id, status, started_at, finished_at) VALUES (71, 3, 'completed', '2025-07-12 05:31:02.895139', '2025-07-12 05:34:02.895139');
            INSERT OR IGNORE INTO games (id, tournament_id, status, started_at, finished_at) VALUES (72, 4, 'completed', '2025-07-13 09:31:02.895139', '2025-07-13 09:38:02.895139');
            INSERT OR IGNORE INTO games (id, tournament_id, status, started_at, finished_at) VALUES (73, 4, 'completed', '2025-07-13 07:31:02.895139', '2025-07-13 07:39:02.895139');
            INSERT OR IGNORE INTO games (id, tournament_id, status, started_at, finished_at) VALUES (74, 4, 'completed', '2025-07-13 05:31:02.895139', '2025-07-13 05:39:02.895139');
            INSERT OR IGNORE INTO games (id, tournament_id, status, started_at, finished_at) VALUES (75, 5, 'completed', '2025-07-14 09:31:02.895139', '2025-07-14 09:40:02.895139');
            INSERT OR IGNORE INTO games (id, tournament_id, status, started_at, finished_at) VALUES (76, 5, 'completed', '2025-07-14 07:31:02.895139', '2025-07-14 07:40:02.895139');
            INSERT OR IGNORE INTO games (id, tournament_id, status, started_at, finished_at) VALUES (77, 5, 'completed', '2025-07-14 05:31:02.895139', '2025-07-14 05:39:02.895139');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (78,'finished',datetime('now','-21 hours'),datetime('now','-20 hours'));
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (79,'finished',datetime('now','-20 hours'),datetime('now','-19 hours'));
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (80,'finished',datetime('now','-19 hours'),datetime('now','-18 hours'));
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (81,'finished',datetime('now','-18 hours'),datetime('now','-17 hours'));
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (82,'finished',datetime('now','-17 hours'),datetime('now','-16 hours'));
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (83,'finished',datetime('now','-16 hours'),datetime('now','-15 hours'));
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (84,'finished',datetime('now','-15 hours'),datetime('now','-14 hours'));
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (85,'finished',datetime('now','-14 hours'),datetime('now','-13 hours'));
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (86,'finished',datetime('now','-13 hours'),datetime('now','-12 hours'));
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (87,'finished',datetime('now','-12 hours'),datetime('now','-11 hours'));
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (88,'finished',datetime('now','-11 hours'),datetime('now','-10 hours'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (1, 1, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (2, 1, 6, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (3, 2, 4, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (4, 2, 5, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (5, 3, 6, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (6, 3, 4, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (7, 4, 4, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (8, 4, 7, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (9, 5, 5, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (10, 5, 1, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (11, 6, 1, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (12, 6, 3, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (13, 7, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (14, 7, 6, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (15, 8, 7, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (16, 8, 2, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (17, 9, 6, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (18, 9, 3, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (19, 10, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (20, 10, 1, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (21, 11, 1, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (22, 11, 4, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (23, 12, 3, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (24, 12, 6, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (25, 13, 6, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (26, 13, 2, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (27, 14, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (28, 14, 1, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (29, 15, 3, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (30, 15, 1, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (31, 16, 6, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (32, 16, 4, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (33, 17, 6, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (34, 17, 4, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (35, 18, 1, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (36, 18, 3, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (37, 19, 5, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (38, 19, 6, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (39, 20, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (40, 20, 4, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (41, 21, 4, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (42, 21, 2, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (43, 22, 3, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (44, 22, 6, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (45, 23, 5, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (46, 23, 7, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (47, 24, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (48, 24, 4, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (49, 25, 7, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (50, 25, 4, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (51, 26, 4, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (52, 26, 3, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (53, 27, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (54, 27, 1, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (55, 28, 1, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (56, 28, 7, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (57, 29, 6, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (58, 29, 4, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (59, 30, 5, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (60, 30, 3, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (61, 31, 4, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (62, 31, 3, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (63, 32, 5, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (64, 32, 3, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (65, 33, 4, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (66, 33, 5, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (67, 34, 4, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (68, 34, 1, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (69, 35, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (70, 35, 3, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (71, 36, 5, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (72, 36, 7, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (73, 37, 6, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (74, 37, 2, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (75, 38, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (76, 38, 3, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (77, 39, 5, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (78, 39, 4, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (79, 40, 1, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (80, 40, 6, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (81, 41, 7, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (82, 41, 5, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (83, 42, 1, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (84, 42, 4, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (85, 43, 3, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (86, 43, 4, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (87, 44, 6, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (88, 44, 5, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (89, 45, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (90, 45, 1, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (91, 46, 7, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (92, 46, 2, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (93, 47, 7, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (94, 47, 1, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (95, 48, 3, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (96, 48, 2, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (97, 49, 7, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (98, 49, 4, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (99, 50, 1, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (100, 50, 6, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (101, 51, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (102, 51, NULL, 1, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (103, 52, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (104, 52, NULL, 1, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (105, 53, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (106, 53, NULL, 1, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (107, 54, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (108, 54, NULL, 1, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (109, 55, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (110, 55, NULL, 1, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (111, 56, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (112, 56, NULL, 1, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (113, 57, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (114, 57, NULL, 1, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (115, 58, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (116, 58, NULL, 1, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (117, 59, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (118, 59, NULL, 1, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (119, 60, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (120, 60, NULL, 1, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (121, 61, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (122, 61, NULL, 1, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (123, 62, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (124, 62, NULL, 1, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (125, 63, 3, 0, 1, 'Equipo A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (126, 63, 7, 0, 0, 'Equipo B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (127, 64, 5, 0, 1, 'Equipo A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (128, 64, 3, 0, 0, 'Equipo B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (129, 65, 2, 0, 1, 'Equipo A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (130, 65, 6, 0, 0, 'Equipo B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (131, 66, 2, 0, 1, 'Equipo A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (132, 66, 1, 0, 0, 'Equipo B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (133, 67, 4, 0, 1, 'Equipo A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (134, 67, 1, 0, 0, 'Equipo B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (135, 68, 2, 0, 1, 'Equipo A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (136, 68, 5, 0, 0, 'Equipo B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (137, 69, 2, 0, 1, 'Equipo A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (138, 69, 1, 0, 0, 'Equipo B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (139, 70, 2, 0, 1, 'Equipo A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (140, 70, 5, 0, 0, 'Equipo B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (141, 71, 3, 0, 1, 'Equipo A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (142, 71, 1, 0, 0, 'Equipo B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (143, 72, 4, 0, 1, 'Equipo A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (144, 72, 5, 0, 0, 'Equipo B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (145, 73, 5, 0, 1, 'Equipo A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (146, 73, 1, 0, 0, 'Equipo B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (147, 74, 2, 0, 1, 'Equipo A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (148, 74, 6, 0, 0, 'Equipo B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (149, 75, 5, 0, 1, 'Equipo A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (150, 75, 1, 0, 0, 'Equipo B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (151, 76, 5, 0, 1, 'Equipo A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (152, 76, 4, 0, 0, 'Equipo B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (153, 77, 2, 0, 1, 'Equipo A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (154, 77, 3, 0, 0, 'Equipo B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (155,78,1,0,1,'Team_1');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (156,78,NULL,1,0,'BOT_78');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (157,79,1,0,0,'Team_1');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (158,79,NULL,1,1,'BOT_79');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (159,80,1,0,1,'Team_1');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (160,80,NULL,1,0,'BOT_80');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (161,81,2,0,1,'Team_2');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (162,81,NULL,1,0,'BOT_81');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (163,82,2,0,0,'Team_2');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (164,82,NULL,1,1,'BOT_82');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (165,83,2,0,1,'Team_2');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (166,83,NULL,1,0,'BOT_83');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (167,84,3,0,1,'Team_3');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (168,84,NULL,1,0,'BOT_84');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (169,85,3,0,0,'Team_3');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (170,85,NULL,1,1,'BOT_85');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (171,86,3,0,1,'Team_3');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (172,86,NULL,1,0,'BOT_86');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (173,87,4,0,1,'Team_4');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (174,87,NULL,1,0,'BOT_87');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (175,88,4,0,0,'Team_4');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (176,88,NULL,1,1,'BOT_88');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (1, 1, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (2, 1, 4, 'B', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (3, 2, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (4, 2, 1, 'B', 0);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (5, 3, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (6, 3, 3, 'B', 1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (7, 4, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (8, 4, 7, 'B', 4);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (9, 5, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (10, 5, 3, 'B', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (11, 6, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (12, 6, 5, 'B', 1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (13, 7, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (14, 7, 6, 'B', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (15, 8, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (16, 8, 6, 'B', 4);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (17, 9, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (18, 9, 6, 'B', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (19, 10, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (20, 10, 4, 'B', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (21, 11, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (22, 11, 3, 'B', 1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (23, 12, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (24, 12, 7, 'B', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (25, 13, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (26, 13, 5, 'B', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (27, 14, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (28, 14, 5, 'B', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (29, 15, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (30, 15, 5, 'B', 0);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (31, 16, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (32, 16, 7, 'B', 1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (33, 17, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (34, 17, 1, 'B', 0);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (35, 18, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (36, 18, 4, 'B', 4);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (37, 19, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (38, 19, 7, 'B', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (39, 20, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (40, 20, 1, 'B', 4);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (41, 21, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (42, 21, 1, 'B', 4);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (43, 22, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (44, 22, 3, 'B', 0);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (45, 23, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (46, 23, 4, 'B', 1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (47, 24, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (48, 24, 3, 'B', 1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (49, 25, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (50, 25, 6, 'B', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (51, 26, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (52, 26, 5, 'B', 1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (53, 27, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (54, 27, 4, 'B', 0);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (55, 28, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (56, 28, 7, 'B', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (57, 29, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (58, 29, 6, 'B', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (59, 30, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (60, 30, 3, 'B', 0);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (61, 31, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (62, 31, 6, 'B', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (63, 32, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (64, 32, 3, 'B', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (65, 33, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (66, 33, 7, 'B', 4);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (67, 34, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (68, 34, 1, 'B', 1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (69, 35, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (70, 35, 4, 'B', 1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (71, 36, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (72, 36, 3, 'B', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (73, 37, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (74, 37, 5, 'B', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (75, 38, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (76, 38, 5, 'B', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (77, 39, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (78, 39, 6, 'B', 1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (79, 40, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (80, 40, 6, 'B', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (81, 41, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (82, 41, 3, 'B', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (83, 42, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (84, 42, 7, 'B', 0);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (85, 43, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (86, 43, 6, 'B', 4);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (87, 44, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (88, 44, 7, 'B', 0);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (89, 45, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (90, 45, 4, 'B', 4);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (91, 46, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (92, 46, 6, 'B', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (93, 47, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (94, 47, 4, 'B', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (95, 48, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (96, 48, 4, 'B', 0);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (97, 49, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (98, 49, 6, 'B', 0);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (99, 50, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (100, 50, 3, 'B', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (101, 51, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (102, 51, 6, 'B', 1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (103, 52, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (104, 52, 7, 'B', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (105, 53, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (106, 53, 4, 'B', 1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (107, 54, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (108, 54, 5, 'B', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (109, 55, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (110, 55, 4, 'B', 1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (111, 56, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (112, 56, 3, 'B', 0);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (113, 57, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (114, 57, 6, 'B', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (115, 58, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (116, 58, 7, 'B', 4);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (117, 59, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (118, 59, 4, 'B', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (119, 60, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (120, 60, 3, 'B', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (121, 61, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (122, 61, 3, 'B', 0);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (123, 62, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (124, 62, 3, 'B', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (125, 63, 3, 'Equipo A', 5, '2025-07-14 10:00:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (126, 63, 7, 'Equipo B', 4, '2025-07-14 10:00:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (127, 64, 5, 'Equipo A', 5, '2025-07-14 10:01:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (128, 64, 3, 'Equipo B', 3, '2025-07-14 10:01:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (129, 65, 2, 'Equipo A', 5, '2025-07-14 10:02:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (130, 65, 6, 'Equipo B', 4, '2025-07-14 10:02:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (131, 66, 2, 'Equipo A', 5, '2025-07-14 10:03:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (132, 66, 1, 'Equipo B', 0, '2025-07-14 10:03:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (133, 67, 4, 'Equipo A', 5, '2025-07-14 10:04:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (134, 67, 1, 'Equipo B', 1, '2025-07-14 10:04:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (135, 68, 2, 'Equipo A', 5, '2025-07-14 10:05:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (136, 68, 5, 'Equipo B', 2, '2025-07-14 10:05:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (137, 69, 2, 'Equipo A', 5, '2025-07-14 10:06:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (138, 69, 1, 'Equipo B', 3, '2025-07-14 10:06:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (139, 70, 2, 'Equipo A', 5, '2025-07-14 10:07:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (140, 70, 5, 'Equipo B', 1, '2025-07-14 10:07:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (141, 71, 3, 'Equipo A', 5, '2025-07-14 10:08:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (142, 71, 1, 'Equipo B', 4, '2025-07-14 10:08:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (143, 72, 4, 'Equipo A', 5, '2025-07-14 10:09:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (144, 72, 5, 'Equipo B', 1, '2025-07-14 10:09:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (145, 73, 5, 'Equipo A', 5, '2025-07-14 10:10:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (146, 73, 1, 'Equipo B', 1, '2025-07-14 10:10:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (147, 74, 2, 'Equipo A', 5, '2025-07-14 10:11:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (148, 74, 6, 'Equipo B', 4, '2025-07-14 10:11:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (149, 75, 5, 'Equipo A', 5, '2025-07-14 10:12:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (150, 75, 1, 'Equipo B', 2, '2025-07-14 10:12:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (151, 76, 5, 'Equipo A', 5, '2025-07-14 10:13:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (152, 76, 4, 'Equipo B', 4, '2025-07-14 10:13:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (153, 77, 2, 'Equipo A', 5, '2025-07-14 10:14:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (154, 77, 3, 'Equipo B', 0, '2025-07-14 10:14:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (155,78,1,'Team_1',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (156,78,NULL,'BOT_78',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (157,79,1,'Team_1',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (158,79,NULL,'BOT_79',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (159,80,1,'Team_1',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (160,80,NULL,'BOT_80',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (161,81,2,'Team_2',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (162,81,NULL,'BOT_81',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (163,82,2,'Team_2',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (164,82,NULL,'BOT_82',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (165,83,2,'Team_2',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (166,83,NULL,'BOT_83',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (167,84,3,'Team_3',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (168,84,NULL,'BOT_84',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (169,85,3,'Team_3',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (170,85,NULL,'BOT_85',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (171,86,3,'Team_3',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (172,86,NULL,'BOT_86',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (173,87,4,'Team_4',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (174,87,NULL,'BOT_87',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (175,88,4,'Team_4',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (176,88,NULL,'BOT_88',1);
        `);
        console.log('Base de datos inicializada y tablas creadas (si no existían).');
    } finally {
        await db.close();
    }
}
[1;30m----------------------------------------[0m

[1;34m=== ./db-service/src/server.ts ===[0m
import Fastify from 'fastify';
import { initializeDb, openDb } from './database';

const fastify = Fastify({
    logger: true
});

// Usar fastify.ready() en lugar de fastify.onReady()
fastify.ready(async (err) => {
    if (err) {
        fastify.log.error('Error durante la inicialización de Fastify:', err);
        process.exit(1);
    }
    await initializeDb();
});

fastify.get('/users', async (request, reply) => {
    const db = await openDb();
    try {
        const users = await db.all('SELECT id, username, email FROM users');
        return users;
    } finally {
        await db.close();
    }
});

fastify.post('/users', async (request, reply) => {
    const { username, password_hash, email } = request.body as any;
    if (!username || !password_hash || !email) {
        reply.code(400).send({ message: 'Missing required fields' });
        return;
    }
    const db = await openDb();
    try {
        const result = await db.run('INSERT INTO users (username, password_hash, email) VALUES (?, ?, ?)', username, password_hash, email);
        reply.code(201).send({ id: result.lastID, message: 'User created' });
    } catch (error: any) {
        if (error.code === 'SQLITE_CONSTRAINT') {
            reply.code(409).send({ message: 'Username or email already exists' });
        } else {
            fastify.log.error(error);
            reply.code(500).send({ message: 'Internal Server Error' });
        }
    } finally {
        await db.close();
    }
});

// Nuevo endpoint para guardar estadísticas del juego
fastify.post('/game/stats', async (request, reply) => {
    const { 
        player1_id, 
        player2_id, 
        player1_name, 
        player2_name, 
        score1, 
        score2, 
        winner_id, 
        winner_name, 
        game_mode, 
        duration, 
        start_time, 
        end_time 
    } = request.body as any;

    if (!player1_id || !player2_id || score1 === undefined || score2 === undefined) {
        reply.code(400).send({ message: 'Missing required fields' });
        return;
    }

    const db = await openDb();
    try {
        // Actualizar la tabla games con información adicional
        const result = await db.run(
            `INSERT INTO games (
                player1_id, player2_id, score1, score2, status, 
                start_time, end_time, winner_id, winner_name, 
                game_mode, duration
            ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`,
            player1_id, player2_id, score1, score2, 'finished',
            start_time, end_time, winner_id, winner_name,
            game_mode, duration
        );

        fastify.log.info(`Game stats saved with ID: ${result.lastID}`);
        reply.code(201).send({ 
            id: result.lastID, 
            message: 'Game statistics saved successfully' 
        });
    } catch (error: any) {
        fastify.log.error('Error saving game stats:', error);
        reply.code(500).send({ message: 'Internal Server Error' });
    } finally {
        await db.close();
    }
});

// Endpoint para obtener estadísticas del juego
fastify.get('/game/stats/:userId', async (request, reply) => {
    const { userId } = request.params as any;
    
    const db = await openDb();
    try {
        const stats = await db.all(
            `SELECT * FROM games 
             WHERE player1_id = ? OR player2_id = ? 
             ORDER BY start_time DESC`,
            userId, userId
        );
        return stats;
    } finally {
        await db.close();
    }
});

const start = async () => {
    try {
        await fastify.listen({ port: 8000, host: '0.0.0.0' }); // Escucha en el puerto 8000
        console.log('db-service escuchando en el puerto 8000');
    } catch (err) {
        fastify.log.error(err);
        process.exit(1);
    }
};

start();
[1;30m----------------------------------------[0m

[1;34m=== ./db-service/src/redis-client.ts ===[0m
// auth-service/src/redis-client.ts

import { createClient } from 'redis';

import dotenv from 'dotenv';
dotenv.config();

const redis = createClient({
  url: process.env.REDIS_URL || `redis://:${process.env.REDIS_PASSWORD || ''}@${process.env.REDIS_HOST || 'redis'}:${process.env.REDIS_PORT || '6379'}`
});

redis.on('error', (err) => {
  console.error('Redis client error:', err);
});

(async () => {
  try {
    await redis.connect();
    console.log('Redis client connected');
  } catch (err) {
    console.error('Redis connection failed:', err);
  }
})();

export default redis;
[1;30m----------------------------------------[0m

[1;34m=== ./db-service/sqlite-writer/tsconfig.json ===[0m
{
  "compilerOptions": {
    "target": "ES2020",
    "module": "ESNext",
    "moduleResolution": "Node",
    "strict": true,
    "esModuleInterop": true,
    "forceConsistentCasingInFileNames": true,
    "skipLibCheck": true,
    "outDir": "dist",
    "types": ["node"]
  },
  "include": ["writer.ts"]
}
[1;30m----------------------------------------[0m

[1;34m=== ./db-service/sqlite-writer/package.json ===[0m
{
  "name": "sqlite-writer",
  "version": "1.0.0",
  "main": "dist/writer.js",
  "type": "module",
  "scripts": {
    "build": "tsc",
    "start": "node dist/writer.js"
  },
    "dependencies": {
    "dotenv": "^16.0.0",
    "typescript": "^5.4.5",
    "ioredis": "^5.3.2",
    "sqlite3": "^5.1.6",
    "@types/node": "^20.0.0"
  }
}


[1;30m----------------------------------------[0m

[1;34m=== ./db-service/sqlite-writer/Dockerfile ===[0m
FROM node:20-alpine

WORKDIR /app

COPY package.json tsconfig.json writer.ts ./

RUN npm install && npm run build

CMD ["node", "dist/writer.js"]
[1;30m----------------------------------------[0m

[1;34m=== ./db-service/sqlite-writer/writer.ts ===[0m
import Redis from 'ioredis';
import sqlite3 from 'sqlite3';

// Conexión Redis
import dotenv from 'dotenv';
dotenv.config();

const redis = new Redis({
  host: process.env.REDIS_HOST || 'redis',
  port: Number(process.env.REDIS_PORT) || 6379,
  password: process.env.REDIS_PASSWORD || undefined,
});

// Conexión SQLite
const db = new sqlite3.Database('/app/data/app.db', (err) => {
  if (err) {
    console.error('❌ Error abriendo SQLite:', err.message);
    process.exit(1);
  }
  console.log('✅ Conectado a SQLite');
});

// Procesar mensajes de Redis
const queueName = 'sqlite_write_queue';

async function listenForWrites() {
  console.log(`📥 Escuchando en la cola Redis: ${queueName}...`);

  while (true) {
    try {
      const result = await redis.blpop(queueName, 0); // [key, value]
      if (!result) continue; // seguridad
      const payload = JSON.parse(result[1]);

      
      console.log('📄 Recibido:', payload);

      db.run(payload.sql, payload.params || [], function (err) {
        if (err) {
          console.error('❌ Error al ejecutar SQL:', err.message);
        } else {
          console.log(`✅ SQL ejecutado. Filas afectadas: ${this.changes}`);
        }
      });

    } catch (err) {
      console.error('⚠️ Error en bucle principal:', err);
    }
  }
}

listenForWrites();
[1;30m----------------------------------------[0m

[1;34m=== ./db-service/package.json ===[0m
{
  "name": "db-service",
  "version": "1.0.0",
  "description": "Microservicio para db-service",
  "main": "dist/server.js",
  "scripts": {
    "build": "tsc",
    "start": "node dist/server.js",
    "dev": "ts-node-dev src/server.ts",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
    "dependencies": {
    "dotenv": "^16.0.0",
    "fastify": "^4.x.x",
    "sqlite3": "^5.x.x",
    "sqlite": "^5.x.x",
    "redis": "^4.6.7"
  },
  "devDependencies": {
    "@types/node": "^20.x.x",
    "ts-node": "^10.x.x",
    "ts-node-dev": "^2.x.x",
    "typescript": "^5.x.x"
  }
}
[1;30m----------------------------------------[0m

[1;34m=== ./db-service/Dockerfile ===[0m
FROM node:20-alpine

WORKDIR /app

# Instala Python y herramientas necesarias para sqlite3
RUN apk add --no-cache python3 build-base

# Instala dependencias de Node.js
COPY package*.json ./
RUN npm install

# Copia el resto del código y compila TypeScript
COPY . .
RUN npm run build

# Instala 'concurrently' para ejecutar server + redis-writer
RUN npm install --save concurrently

EXPOSE 8000

# Ejecuta servidor y consumidor de cola Redis simultáneamente
CMD ["node", "dist/server.js"]


[1;30m----------------------------------------[0m

[1;34m=== ./.env ===[0m
# Redis settings for all microservices
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_MAXMEMORY=256mb
REDIS_PASSWORD=o-meu-contrasinal.42

# Service URLs for gateway proxies
AUTH_SERVICE_URL=http://auth-service:8000
GAME_SERVICE_URL=http://game-service:8000
CHAT_SERVICE_URL=http://chat-service:8000

# Any other shared variables can go here

DATA_PATH=/root/data/transcendence

JWT_SECRET=supersecreto123


[1;30m----------------------------------------[0m

[1;34m=== ./start-dev.sh ===[0m
#!/bin/bash

echo "🚀 Iniciando servicios de desarrollo..."

# Detener contenedores anteriores
echo "📦 Deteniendo contenedores anteriores..."
docker compose down

# Construir e iniciar servicios
echo "🔨 Construyendo e iniciando servicios..."
docker compose up --build -d

# Esperar a que los servicios estén listos
echo "⏳ Esperando a que los servicios estén listos..."
sleep 10

# Verificar estados
echo "📊 Verificando estados de los servicios..."
echo "Frontend: http://localhost:9001"
echo "Game Service: http://localhost:8002"
echo "API Gateway: http://localhost:9000"

# Mostrar logs del game-service
echo "📋 Mostrando logs del game-service..."
docker logs game-service --tail 20

echo "✅ Servicios iniciados. Puedes acceder a:"
echo "   - Frontend: http://localhost:9001"
echo "   - WAF: http://localhost:9002"
echo "   - Game API: http://localhost:8002"
echo "   - Auth API: http://localhost:8001"
echo "   - Chat API: http://localhost:8003"
echo "   - API Gateway: http://localhost:9000"
[1;30m----------------------------------------[0m

[1;34m=== ./chat-service/tsconfig.json ===[0m
{
  "compilerOptions": {
    "target": "es2021",
    "module": "commonjs",
    "outDir": "./dist",
    "strict": true,
    "esModuleInterop": true,
    "skipLibCheck": true,
    "forceConsistentCasingInFileNames": true
  },
  "include": ["src/**/*.ts"],
  "exclude": ["node_modules"]
}
[1;30m----------------------------------------[0m

[1;34m=== ./chat-service/src/server.ts ===[0m
import Fastify from 'fastify';

const fastify = Fastify({
    logger: true
});

fastify.get('/', async (request, reply) => {
    return { service: 'chat-service', message: 'Hello from chat-service!' };
});

const start = async () => {
    try {
        await fastify.listen({ port: 8000, host: '0.0.0.0' }); // Escucha en el puerto 8000
        console.log(`chat-service escuchando en el puerto 8000`);
    } catch (err) {
        fastify.log.error(err);
        process.exit(1);
    }
};

start();
[1;30m----------------------------------------[0m

[1;34m=== ./chat-service/package.json ===[0m
{
  "name": "chat-service",
  "version": "1.0.0",
  "description": "Microservicio para chat-service",
  "main": "dist/server.js",
  "scripts": {
    "build": "tsc",
    "start": "node dist/server.js",
    "dev": "ts-node-dev src/server.ts",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "fastify": "^4.x.x"
  },
  "devDependencies": {
    "@types/node": "^20.x.x",
    "ts-node": "^10.x.x",
    "ts-node-dev": "^2.x.x",
    "typescript": "^5.x.x"
  }
}
[1;30m----------------------------------------[0m

[1;34m=== ./chat-service/Dockerfile ===[0m
FROM node:20-alpine
WORKDIR /app
COPY package*.json ./
RUN npm install
COPY . .
RUN npm run build
EXPOSE 8000
CMD ["npm", "start"]
[1;30m----------------------------------------[0m

[1;34m=== ./test_auth_system.sh ===[0m
#!/bin/bash

echo "🚀 Iniciando pruebas del sistema de autenticación..."

# Colores para mejor legibilidad
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Función para imprimir resultados
print_result() {
    if [ $1 -eq 0 ]; then
        echo -e "${GREEN}✅ $2${NC}"
    else
        echo -e "${RED}❌ $2${NC}"
    fi
}

echo -e "${YELLOW}1. Probando registro de usuario...${NC}"
REGISTER_RESULT=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8001/auth/register -X POST -H "Content-Type: application/json" -d '{"username":"testuser3","email":"test3@example.com","password":"password123"}')
print_result $([[ $REGISTER_RESULT == "201" ]] && echo 0 || echo 1) "Registro de usuario (HTTP $REGISTER_RESULT)"

echo -e "${YELLOW}2. Probando login con credenciales válidas...${NC}"
LOGIN_RESULT=$(curl -s http://localhost:8001/auth/login -X POST -H "Content-Type: application/json" -d '{"email":"test3@example.com","password":"password123"}')
TOKEN=$(echo $LOGIN_RESULT | grep -o '"token":"[^"]*"' | cut -d'"' -f4)
print_result $([[ -n "$TOKEN" ]] && echo 0 || echo 1) "Login exitoso - Token obtenido"

echo -e "${YELLOW}3. Probando login con credenciales inválidas...${NC}"
INVALID_LOGIN=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8001/auth/login -X POST -H "Content-Type: application/json" -d '{"email":"test3@example.com","password":"wrongpassword"}')
print_result $([[ $INVALID_LOGIN == "401" ]] && echo 0 || echo 1) "Login con credenciales inválidas rechazado (HTTP $INVALID_LOGIN)"

echo -e "${YELLOW}4. Probando registro con email duplicado...${NC}"
DUPLICATE_REGISTER=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8001/auth/register -X POST -H "Content-Type: application/json" -d '{"username":"testuser4","email":"test3@example.com","password":"password123"}')
print_result $([[ $DUPLICATE_REGISTER == "409" ]] && echo 0 || echo 1) "Registro con email duplicado rechazado (HTTP $DUPLICATE_REGISTER)"

echo -e "${YELLOW}5. Verificando que el frontend esté accesible...${NC}"
FRONTEND_STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:9001)
print_result $([[ $FRONTEND_STATUS == "200" ]] && echo 0 || echo 1) "Frontend accesible (HTTP $FRONTEND_STATUS)"

echo -e "${YELLOW}6. Verificando que el script de Google esté incluido...${NC}"
GOOGLE_SCRIPT=$(curl -s http://localhost:9001 | grep -c "accounts.google.com/gsi/client")
print_result $([[ $GOOGLE_SCRIPT -gt 0 ]] && echo 0 || echo 1) "Script de Google incluido en el HTML"

echo ""
echo -e "${GREEN}🎉 Pruebas completadas!${NC}"
echo ""
echo -e "${YELLOW}📋 Resumen de funcionalidades implementadas:${NC}"
echo "✅ Registro de usuario con email/username/password"
echo "✅ Login con email/password"
echo "✅ Generación de JWT tokens"
echo "✅ Validación de credenciales"
echo "✅ Prevención de registros duplicados"
echo "✅ Integración con Google Sign-In (frontend)"
echo "✅ Sistema de autenticación JWT"
echo "✅ CORS habilitado"
echo "✅ Base de datos SQLite funcional"
echo ""
echo -e "${YELLOW}🌐 URLs de acceso:${NC}"
echo "Frontend: http://localhost:9001"
echo "Auth Service: http://localhost:8001"
echo ""
echo -e "${YELLOW}🔑 Token de ejemplo obtenido:${NC}"
echo "$TOKEN"
[1;30m----------------------------------------[0m

[1;34m=== ./auth-service/tsconfig.json ===[0m
{
  "compilerOptions": {
    "target": "es2021",
    "module": "commonjs",
    "outDir": "./dist",
    "strict": true,
    "esModuleInterop": true,
    "skipLibCheck": true,
    "forceConsistentCasingInFileNames": true
  },
  "include": ["src/**/*.ts"],
  "exclude": ["node_modules"]
}
[1;30m----------------------------------------[0m

[1;34m=== ./auth-service/src/database.ts ===[0m
import sqlite3 from 'sqlite3';
import { open, Database } from 'sqlite'; // Importar Database de sqlite
import path from 'path';

// Asegúrate de que el directorio 'data' exista en la raíz del proyecto para la persistencia.
// Docker montará un volumen aquí.
const DB_PATH = path.join(__dirname, '../data/app.db');

export async function openDb(): Promise<Database> { // Especificar tipo de retorno
    return open({
        filename: DB_PATH,
        driver: sqlite3.Database
    });
}

export async function initializeDb() {
    const db = await openDb();
    try {
        await db.exec(`
            CREATE TABLE IF NOT EXISTS users ( id INTEGER PRIMARY KEY AUTOINCREMENT, username TEXT UNIQUE NOT NULL, email TEXT UNIQUE NOT NULL, password_hash TEXT, google_id TEXT UNIQUE, intra_id TEXT UNIQUE, is_active BOOLEAN DEFAULT 1, is_admin BOOLEAN DEFAULT 0, last_login DATETIME, created_at DATETIME DEFAULT CURRENT_TIMESTAMP);
            CREATE TABLE IF NOT EXISTS user_profiles ( user_id INTEGER PRIMARY KEY, avatar_url TEXT, bio TEXT, language TEXT DEFAULT 'es', notifications BOOLEAN DEFAULT 1, sound BOOLEAN DEFAULT 1, difficulty INTEGER DEFAULT 2, theme TEXT DEFAULT 'light', FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE);
            CREATE TABLE IF NOT EXISTS sessions ( id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, session_token TEXT UNIQUE NOT NULL, expires_at DATETIME NOT NULL, created_at DATETIME DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE);
            CREATE TABLE IF NOT EXISTS friendships ( id INTEGER PRIMARY KEY AUTOINCREMENT, requester_id INTEGER NOT NULL, approver_id INTEGER, status TEXT DEFAULT 'pending', created_at DATETIME DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (requester_id) REFERENCES users(id) ON DELETE CASCADE, FOREIGN KEY (approver_id) REFERENCES users(id) ON DELETE CASCADE);
            CREATE TABLE IF NOT EXISTS chat_messages ( id INTEGER PRIMARY KEY AUTOINCREMENT, sender_id INTEGER NOT NULL, receiver_id INTEGER, message TEXT NOT NULL, sent_at DATETIME DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (sender_id) REFERENCES users(id) ON DELETE CASCADE, FOREIGN KEY (receiver_id) REFERENCES users(id) ON DELETE CASCADE);
            CREATE TABLE IF NOT EXISTS tournaments ( id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT NOT NULL, created_by INTEGER, status TEXT DEFAULT 'upcoming', created_at DATETIME DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (created_by) REFERENCES users(id) ON DELETE SET NULL);
            CREATE TABLE IF NOT EXISTS games ( id INTEGER PRIMARY KEY AUTOINCREMENT, tournament_id INTEGER, status TEXT DEFAULT 'pending', started_at DATETIME, finished_at DATETIME, FOREIGN KEY (tournament_id) REFERENCES tournaments(id) ON DELETE SET NULL);
            CREATE TABLE IF NOT EXISTS participants ( id INTEGER PRIMARY KEY AUTOINCREMENT, game_id INTEGER NOT NULL, user_id INTEGER, is_bot BOOLEAN DEFAULT 0, is_winner BOOLEAN DEFAULT 0, team_name TEXT NOT NULL, FOREIGN KEY (game_id) REFERENCES games(id) ON DELETE CASCADE, FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE SET NULL);
            CREATE TABLE IF NOT EXISTS scores (id INTEGER PRIMARY KEY AUTOINCREMENT, game_id INTEGER NOT NULL, scorer_id INTEGER, team_name TEXT NOT NULL, point_number INTEGER NOT NULL, timestamp DATETIME DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (game_id) REFERENCES games(id) ON DELETE CASCADE,  FOREIGN KEY (scorer_id) REFERENCES users(id) ON DELETE SET NULL);
            CREATE TABLE IF NOT EXISTS user_stats ( user_id INTEGER PRIMARY KEY, gamesplayed INTEGER DEFAULT 0, games_won INTEGER DEFAULT 0, game_lost INTEGER DEFAULT 0, best_score INTEGER DEFAULT 0, total_points INTEGER DEFAULT 0, received_points INTEGER DEFAULT 0, win_rate REAL DEFAULT 0.0, FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE);
            INSERT OR IGNORE INTO users (id, username, email, password_hash, created_at) VALUES (1, 'Manu', 'ardeiro@outlook.com', '$2b$12$U.2UHoDtA3/oeQHQIrznVuBokjoVRTfdv2zM7Qv7E3H0AldZ1Qhbe', datetime('now', '-1 days'));
            INSERT OR IGNORE INTO users (id, username, email, password_hash, created_at) VALUES (2, 'Ardeiro', 'ardeiro@gmail.com', '$2b$12$/1r9td3OkeutXq16OoALGuUeEO/nCCX4AwLvFJ2ZYZNWEuzkMyzEG', datetime('now', '-2 days'));
            INSERT OR IGNORE INTO users (id, username, email, password_hash, created_at) VALUES (3, 'HAL7000', 'manuel.ardeiro@gmail.com', '$2b$12$RagfU1ULf9zvoZBRqcQ5XOb.EgZybLX2mfr9W3gaKYiWiTUzi5sC6', datetime('now', '-3 days'));
            INSERT OR IGNORE INTO users (id, username, email, password_hash, created_at) VALUES (4, 'Verdu', 'jorge.verdu.ruiz@gmail.com', '$2b$12$fmkXJsqahw1S9bM8fQ6G3uhnDCfrLZlUwvKlKmr5SASA7AbX6kQZq', datetime('now', '-4 days'));
            INSERT OR IGNORE INTO users (id, username, email, password_hash, created_at) VALUES (5, 'David', 'david.aparicio247@hotmail.com', '$2b$12$iASlBV76WELxwwjOUmWeM.FjqHuDhkWQEEbTBBNRZb4B6/tEfyCmC', datetime('now', '-5 days'));
            INSERT OR IGNORE INTO users (id, username, email, password_hash, created_at) VALUES (6, 'ManuFern', 'manufern@student.42madrid.com', '$2b$12$1Mqudh5FrajQHKxtBOG26O/dL47xnZrbbQ8HjcipegON1NQdMFXou', datetime('now', '-6 days'));
            INSERT OR IGNORE INTO users (id, username, email, password_hash, created_at) VALUES (7, 'Diego', 'diegorubiomorato@gmail.com', '$2b$12$SC.8HYivrjOrLQQscZz7SuBNY4vodoHRh.cWXQ0htB/vBBJxblJPa', datetime('now', '-7 days'));
            INSERT OR IGNORE INTO user_profiles (user_id, avatar_url, bio, language, notifications, sound, difficulty, theme) VALUES (1, NULL, '', 'es', 1, 1, 2, 'light');
            INSERT OR IGNORE INTO user_profiles (user_id, avatar_url, bio, language, notifications, sound, difficulty, theme) VALUES (2, NULL, '', 'es', 1, 1, 2, 'light');
            INSERT OR IGNORE INTO user_profiles (user_id, avatar_url, bio, language, notifications, sound, difficulty, theme) VALUES (3, NULL, '', 'es', 1, 1, 2, 'light');
            INSERT OR IGNORE INTO user_profiles (user_id, avatar_url, bio, language, notifications, sound, difficulty, theme) VALUES (4, NULL, '', 'es', 1, 1, 2, 'light');
            INSERT OR IGNORE INTO user_profiles (user_id, avatar_url, bio, language, notifications, sound, difficulty, theme) VALUES (5, NULL, '', 'es', 1, 1, 2, 'light');
            INSERT OR IGNORE INTO user_profiles (user_id, avatar_url, bio, language, notifications, sound, difficulty, theme) VALUES (6, NULL, '', 'es', 1, 1, 2, 'light');
            INSERT OR IGNORE INTO user_profiles (user_id, avatar_url, bio, language, notifications, sound, difficulty, theme) VALUES (7, NULL, '', 'es', 1, 1, 2, 'light');
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (1, 1, 2, 'accepted', datetime('now', '-1 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (2, 3, 4, 'accepted', datetime('now', '-2 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (3, 2, 7, 'accepted', datetime('now', '-3 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (4, 1, 5, 'accepted', datetime('now', '-4 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (5, 3, 7, 'accepted', datetime('now', '-5 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (6, 4, 6, 'accepted', datetime('now', '-6 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (7, 1, 4, 'accepted', datetime('now', '-7 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (8, 5, 7, 'accepted', datetime('now', '-8 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (9, 6, 7, 'accepted', datetime('now', '-9 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (10, 1, 7, 'accepted', datetime('now', '-10 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (11, 4, 5, 'accepted', datetime('now', '-11 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (12, 5, 6, 'accepted', datetime('now', '-12 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (13, 3, 6, 'accepted', datetime('now', '-13 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (14, 2, 5, 'accepted', datetime('now', '-14 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (15, 1, 3, 'accepted', datetime('now', '-15 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (16, 4, 7, 'accepted', datetime('now', '-16 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (17, 3, 5, 'accepted', datetime('now', '-17 hours'));
            INSERT OR IGNORE INTO tournaments (id, name, created_by, status, created_at) VALUES (1, 'Torneo 1', 2, 'completed', datetime('now', '-1 days'));
            INSERT OR IGNORE INTO tournaments (id, name, created_by, status, created_at) VALUES (2, 'Torneo 2', 6, 'completed', datetime('now', '-2 days'));
            INSERT OR IGNORE INTO tournaments (id, name, created_by, status, created_at) VALUES (3, 'Torneo 3', 4, 'completed', datetime('now', '-3 days'));
            INSERT OR IGNORE INTO tournaments (id, name, created_by, status, created_at) VALUES (4, 'Torneo 4', 1, 'completed', datetime('now', '-4 days'));
            INSERT OR IGNORE INTO tournaments (id, name, created_by, status, created_at) VALUES (5, 'Torneo 5', 6, 'completed', datetime('now', '-5 days'));
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (1, 'finished', '2025-07-08 08:47:09.083019', '2025-07-08 08:54:35.083019');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (2, 'finished', '2025-07-04 08:47:09.083138', '2025-07-04 08:53:13.083138');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (3, 'finished', '2025-06-18 08:47:09.083191', '2025-06-18 08:53:44.083191');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (4, 'finished', '2025-05-30 08:47:09.083235', '2025-05-30 08:51:08.083235');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (5, 'finished', '2025-06-05 08:47:09.083262', '2025-06-05 08:51:43.083262');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (6, 'finished', '2025-06-19 08:47:09.083300', '2025-06-19 08:54:10.083300');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (7, 'finished', '2025-05-18 08:47:09.083336', '2025-05-18 08:53:40.083336');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (8, 'finished', '2025-06-19 08:47:09.083374', '2025-06-19 08:53:23.083374');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (9, 'finished', '2025-05-19 08:47:09.083411', '2025-05-19 08:49:32.083411');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (10, 'finished', '2025-07-04 08:47:09.083464', '2025-07-04 08:49:39.083464');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (11, 'finished', '2025-05-31 08:47:09.083498', '2025-05-31 08:55:47.083498');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (12, 'finished', '2025-06-28 08:47:09.083552', '2025-06-28 08:50:37.083552');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (13, 'finished', '2025-05-26 08:47:09.083604', '2025-05-26 08:51:18.083604');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (14, 'finished', '2025-06-07 08:47:09.083820', '2025-06-07 08:54:35.083820');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (15, 'finished', '2025-06-22 08:47:09.083856', '2025-06-22 08:49:51.083856');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (16, 'finished', '2025-06-12 08:47:09.083890', '2025-06-12 08:52:44.083890');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (17, 'finished', '2025-07-13 08:47:09.083923', '2025-07-13 08:55:22.083923');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (18, 'finished', '2025-06-16 08:47:09.083962', '2025-06-16 08:56:41.083962');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (19, 'finished', '2025-07-01 08:47:09.083994', '2025-07-01 08:52:36.083994');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (20, 'finished', '2025-06-19 08:47:09.084025', '2025-06-19 08:56:32.084025');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (21, 'finished', '2025-06-30 08:47:09.084045', '2025-06-30 08:50:27.084045');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (22, 'finished', '2025-07-01 08:47:09.084064', '2025-07-01 08:57:02.084064');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (23, 'finished', '2025-06-01 08:47:09.084093', '2025-06-01 08:54:33.084093');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (24, 'finished', '2025-06-12 08:47:09.084129', '2025-06-12 08:52:22.084129');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (25, 'finished', '2025-05-18 08:47:09.084169', '2025-05-18 08:54:50.084169');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (26, 'finished', '2025-05-19 08:47:09.084199', '2025-05-19 08:55:28.084199');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (27, 'finished', '2025-07-12 08:47:09.084235', '2025-07-12 08:51:29.084235');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (28, 'finished', '2025-06-05 08:47:09.084292', '2025-06-05 08:49:34.084292');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (29, 'finished', '2025-06-03 08:47:09.084349', '2025-06-03 08:51:03.084349');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (30, 'finished', '2025-06-30 08:47:09.084385', '2025-06-30 08:55:34.084385');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (31, 'finished', '2025-07-02 08:47:09.084420', '2025-07-02 08:56:24.084420');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (32, 'finished', '2025-05-22 08:47:09.084453', '2025-05-22 08:53:48.084453');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (33, 'finished', '2025-07-03 08:47:09.084484', '2025-07-03 08:49:29.084484');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (34, 'finished', '2025-05-29 08:47:09.084526', '2025-05-29 08:52:02.084526');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (35, 'finished', '2025-06-20 08:47:09.084556', '2025-06-20 08:51:17.084556');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (36, 'finished', '2025-06-07 08:47:09.084576', '2025-06-07 08:56:59.084576');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (37, 'finished', '2025-06-01 08:47:09.084603', '2025-06-01 08:48:23.084603');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (38, 'finished', '2025-07-02 08:47:09.084636', '2025-07-02 08:52:36.084636');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (39, 'finished', '2025-07-12 08:47:09.084676', '2025-07-12 08:52:32.084676');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (40, 'finished', '2025-05-23 08:47:09.084717', '2025-05-23 08:51:26.084717');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (41, 'finished', '2025-06-03 08:47:09.084740', '2025-06-03 08:48:36.084740');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (42, 'finished', '2025-06-04 08:47:09.084766', '2025-06-04 08:48:27.084766');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (43, 'finished', '2025-05-31 08:47:09.084798', '2025-05-31 08:52:37.084798');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (44, 'finished', '2025-06-02 08:47:09.084830', '2025-06-02 08:57:02.084830');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (45, 'finished', '2025-06-05 08:47:09.084854', '2025-06-05 08:53:13.084854');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (46, 'finished', '2025-06-15 08:47:09.084888', '2025-06-15 08:55:20.084888');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (47, 'finished', '2025-06-22 08:47:09.084943', '2025-06-22 08:56:40.084943');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (48, 'finished', '2025-05-24 08:47:09.084977', '2025-05-24 08:51:54.084977');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (49, 'finished', '2025-06-07 08:47:09.085010', '2025-06-07 08:50:25.085010');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (50, 'finished', '2025-05-26 08:47:09.085047', '2025-05-26 08:55:36.085047');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (51, 'finished', '2025-05-18 08:47:09.085567', '2025-05-18 08:49:06.085567');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (52, 'finished', '2025-05-27 08:47:09.085630', '2025-05-27 08:51:24.085630');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (53, 'finished', '2025-06-04 08:47:09.085670', '2025-06-04 08:52:18.085670');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (54, 'finished', '2025-05-29 08:47:09.085689', '2025-05-29 08:49:05.085689');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (55, 'finished', '2025-07-07 08:47:09.085896', '2025-07-07 08:51:28.085896');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (56, 'finished', '2025-05-29 08:47:09.085932', '2025-05-29 08:48:09.085932');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (57, 'finished', '2025-06-14 08:47:09.085960', '2025-06-14 08:52:47.085960');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (58, 'finished', '2025-06-02 08:47:09.085987', '2025-06-02 08:48:53.085987');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (59, 'finished', '2025-06-05 08:47:09.086011', '2025-06-05 08:51:39.086011');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (60, 'finished', '2025-06-11 08:47:09.086035', '2025-06-11 08:53:42.086035');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (61, 'finished', '2025-06-04 08:47:09.086084', '2025-06-04 08:53:19.086084');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (62, 'finished', '2025-06-04 08:47:09.086110', '2025-06-04 08:52:35.086110');
            INSERT OR IGNORE INTO games (id, tournament_id, status, started_at, finished_at) VALUES (63, 1, 'completed', '2025-07-10 09:31:02.895139', '2025-07-10 09:39:02.895139');
            INSERT OR IGNORE INTO games (id, tournament_id, status, started_at, finished_at) VALUES (64, 1, 'completed', '2025-07-10 07:31:02.895139', '2025-07-10 07:34:02.895139');
            INSERT OR IGNORE INTO games (id, tournament_id, status, started_at, finished_at) VALUES (65, 1, 'completed', '2025-07-10 05:31:02.895139', '2025-07-10 05:34:02.895139');
            INSERT OR IGNORE INTO games (id, tournament_id, status, started_at, finished_at) VALUES (66, 2, 'completed', '2025-07-11 09:31:02.895139', '2025-07-11 09:38:02.895139');
            INSERT OR IGNORE INTO games (id, tournament_id, status, started_at, finished_at) VALUES (67, 2, 'completed', '2025-07-11 07:31:02.895139', '2025-07-11 07:40:02.895139');
            INSERT OR IGNORE INTO games (id, tournament_id, status, started_at, finished_at) VALUES (68, 2, 'completed', '2025-07-11 05:31:02.895139', '2025-07-11 05:37:02.895139');
            INSERT OR IGNORE INTO games (id, tournament_id, status, started_at, finished_at) VALUES (69, 3, 'completed', '2025-07-12 09:31:02.895139', '2025-07-12 09:36:02.895139');
            INSERT OR IGNORE INTO games (id, tournament_id, status, started_at, finished_at) VALUES (70, 3, 'completed', '2025-07-12 07:31:02.895139', '2025-07-12 07:36:02.895139');
            INSERT OR IGNORE INTO games (id, tournament_id, status, started_at, finished_at) VALUES (71, 3, 'completed', '2025-07-12 05:31:02.895139', '2025-07-12 05:34:02.895139');
            INSERT OR IGNORE INTO games (id, tournament_id, status, started_at, finished_at) VALUES (72, 4, 'completed', '2025-07-13 09:31:02.895139', '2025-07-13 09:38:02.895139');
            INSERT OR IGNORE INTO games (id, tournament_id, status, started_at, finished_at) VALUES (73, 4, 'completed', '2025-07-13 07:31:02.895139', '2025-07-13 07:39:02.895139');
            INSERT OR IGNORE INTO games (id, tournament_id, status, started_at, finished_at) VALUES (74, 4, 'completed', '2025-07-13 05:31:02.895139', '2025-07-13 05:39:02.895139');
            INSERT OR IGNORE INTO games (id, tournament_id, status, started_at, finished_at) VALUES (75, 5, 'completed', '2025-07-14 09:31:02.895139', '2025-07-14 09:40:02.895139');
            INSERT OR IGNORE INTO games (id, tournament_id, status, started_at, finished_at) VALUES (76, 5, 'completed', '2025-07-14 07:31:02.895139', '2025-07-14 07:40:02.895139');
            INSERT OR IGNORE INTO games (id, tournament_id, status, started_at, finished_at) VALUES (77, 5, 'completed', '2025-07-14 05:31:02.895139', '2025-07-14 05:39:02.895139');
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (78,'finished',datetime('now','-21 hours'),datetime('now','-20 hours'));
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (79,'finished',datetime('now','-20 hours'),datetime('now','-19 hours'));
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (80,'finished',datetime('now','-19 hours'),datetime('now','-18 hours'));
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (81,'finished',datetime('now','-18 hours'),datetime('now','-17 hours'));
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (82,'finished',datetime('now','-17 hours'),datetime('now','-16 hours'));
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (83,'finished',datetime('now','-16 hours'),datetime('now','-15 hours'));
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (84,'finished',datetime('now','-15 hours'),datetime('now','-14 hours'));
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (85,'finished',datetime('now','-14 hours'),datetime('now','-13 hours'));
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (86,'finished',datetime('now','-13 hours'),datetime('now','-12 hours'));
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (87,'finished',datetime('now','-12 hours'),datetime('now','-11 hours'));
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (88,'finished',datetime('now','-11 hours'),datetime('now','-10 hours'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (1, 1, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (2, 1, 6, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (3, 2, 4, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (4, 2, 5, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (5, 3, 6, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (6, 3, 4, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (7, 4, 4, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (8, 4, 7, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (9, 5, 5, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (10, 5, 1, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (11, 6, 1, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (12, 6, 3, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (13, 7, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (14, 7, 6, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (15, 8, 7, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (16, 8, 2, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (17, 9, 6, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (18, 9, 3, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (19, 10, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (20, 10, 1, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (21, 11, 1, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (22, 11, 4, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (23, 12, 3, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (24, 12, 6, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (25, 13, 6, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (26, 13, 2, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (27, 14, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (28, 14, 1, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (29, 15, 3, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (30, 15, 1, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (31, 16, 6, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (32, 16, 4, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (33, 17, 6, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (34, 17, 4, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (35, 18, 1, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (36, 18, 3, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (37, 19, 5, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (38, 19, 6, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (39, 20, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (40, 20, 4, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (41, 21, 4, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (42, 21, 2, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (43, 22, 3, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (44, 22, 6, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (45, 23, 5, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (46, 23, 7, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (47, 24, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (48, 24, 4, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (49, 25, 7, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (50, 25, 4, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (51, 26, 4, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (52, 26, 3, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (53, 27, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (54, 27, 1, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (55, 28, 1, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (56, 28, 7, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (57, 29, 6, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (58, 29, 4, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (59, 30, 5, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (60, 30, 3, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (61, 31, 4, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (62, 31, 3, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (63, 32, 5, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (64, 32, 3, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (65, 33, 4, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (66, 33, 5, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (67, 34, 4, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (68, 34, 1, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (69, 35, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (70, 35, 3, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (71, 36, 5, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (72, 36, 7, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (73, 37, 6, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (74, 37, 2, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (75, 38, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (76, 38, 3, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (77, 39, 5, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (78, 39, 4, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (79, 40, 1, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (80, 40, 6, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (81, 41, 7, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (82, 41, 5, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (83, 42, 1, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (84, 42, 4, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (85, 43, 3, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (86, 43, 4, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (87, 44, 6, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (88, 44, 5, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (89, 45, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (90, 45, 1, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (91, 46, 7, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (92, 46, 2, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (93, 47, 7, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (94, 47, 1, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (95, 48, 3, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (96, 48, 2, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (97, 49, 7, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (98, 49, 4, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (99, 50, 1, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (100, 50, 6, 0, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (101, 51, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (102, 51, NULL, 1, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (103, 52, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (104, 52, NULL, 1, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (105, 53, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (106, 53, NULL, 1, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (107, 54, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (108, 54, NULL, 1, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (109, 55, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (110, 55, NULL, 1, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (111, 56, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (112, 56, NULL, 1, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (113, 57, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (114, 57, NULL, 1, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (115, 58, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (116, 58, NULL, 1, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (117, 59, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (118, 59, NULL, 1, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (119, 60, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (120, 60, NULL, 1, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (121, 61, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (122, 61, NULL, 1, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (123, 62, 2, 0, 1, 'A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (124, 62, NULL, 1, 0, 'B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (125, 63, 3, 0, 1, 'Equipo A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (126, 63, 7, 0, 0, 'Equipo B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (127, 64, 5, 0, 1, 'Equipo A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (128, 64, 3, 0, 0, 'Equipo B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (129, 65, 2, 0, 1, 'Equipo A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (130, 65, 6, 0, 0, 'Equipo B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (131, 66, 2, 0, 1, 'Equipo A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (132, 66, 1, 0, 0, 'Equipo B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (133, 67, 4, 0, 1, 'Equipo A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (134, 67, 1, 0, 0, 'Equipo B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (135, 68, 2, 0, 1, 'Equipo A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (136, 68, 5, 0, 0, 'Equipo B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (137, 69, 2, 0, 1, 'Equipo A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (138, 69, 1, 0, 0, 'Equipo B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (139, 70, 2, 0, 1, 'Equipo A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (140, 70, 5, 0, 0, 'Equipo B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (141, 71, 3, 0, 1, 'Equipo A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (142, 71, 1, 0, 0, 'Equipo B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (143, 72, 4, 0, 1, 'Equipo A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (144, 72, 5, 0, 0, 'Equipo B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (145, 73, 5, 0, 1, 'Equipo A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (146, 73, 1, 0, 0, 'Equipo B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (147, 74, 2, 0, 1, 'Equipo A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (148, 74, 6, 0, 0, 'Equipo B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (149, 75, 5, 0, 1, 'Equipo A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (150, 75, 1, 0, 0, 'Equipo B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (151, 76, 5, 0, 1, 'Equipo A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (152, 76, 4, 0, 0, 'Equipo B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (153, 77, 2, 0, 1, 'Equipo A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (154, 77, 3, 0, 0, 'Equipo B');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (155,78,1,0,1,'Team_1');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (156,78,NULL,1,0,'BOT_78');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (157,79,1,0,0,'Team_1');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (158,79,NULL,1,1,'BOT_79');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (159,80,1,0,1,'Team_1');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (160,80,NULL,1,0,'BOT_80');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (161,81,2,0,1,'Team_2');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (162,81,NULL,1,0,'BOT_81');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (163,82,2,0,0,'Team_2');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (164,82,NULL,1,1,'BOT_82');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (165,83,2,0,1,'Team_2');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (166,83,NULL,1,0,'BOT_83');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (167,84,3,0,1,'Team_3');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (168,84,NULL,1,0,'BOT_84');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (169,85,3,0,0,'Team_3');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (170,85,NULL,1,1,'BOT_85');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (171,86,3,0,1,'Team_3');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (172,86,NULL,1,0,'BOT_86');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (173,87,4,0,1,'Team_4');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (174,87,NULL,1,0,'BOT_87');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (175,88,4,0,0,'Team_4');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (176,88,NULL,1,1,'BOT_88');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (1, 1, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (2, 1, 4, 'B', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (3, 2, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (4, 2, 1, 'B', 0);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (5, 3, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (6, 3, 3, 'B', 1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (7, 4, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (8, 4, 7, 'B', 4);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (9, 5, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (10, 5, 3, 'B', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (11, 6, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (12, 6, 5, 'B', 1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (13, 7, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (14, 7, 6, 'B', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (15, 8, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (16, 8, 6, 'B', 4);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (17, 9, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (18, 9, 6, 'B', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (19, 10, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (20, 10, 4, 'B', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (21, 11, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (22, 11, 3, 'B', 1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (23, 12, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (24, 12, 7, 'B', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (25, 13, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (26, 13, 5, 'B', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (27, 14, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (28, 14, 5, 'B', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (29, 15, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (30, 15, 5, 'B', 0);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (31, 16, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (32, 16, 7, 'B', 1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (33, 17, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (34, 17, 1, 'B', 0);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (35, 18, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (36, 18, 4, 'B', 4);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (37, 19, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (38, 19, 7, 'B', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (39, 20, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (40, 20, 1, 'B', 4);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (41, 21, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (42, 21, 1, 'B', 4);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (43, 22, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (44, 22, 3, 'B', 0);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (45, 23, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (46, 23, 4, 'B', 1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (47, 24, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (48, 24, 3, 'B', 1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (49, 25, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (50, 25, 6, 'B', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (51, 26, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (52, 26, 5, 'B', 1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (53, 27, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (54, 27, 4, 'B', 0);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (55, 28, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (56, 28, 7, 'B', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (57, 29, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (58, 29, 6, 'B', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (59, 30, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (60, 30, 3, 'B', 0);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (61, 31, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (62, 31, 6, 'B', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (63, 32, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (64, 32, 3, 'B', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (65, 33, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (66, 33, 7, 'B', 4);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (67, 34, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (68, 34, 1, 'B', 1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (69, 35, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (70, 35, 4, 'B', 1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (71, 36, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (72, 36, 3, 'B', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (73, 37, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (74, 37, 5, 'B', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (75, 38, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (76, 38, 5, 'B', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (77, 39, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (78, 39, 6, 'B', 1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (79, 40, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (80, 40, 6, 'B', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (81, 41, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (82, 41, 3, 'B', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (83, 42, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (84, 42, 7, 'B', 0);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (85, 43, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (86, 43, 6, 'B', 4);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (87, 44, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (88, 44, 7, 'B', 0);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (89, 45, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (90, 45, 4, 'B', 4);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (91, 46, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (92, 46, 6, 'B', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (93, 47, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (94, 47, 4, 'B', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (95, 48, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (96, 48, 4, 'B', 0);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (97, 49, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (98, 49, 6, 'B', 0);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (99, 50, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (100, 50, 3, 'B', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (101, 51, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (102, 51, 6, 'B', 1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (103, 52, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (104, 52, 7, 'B', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (105, 53, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (106, 53, 4, 'B', 1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (107, 54, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (108, 54, 5, 'B', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (109, 55, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (110, 55, 4, 'B', 1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (111, 56, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (112, 56, 3, 'B', 0);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (113, 57, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (114, 57, 6, 'B', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (115, 58, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (116, 58, 7, 'B', 4);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (117, 59, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (118, 59, 4, 'B', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (119, 60, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (120, 60, 3, 'B', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (121, 61, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (122, 61, 3, 'B', 0);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (123, 62, 2, 'A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (124, 62, 3, 'B', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (125, 63, 3, 'Equipo A', 5, '2025-07-14 10:00:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (126, 63, 7, 'Equipo B', 4, '2025-07-14 10:00:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (127, 64, 5, 'Equipo A', 5, '2025-07-14 10:01:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (128, 64, 3, 'Equipo B', 3, '2025-07-14 10:01:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (129, 65, 2, 'Equipo A', 5, '2025-07-14 10:02:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (130, 65, 6, 'Equipo B', 4, '2025-07-14 10:02:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (131, 66, 2, 'Equipo A', 5, '2025-07-14 10:03:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (132, 66, 1, 'Equipo B', 0, '2025-07-14 10:03:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (133, 67, 4, 'Equipo A', 5, '2025-07-14 10:04:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (134, 67, 1, 'Equipo B', 1, '2025-07-14 10:04:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (135, 68, 2, 'Equipo A', 5, '2025-07-14 10:05:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (136, 68, 5, 'Equipo B', 2, '2025-07-14 10:05:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (137, 69, 2, 'Equipo A', 5, '2025-07-14 10:06:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (138, 69, 1, 'Equipo B', 3, '2025-07-14 10:06:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (139, 70, 2, 'Equipo A', 5, '2025-07-14 10:07:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (140, 70, 5, 'Equipo B', 1, '2025-07-14 10:07:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (141, 71, 3, 'Equipo A', 5, '2025-07-14 10:08:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (142, 71, 1, 'Equipo B', 4, '2025-07-14 10:08:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (143, 72, 4, 'Equipo A', 5, '2025-07-14 10:09:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (144, 72, 5, 'Equipo B', 1, '2025-07-14 10:09:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (145, 73, 5, 'Equipo A', 5, '2025-07-14 10:10:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (146, 73, 1, 'Equipo B', 1, '2025-07-14 10:10:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (147, 74, 2, 'Equipo A', 5, '2025-07-14 10:11:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (148, 74, 6, 'Equipo B', 4, '2025-07-14 10:11:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (149, 75, 5, 'Equipo A', 5, '2025-07-14 10:12:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (150, 75, 1, 'Equipo B', 2, '2025-07-14 10:12:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (151, 76, 5, 'Equipo A', 5, '2025-07-14 10:13:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (152, 76, 4, 'Equipo B', 4, '2025-07-14 10:13:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (153, 77, 2, 'Equipo A', 5, '2025-07-14 10:14:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number, timestamp) VALUES (154, 77, 3, 'Equipo B', 0, '2025-07-14 10:14:00');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (155,78,1,'Team_1',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (156,78,NULL,'BOT_78',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (157,79,1,'Team_1',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (158,79,NULL,'BOT_79',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (159,80,1,'Team_1',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (160,80,NULL,'BOT_80',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (161,81,2,'Team_2',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (162,81,NULL,'BOT_81',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (163,82,2,'Team_2',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (164,82,NULL,'BOT_82',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (165,83,2,'Team_2',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (166,83,NULL,'BOT_83',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (167,84,3,'Team_3',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (168,84,NULL,'BOT_84',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (169,85,3,'Team_3',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (170,85,NULL,'BOT_85',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (171,86,3,'Team_3',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (172,86,NULL,'BOT_86',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (173,87,4,'Team_4',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (174,87,NULL,'BOT_87',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (175,88,4,'Team_4',1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (176,88,NULL,'BOT_88',1);
        `);
        console.log('Base de datos inicializada y tablas creadas (si no existían).');
    } finally {
        await db.close();
    }
}
[1;30m----------------------------------------[0m

[1;34m=== ./auth-service/src/server.ts ===[0m
import Fastify from 'fastify';
import fs from 'fs';
import path from 'path';
import jwt from 'jsonwebtoken';
import bcrypt from 'bcryptjs';
import fetch from 'node-fetch';
import dotenv from 'dotenv';
import { openDb, initializeDb } from './database';
import redis from './redis-client';
import multipart from '@fastify/multipart';
import { pipeline } from 'stream';
import util from 'util';
import { FastifyRequest } from 'fastify';
import { MultipartFile } from '@fastify/multipart';

dotenv.config();
const JWT_SECRET = process.env.JWT_SECRET || 'default_secret';

const fastify = Fastify({ logger: true });

fastify.register(multipart);

// Habilitar CORS

fastify.register(require('@fastify/cors'), {
  origin: true,
  credentials: true,
  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],
  allowedHeaders: ['Content-Type', 'Authorization']
});

// Asegurar que las carpetas existen
const dataPath = path.join(__dirname, '../data');
const avatarPath = path.join(dataPath, 'avatars');
if (!fs.existsSync(dataPath)) fs.mkdirSync(dataPath, { recursive: true });
if (!fs.existsSync(avatarPath)) fs.mkdirSync(avatarPath, { recursive: true });

// Rutas estáticas
fastify.register(require('@fastify/static'), {
  root: dataPath,
  prefix: '/downloads/'
});

fastify.register(require('@fastify/static'), {
  root: avatarPath,
  prefix: '/avatars/',
  decorateReply: false // evita conflicto
});

// Middleware para verificar JWT
async function verifyToken(request: any, reply: any) {
  const token = request.headers.authorization?.replace('Bearer ', '');

  if (!token) return reply.code(401).send({ message: 'Token requerido' });

  try {
    const decoded = jwt.verify(token, JWT_SECRET) as any;
    request.user = decoded;
  } catch (err) {
    return reply.code(401).send({ message: 'Token inválido' });
  }
}

fastify.post('/auth/register', async (request, reply) => {
  const { username, email, password } = request.body as any;
  
  if (!username || !email || !password) {
    return reply.code(400).send({ message: 'Faltan campos requeridos' });
  }

  try {
    const db = await openDb();
    
    // Verificar si el usuario ya existe
    const existingUser = await db.get('SELECT * FROM users WHERE email = ? OR username = ?', [email, username]);
    if (existingUser) {
      await db.close();
      return reply.code(409).send({ message: 'Usuario o email ya existe' });
    }

    const hash = await bcrypt.hash(password, 10);
    
    // Insertar directamente en la base de datos
    const result = await db.run('INSERT INTO users (username, email, password_hash) VALUES (?, ?, ?)', [username, email, hash]);
    
    await db.close();
    
    return reply.code(201).send({ message: 'Usuario registrado exitosamente' });
  } catch (err: any) {
    console.error('Error en registro:', err);
    if (err.code === 'SQLITE_CONSTRAINT') {
      return reply.code(409).send({ message: 'Usuario o email ya existe' });
    }
    return reply.code(500).send({ message: 'Error interno del servidor' });
  }
});

fastify.post('/auth/login', async (request, reply) => {
  const { email, password } = request.body as any;
  
  if (!email || !password) {
    return reply.code(400).send({ message: 'Email y contraseña son requeridos' });
  }

  try {
    const db = await openDb();
    const user = await db.get('SELECT * FROM users WHERE email = ?', [email]);
    
    if (!user || !(await bcrypt.compare(password, user.password_hash))) {
      await db.close();
      return reply.code(401).send({ message: 'Credenciales inválidas' });
    }

    const token = jwt.sign({
      user_id: user.id,
      username: user.username,
      email: user.email,
      exp: Math.floor(Date.now() / 1000) + (60 * 60) // 1 hora
    }, JWT_SECRET);
    
    // Obtener avatar_url
    const profile = await db.get('SELECT avatar_url FROM user_profiles WHERE user_id = ?', [user.id]);

    await db.close();

    return reply.send({ 
      token,
      user: {
        id: user.id,
        username: user.username,
        email: user.email,
        avatar_url: profile?.avatar_url || null
      }
    });
  } catch (err) {
    console.error('Error en login:', err);
    return reply.code(500).send({ message: 'Error interno del servidor' });
  }
});
 
// Endpoint para obtener estadísticas del usuario y generar archivo de historial

fastify.get('/auth/profile/stats', { preHandler: verifyToken }, async (request, reply) => {
  try {
    const db = await openDb();
    const userId = (request as any).user.user_id;

    const games = await db.all(`
      SELECT 
        g.id AS game_id,
        g.finished_at,
        g.status,
        p.user_id AS player_id,
        p.team_name AS player_team,
        u.username AS player_name
      FROM games g
      JOIN participants p ON p.game_id = g.id
      JOIN users u ON u.id = p.user_id
      WHERE g.status = 'completed'
    `);

    const scores = await db.all(`
      SELECT 
        s.game_id,
        s.team_name,
        s.point_number
      FROM scores s
    `);

    // Mapear los scores por game_id y team
    const scoreMap = new Map<string, number>();
    for (const s of scores) {
      scoreMap.set(`${s.game_id}_${s.team_name}`, s.point_number);
    }

    // Agrupar partidas por usuario
    const userGames = new Map<number, {
      matches: any[],
      pointsFor: number,
      pointsAgainst: number
    }>();

    for (const g of games) {
      // Buscar rival
      const rivals = games.filter(m => m.game_id === g.game_id && m.player_id !== g.player_id);
      const rival = rivals[0];

      const userScore = scoreMap.get(`${g.game_id}_${g.player_team}`) ?? 0;
      const rivalScore = rival ? scoreMap.get(`${rival.game_id}_${rival.player_team}`) ?? 0 : 0;

      if (!userGames.has(g.player_id)) {
        userGames.set(g.player_id, {
          matches: [],
          pointsFor: 0,
          pointsAgainst: 0
        });
      }

      const result = userScore > rivalScore ? 'win' : 'loss';

      userGames.get(g.player_id)!.pointsFor += userScore;
      userGames.get(g.player_id)!.pointsAgainst += rivalScore;

      userGames.get(g.player_id)!.matches.push({
        id: g.game_id,
        result,
        opponent: rival ? rival.player_name : 'Bot AI',
        score: `${userScore}-${rivalScore}`,
        date: g.finished_at
      });
    }

    // Calcular el ranking
    const eloList = Array.from(userGames.entries()).map(([uid, data]) => ({
      user_id: uid,
      elo: 1000 + data.pointsFor - data.pointsAgainst
    }));

    // Incluir usuarios sin partidas
    const allUsers = await db.all(`SELECT id FROM users`);
    for (const u of allUsers) {
      if (!userGames.has(u.id)) {
        eloList.push({ user_id: u.id, elo: 1000 });
        userGames.set(u.id, { matches: [], pointsFor: 0, pointsAgainst: 0 });
      }
    }

    eloList.sort((a, b) => b.elo - a.elo);

    const ranking = eloList.findIndex(u => u.user_id === userId) + 1;
    const userData = userGames.get(userId)!;

    const wins = userData.matches.filter(m => m.result === 'win').length;
    const losses = userData.matches.filter(m => m.result === 'loss').length;
    const totalGames = wins + losses;
    const winRate = totalGames > 0 ? Math.round((wins / totalGames) * 100) : 0;
    const elo = 1000 + userData.pointsFor - userData.pointsAgainst;

    const matchHistory = userData.matches
      .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());

    // Escribir historial completo a archivo
    const filePath = path.resolve('/app/data/historial_partidas.txt');
    const matchHistoryText = matchHistory.map(entry =>
      `Partida ${entry.id} | Resultado: ${entry.result} | Oponente: ${entry.opponent} | Marcador: ${entry.score} | Fecha: ${entry.date}`
    );
    fs.writeFileSync(filePath, matchHistoryText.join('\n'));

    await db.close();

    return reply.send({
      totalGames,
      wins,
      losses,
      winRate,
      elo,
      ranking,
      matchHistory: matchHistory.slice(0, 5) // solo las 5 más recientes
    });
  } catch (err) {
    console.error('Error obteniendo estadísticas:', err);
    return reply.code(500).send({ message: 'Error interno del servidor' });
  }
});

fastify.get('/auth/profile/download-historial', { preHandler: verifyToken }, async (request, reply) => {
  const filePath = path.resolve('/app/data/historial_partidas.txt');

  if (!fs.existsSync(filePath)) {
    return reply.code(404).send({ message: 'Historial no disponible' });
  }

  return reply
    .header('Content-Type', 'text/plain')
    .header('Content-Disposition', 'attachment; filename="historial_partidas.txt"')
    .send(fs.createReadStream(filePath));
});

// Endpoint para subir el avatar

const pump = util.promisify(pipeline);

fastify.post('/auth/profile/avatar', { preHandler: verifyToken }, async (request, reply) => {
  const userId = (request as any).user.user_id;

  const mpRequest = request as FastifyRequest & {
    file: () => Promise<MultipartFile>;
  };

  const data = await mpRequest.file();

  if (!data) {
    return reply.code(400).send({ message: 'No se ha enviado ningún archivo' });
  }

  const allowedTypes = ['image/jpeg', 'image/png', 'image/webp'];
  if (!allowedTypes.includes(data.mimetype)) {
    return reply.code(400).send({ message: 'Tipo de archivo no permitido' });
  }

  if (data.file.truncated) {
    return reply.code(400).send({ message: 'Archivo demasiado grande (máx 2MB)' });
  }

  const ext = data.filename.split('.').pop();
  const saveDir = '/app/data/avatars';
  const filename = `avatar_${userId}.${ext}`;
  const filepath = path.join(saveDir, filename);

  // Asegura que la carpeta exista
  if (!fs.existsSync(saveDir)) {
    fs.mkdirSync(saveDir, { recursive: true });
  }

  try {
    await pump(data.file, fs.createWriteStream(filepath));

    // Guardar ruta del avatar en base de datos
    const db = await openDb();
    await db.run(`
      INSERT INTO user_profiles (user_id, avatar_url)
      VALUES (?, ?)
      ON CONFLICT(user_id) DO UPDATE SET avatar_url = excluded.avatar_url
    `, [userId, `/avatars/${filename}`]);

    await db.close();

    return reply.send({ message: '✅ Avatar subido correctamente', avatar_url: `/avatars/${filename}` });
  } catch (err) {
    console.error('Error guardando avatar:', err);
    return reply.code(500).send({ message: 'Error subiendo avatar' });
  }
});

// Endpoint para obtener configuraciones del usuario


// Endpoint para actualizar configuraciones del usuario


// Endpoint para actualizar perfil del usuario


// Endpoint para eliminar cuenta
fastify.delete('/auth/profile', { preHandler: verifyToken }, async (request, reply) => {
  try {
    const db = await openDb();
    const userId = (request as any).user.user_id;
    const { password } = request.body as any;
    
    // Verificar contraseña
    const user = await db.get('SELECT * FROM users WHERE id = ?', [userId]);
    if (!user || !(await bcrypt.compare(password, user.password_hash))) {
      await db.close();
      return reply.code(401).send({ message: 'Contraseña incorrecta' });
    }
    
    // Eliminar configuraciones del usuario
    await db.run('DELETE FROM user_settings WHERE user_id = ?', [userId]);
    
    // Eliminar mensajes del usuario
    await db.run('DELETE FROM messages WHERE user_id = ?', [userId]);
    
    // Eliminar usuario
    await db.run('DELETE FROM users WHERE id = ?', [userId]);
    
    await db.close();
    
    return reply.send({ message: 'Cuenta eliminada exitosamente' });
    
  } catch (err) {
    console.error('Error eliminando cuenta:', err);
    return reply.code(500).send({ message: 'Error interno del servidor' });
  }
});

type GooglePayload = {
  email: string;
  name: string;
  picture?: string;
  [key: string]: any;
};

fastify.post('/auth/google', async (request, reply) => {
  const { token } = request.body as any;
  
  if (!token) {
    return reply.code(400).send({ message: 'Falta token de Google' });
  }

  try {
    const res = await fetch(`https://oauth2.googleapis.com/tokeninfo?id_token=${token}`);
    if (!res.ok) {
      return reply.code(401).send({ message: 'Token de Google inválido' });
    }
    
    const payload = (await res.json()) as GooglePayload;
    
    const db = await openDb();
    let user = await db.get('SELECT * FROM users WHERE email = ?', [payload.email]);
    
    if (!user) {
      // Crear nuevo usuario con Google
      const result = await db.run(
        'INSERT INTO users (username, email, password_hash) VALUES (?, ?, ?)',
        [payload.name, payload.email, ''] // Sin contraseña para usuarios de Google
      );
      
      user = await db.get('SELECT * FROM users WHERE email = ?', [payload.email]);
    }

    const jwtToken = jwt.sign({
      user_id: user.id,
      username: user.username,
      email: user.email,
      exp: Math.floor(Date.now() / 1000) + (60 * 60) // 1 hora
    }, JWT_SECRET);

    await db.close();
    
    return reply.send({ 
      token: jwtToken,
      user: {
        id: user.id,
        username: user.username,
        email: user.email
      }
    });
  } catch (err) {
    console.error('Error con Google Sign-In:', err);
    return reply.code(500).send({ message: 'Error con Google Sign-In' });
  }
});

// Inicializar base de datos antes de arrancar el servidor
initializeDb().then(() => {
  fastify.listen({ port: 8000, host: '0.0.0.0' }, err => {
    if (err) {
      fastify.log.error(err);
      process.exit(1);
    }
  });
});

[1;30m----------------------------------------[0m

[1;34m=== ./auth-service/src/redis-client.ts ===[0m
// auth-service/src/redis-client.ts

import { createClient } from 'redis';

import dotenv from 'dotenv';
dotenv.config();

const redis = createClient({
  url: process.env.REDIS_URL || `redis://:${process.env.REDIS_PASSWORD || ''}@${process.env.REDIS_HOST || 'redis'}:${process.env.REDIS_PORT || '6379'}`
});

redis.on('error', (err) => {
  console.error('Redis client error:', err);
});

(async () => {
  try {
    await redis.connect();
    console.log('Redis client connected');
  } catch (err) {
    console.error('Redis connection failed:', err);
  }
})();

export default redis;
[1;30m----------------------------------------[0m

[1;31m=== ./auth-service/package.json (archivo binario, omitido) ===[0m

[1;34m=== ./auth-service/Dockerfile ===[0m
FROM node:20-alpine
WORKDIR /app
RUN mkdir -p /app/data && chmod 777 /app/data
COPY package*.json ./
RUN npm install
RUN npm install @fastify/multipart && npm install --save-dev @types/node
COPY . .
RUN npm run build
EXPOSE 8000
CMD ["npm", "start"]
[1;30m----------------------------------------[0m

[1;34m=== ./print_tree.sh ===[0m
#!/bin/bash

# Función para detectar si un archivo es de texto
is_text_file() {
  file -b --mime-encoding "$1" | grep -q -v 'binary'
}

# Mostrar estructura de directorios (excluyendo .git, node_modules, styles y pages)
echo -e "\033[1;32m=== ESTRUCTURA DE DIRECTORIOS ===\033[0m"
tree -a -I '.git|node_modules' --dirsfirst

# Mostrar contenido de archivos de texto, ignorando .git, node_modules, styles y pages
echo -e "\n\033[1;32m=== CONTENIDO DE ARCHIVOS DE TEXTO ===\033[0m"
find . -type f \
  ! -path '*/.git/*' \
  ! -path '*/print-tree.sh' \
  ! -path '*/README.md' \
  | while read -r file; do
    if is_text_file "$file"; then
      echo -e "\n\033[1;34m=== $file ===\033[0m"
      cat "$file"
      echo -e "\033[1;30m----------------------------------------\033[0m"
    else
      echo -e "\n\033[1;31m=== $file (archivo binario, omitido) ===\033[0m"
    fi
done



  # ! -path '*/.api-gateway/src/*' \
  # ! -path '*/.api-gateway/package.json' \
  # ! -path '*/.api-gateway/tsconfig.json' \
  # ! -path '*/.chat-service/src/*' \
  # ! -path '*/.chat-service/package.json' \
  # ! -path '*/.chat-service/tsconfig.json' \
  # ! -path '*/frontend/src/*' \
  # ! -path '*/frontend/package.json' \
  # ! -path '*/frontend/tailwind.config.js' \
  # ! -path '*/frontend/tsconfig.json' \
  # ! -path '*/frontend/webpack.config.js' \
  # ! -path '*/game-service/tsconfig.json' \
  # ! -path '*/game-service/package.json' \
  # ! -path '*/game-service/src/*' \[1;30m----------------------------------------[0m

[1;34m=== ./test-game.sh ===[0m
#!/bin/bash

echo "🧪 Probando servicios del juego..."

# Verificar que el game-service esté funcionando
echo "1. Verificando estado del game-service..."
curl -s http://localhost:8002/health | jq . || echo "❌ Game-service no responde"

# Crear una partida de prueba
echo "2. Creando partida de prueba..."
GAME_ID=$(curl -s -X POST http://localhost:8002/api/games \
  -H "Content-Type: application/json" \
  -d '{"nombre": "Test Game", "gameMode": "pve", "maxPlayers": 2}' | jq -r '.id')

if [ "$GAME_ID" != "null" ] && [ "$GAME_ID" != "" ]; then
  echo "✅ Partida creada con ID: $GAME_ID"
  
  # Verificar estado de la partida
  echo "3. Verificando estado de la partida..."
  curl -s http://localhost:8002/api/games/$GAME_ID | jq .
  
  # Intentar iniciar la partida
  echo "4. Intentando iniciar la partida..."
  curl -s -X POST http://localhost:8002/api/games/$GAME_ID/start \
    -H "Content-Type: application/json" \
    -d '{}' | jq .
  
  echo "5. Estado final de la partida:"
  curl -s http://localhost:8002/api/games/$GAME_ID | jq .
  
else
  echo "❌ Error creando partida"
fi

echo "🏁 Prueba completada"
[1;30m----------------------------------------[0m

[1;34m=== ./code.txt ===[0m
[1;30m----------------------------------------[0m

[1;34m=== ./nginx-proxy.conf ===[0m
# HTTP Server - Redirect to HTTPS
server {
    listen 80;
    server_name localhost;
    
    # Redirect all HTTP traffic to HTTPS
    return 301 https://$server_name$request_uri;
}

# HTTPS Server
server {
    listen 443 ssl;
    server_name localhost;
    
    # SSL Configuration
    ssl_certificate /etc/ssl/certs/localhost.crt;
    ssl_certificate_key /etc/ssl/private/localhost.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Redirect to WAF (Web Application Firewall) 
    location / {
        proxy_pass http://WAF:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }
    
    # Direct access to API Gateway for API calls
    location /api/ {
        proxy_pass http://api-gateway:8000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }
    
    # Admin interfaces
    location /vault/ {
        proxy_pass http://hashicorp_vault:8200/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }
    
    location /redis/ {
        proxy_pass http://redis_commander:8081/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }
}
[1;30m----------------------------------------[0m

[1;34m=== ./nginx-waf/proxy_backend.conf ===[0m
proxy_set_header Host $host;
proxy_set_header Proxy "";
proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection $connection_upgrade;
proxy_set_header X-REAL-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Port $server_port;
proxy_set_header X-Forwarded-Proto $scheme;

proxy_http_version 1.1;
proxy_buffering off;
proxy_connect_timeout 60s;
proxy_read_timeout 36000s;
proxy_redirect off;

proxy_pass_header Authorization;
proxy_pass http://frontend:8080;

set_real_ip_from 127.0.0.1;

real_ip_header X-REAL-IP;
real_ip_recursive on;
[1;30m----------------------------------------[0m

[1;34m=== ./nginx-waf/modsecurity.conf ===[0m
Include /usr/local/modsecurity-crs/modsecurity_crs_10_setup.conf
Include /usr/local/modsecurity-crs/rules/*.conf

SecRuleEngine On
SecRequestBodyAccess On
SecResponseBodyAccess On
SecDebugLog /var/log/modsec_debug.log
SecAuditLog /var/log/modsec_audit.log
SecAuditLogParts ABIFHZ
SecAuditLogRelevantStatus "^(?:5|4(?![04]))"
[1;30m----------------------------------------[0m

[1;34m=== ./nginx-waf/nginx.conf ===[0m
server {
    listen 80; # Nginx dentro del contenedor WAF seguirá escuchando en 80
    server_name localhost;

    modsecurity on;
    modsecurity_rules_file /etc/nginx/modsecurity/modsecurity.conf;

    location / {
        proxy_pass http://frontend:8080; # Apunta al puerto interno del frontend
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/ {
        proxy_pass http://api-gateway:8000/; # Apunta al puerto interno del API Gateway
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
[1;30m----------------------------------------[0m

[1;34m=== ./frontend/tailwind.config.js ===[0m
/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./index.html",
    "./src/**/*.{js,ts,jsx,tsx}",
  ],
  theme: {
    extend: {},
  },
  plugins: [],
}
[1;30m----------------------------------------[0m

[1;34m=== ./frontend/tsconfig.json ===[0m
{
  "compilerOptions": {
    "target": "es2021",
    "module": "esnext",
    "outDir": "./dist",
    "strict": true,
    "esModuleInterop": true,
    "skipLibCheck": true,
    "forceConsistentCasingInFileNames": true,
    "moduleResolution": "node",
    "lib": ["dom", "dom.iterable", "esnext"],
    "typeRoots": ["./src/types", "./node_modules/@types"],
    "types": ["google.accounts"]
  },
  "include": ["src/**/*.ts"],
  "exclude": ["node_modules"]
}
[1;30m----------------------------------------[0m

[1;34m=== ./frontend/src/safariPolyfills.ts ===[0m
// src/safariPolyfills.ts

// Safari specific polyfills and fixes
console.log('Safari polyfills loaded');
[1;30m----------------------------------------[0m

[1;34m=== ./frontend/src/auth.ts ===[0m
export interface User {
  id: number;
  username: string;
  email: string;
}

export interface UserSettings {
  language: string;
  notifications: string;
  sound_effects: string;
  game_difficulty: string;
}

// Obtiene el JWT del localStorage
function getToken(): string | null {
  return localStorage.getItem('jwt');
}

// Decodifica el JWT manualmente (sin librerías)
function parseJwt(token: string): any {
  try {
    const base64Url = token.split('.')[1];
    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
    const jsonPayload = decodeURIComponent(
      atob(base64)
        .split('')
        .map(c => `%${('00' + c.charCodeAt(0).toString(16)).slice(-2)}`)
        .join('')
    );
    return JSON.parse(jsonPayload);
  } catch (err) {
    console.error(':x: Error al parsear JWT:', err);
    return null;
  }
}

// Función para obtener configuraciones del usuario
async function getUserSettings(): Promise<UserSettings | null> {
  const token = getToken();
  if (!token) return null;

  try {
    const response = await fetch('/api/auth/settings', {
      method: 'GET',
      headers: {
        'Authorization': `Bearer ${token}`,
        'Content-Type': 'application/json'
      }
    });

    if (!response.ok) {
      console.error('Error al obtener configuraciones:', response.status);
      return null;
    }

    return await response.json();
  } catch (error) {
    console.error('Error en la petición de configuraciones:', error);
    return null;
  }
}

// Función para aplicar configuraciones del usuario
async function applyUserSettings(): Promise<void> {
  const settings = await getUserSettings();
  if (!settings) return;

  // Aplicar idioma
  if (settings.language) {
    localStorage.setItem('language', settings.language);
    // Disparar evento para actualizar el idioma en toda la app
    window.dispatchEvent(new CustomEvent('languageChanged', { detail: settings.language }));
  }

  // Guardar configuraciones
  localStorage.setItem('notifications', settings.notifications);
  localStorage.setItem('sound_effects', settings.sound_effects);
  localStorage.setItem('game_difficulty', settings.game_difficulty);
}

// Función para obtener configuración guardada
export function getSetting(key: string): string | null {
  return localStorage.getItem(key);
}

// Función para guardar configuración
export function setSetting(key: string, value: string): void {
  localStorage.setItem(key, value);
}

export function isAuthenticated(): boolean {
  const token = getToken();
  if (!token) return false;
  
  const payload = parseJwt(token);
  const now = Math.floor(Date.now() / 1000);
  return payload?.exp && payload.exp > now;
}

export function getCurrentUser(): User | null {
  const token = getToken();
  if (!token) return null;
  
  const payload = parseJwt(token);
  if (!payload?.user_id) return null;
  
  return {
    id: payload.user_id,
    username: payload.username || 'Usuario',
    email: payload.email || 'desconocido@example.com'
  };
}

// Función para hacer login y aplicar configuraciones
export async function loginUser(token: string): Promise<void> {
  localStorage.setItem('jwt', token);
  console.log(':candado: Sesión iniciada');
  
  // Aplicar configuraciones del usuario
  await applyUserSettings();
}

export function logout(): void {
  localStorage.removeItem('jwt');
  
  // Limpiar configuraciones
  localStorage.removeItem('language');
  localStorage.removeItem('notifications');
  localStorage.removeItem('sound_effects');
  localStorage.removeItem('game_difficulty');
  
  console.log(':candado: Sesión cerrada');
  window.location.href = '/login';
}
[1;30m----------------------------------------[0m

[1;34m=== ./frontend/src/types.d.ts ===[0m
// src/types.d.ts
declare global {
  interface Window {
    google: {
      accounts: {
        id: {
          initialize: (config: { client_id: string }) => void;
          prompt: () => void;
          renderButton: (parent: HTMLElement, options: object) => void;
        };
      };
    };
  }
}

export {};[1;30m----------------------------------------[0m

[1;34m=== ./frontend/src/components/navbar.ts ===[0m
// src/components/navbar.ts

import { navigateTo } from '../router';
import { getTranslation, setLanguage, getCurrentLanguage } from '../i18n';
import { logout } from '../auth';

/**
 * Renders the navigation bar and attaches its event listeners.
 * This function handles both desktop and mobile views,
 * including active link highlighting and language selection.
 * @param currentPath The current active path to highlight the correct link.
 */
export function renderNavbar(currentPath: string): void {
    const navbarHtml = `
        <header class="w-full p-6 bg-[#000814] border-b border-[#003566] shadow-xl flex justify-between items-center fixed top-0 z-20 transition-all duration-300 ease-in-out">
            <h1 class="text-2xl sm:text-3xl font-display font-extrabold text-[#ffc300] drop-shadow-md tracking-tight">PONG</h1>

            <nav class="hidden md:flex items-center space-x-8">
                <ul class="flex space-x-8">
                    <li>
                        <a class="${currentPath === '/home' || currentPath === '/' ? 'text-[#ffc300] font-bold text-lg transition-colors duration-200 border-b-2 border-[#ffc300] pb-1 hover:text-[#ffd60a]' : 'text-gray-200 hover:text-[#ffc300] font-medium text-lg transition-colors duration-200'}" href="/home">${getTranslation('home', 'home')}</a>
                    </li>
                    <li>
                        <a href="/profile" class="${currentPath === '/profile' ? 'text-[#ffc300] font-bold text-lg transition-colors duration-200 border-b-2 border-[#ffc300] pb-1 hover:text-[#ffd60a]' : 'text-gray-200 hover:text-[#ffc300] font-medium text-lg transition-colors duration-200'}">${getTranslation('home', 'profile')}</a>
                    </li>
                    <li>
                        <a href="/play" class="${currentPath === '/play' ? 'text-[#ffc300] font-bold text-lg transition-colors duration-200 border-b-2 border-[#ffc300] pb-1 hover:text-[#ffd60a]' : 'text-gray-200 hover:text-[#ffc300] font-medium text-lg transition-colors duration-200'}">${getTranslation('home', 'play')}</a>
                    </li>
                    <li>
                        <a href="/ranking" class="${currentPath === '/ranking' ? 'text-[#ffc300] font-bold text-lg transition-colors duration-200 border-b-2 border-[#ffc300] pb-1 hover:text-[#ffd60a]' : 'text-gray-200 hover:text-[#ffc300] font-medium text-lg transition-colors duration-200'}">${getTranslation('home', 'ranking')}</a>
                    </li>
                    <li>
                        <a href="/settings" class="${currentPath === '/settings' ? 'text-[#ffc300] font-bold text-lg transition-colors duration-200 border-b-2 border-[#ffc300] pb-1 hover:text-[#ffd60a]' : 'text-gray-200 hover:text-[#ffc300] font-medium text-lg transition-colors duration-200'}">${getTranslation('home', 'settings')}</a>
                    </li>
                    <li>
                        <button id="logout-btn-desktop" class="text-gray-200 hover:text-[#ffc300] font-medium text-lg transition-colors duration-200 bg-transparent border-none cursor-pointer">${getTranslation('home', 'logout')}</button>
                    </li>
                </ul>
                <div class="relative z-50">
                    <button
                        type="button"
                        id="language-dropdown-button-desktop"
                        class="inline-flex justify-center items-center gap-x-1.5 rounded-full bg-[#001d3d] px-4 py-2 text-sm font-semibold text-gray-100 shadow-sm ring-1 ring-inset ring-[#003566] hover:bg-[#003566] transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-[#ffc300]"
                        aria-expanded="false"
                        aria-haspopup="true"
                    >
                        <span id="current-language-name-desktop">${getTranslation('common', 'language')}</span>
                        <svg class="-mr-1 h-5 w-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                            <path fill-rule="evenodd" d="M5.23 7.21a.75.75 0 011.06.02L10 10.94l3.71-3.71a.75.75 0 111.06 1.06l-4.25 4.25a.75.75 0 01-1.06 0L5.23 8.29a.75.75 0 01.02-1.06z" clip-rule="evenodd" />
                        </svg>
                    </button>

                    <div
                        id="language-dropdown-menu-desktop"
                        class="absolute right-0 z-10 mt-2 w-48 origin-top-right rounded-md bg-[#001d3d] shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none hidden"
                        role="menu"
                        aria-orientation="vertical"
                        aria-labelledby="language-dropdown-button-desktop"
                        tabindex="-1"
                    >
                        <div class="py-1" role="none">
                            <a href="#" class="flex items-center gap-x-3 px-4 py-2 text-sm text-gray-100 hover:bg-[#003566]" role="menuitem" tabindex="-1" data-lang="es">
                                ${getTranslation('common', 'castellano')}
                            </a>
                            <a href="#" class="flex items-center gap-x-3 px-4 py-2 text-sm text-gray-100 hover:bg-[#003566]" role="menuitem" tabindex="-1" data-lang="en">
                                ${getTranslation('common', 'english')}
                            </a>
                            <a href="#" class="flex items-center gap-x-3 px-4 py-2 text-sm text-gray-100 hover:bg-[#003566]" role="menuitem" tabindex="-1" data-lang="gl">
                                ${getTranslation('common', 'galician')}
                            </a>
                            <a href="#" class="flex items-center gap-x-3 px-4 py-2 text-sm text-gray-100 hover:bg-[#003566]" role="menuitem" tabindex="-1" data-lang="zh">
                                ${getTranslation('common', 'chinese')}
                            </a>
                        </div>
                    </div>
                </div>
            </nav>

            <div class="md:hidden flex items-center">
                <input type="checkbox" id="menu-toggle" class="peer hidden" />
                <label for="menu-toggle" class="block cursor-pointer text-[#ffc300] hover:text-[#ffd60a] focus:outline-none">
                    <svg class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16m-7 6h7"></path>
                    </svg>
                </label>

                <div class="fixed top-[80px] left-0 w-full bg-[#000814] border-b border-[#003566] shadow-xl z-10
                            max-h-0 overflow-hidden transition-all duration-300 ease-in-out
                            peer-checked:max-h-screen">
                    <ul class="flex flex-col items-center py-4 space-y-4">
                        <li>
                            <a class="${currentPath === '/home' || currentPath === '/' ? 'block text-[#ffc300] font-bold text-xl transition-colors duration-200 border-b-2 border-[#ffc300] px-4 py-2 hover:text-[#ffd60a]' : 'block text-gray-200 hover:text-[#ffc300] font-medium text-xl transition-colors duration-200 px-4 py-2'}" href="/home">${getTranslation('home', 'home')}</a>
                        </li>
                        <li>
                            <a href="/profile" class="${currentPath === '/profile' ? 'block text-[#ffc300] font-bold text-xl transition-colors duration-200 border-b-2 border-[#ffc300] px-4 py-2 hover:text-[#ffd60a]' : 'block text-gray-200 hover:text-[#ffc300] font-medium text-xl transition-colors duration-200 px-4 py-2'}">${getTranslation('home', 'profile')}</a>
                        </li>
                        <li>
                            <a href="/play" class="${currentPath === '/play' ? 'block text-[#ffc300] font-bold text-xl transition-colors duration-200 border-b-2 border-[#ffc300] px-4 py-2 hover:text-[#ffd60a]' : 'block text-gray-200 hover:text-[#ffc300] font-medium text-xl transition-colors duration-200 px-4 py-2'}">${getTranslation('home', 'play')}</a>
                        </li>
                        <li>
                            <a href="/ranking" class="${currentPath === '/ranking' ? 'block text-[#ffc300] font-bold text-xl transition-colors duration-200 border-b-2 border-[#ffc300] px-4 py-2 hover:text-[#ffd60a]' : 'block text-gray-200 hover:text-[#ffc300] font-medium text-xl transition-colors duration-200 px-4 py-2'}">${getTranslation('home', 'ranking')}</a>
                        </li>
                        <li>
                            <a href="/settings" class="${currentPath === '/settings' ? 'block text-[#ffc300] font-bold text-xl transition-colors duration-200 border-b-2 border-[#ffc300] px-4 py-2 hover:text-[#ffd60a]' : 'block text-gray-200 hover:text-[#ffc300] font-medium text-xl transition-colors duration-200 px-4 py-2'}">${getTranslation('home', 'settings')}</a>
                        </li>
                        <li>
                            <button id="logout-btn-mobile" class="block text-gray-200 hover:text-[#ffc300] font-medium text-xl transition-colors duration-200 px-4 py-2 bg-transparent border-none cursor-pointer w-full text-center">${getTranslation('home', 'logout')}</button>
                        </li>
                        <li class="mt-4 pt-4 border-t border-[#003566] w-full text-center">
                            <div class="inline-block">
                                <button
                                    type="button"
                                    id="language-accordion-button-mobile"
                                    class="inline-flex justify-center items-center gap-x-1.5 rounded-full bg-[#001d3d] px-4 py-2 text-sm font-semibold text-gray-100 shadow-sm ring-1 ring-inset ring-[#003566] hover:bg-[#003566] transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-[#ffc300]"
                                >
                                    <span id="current-language-name-mobile-inner">${getTranslation('common', 'language')}</span>
                                    <svg id="language-accordion-arrow-mobile" class="-mr-1 h-5 w-5 text-gray-400 transform transition-transform duration-300" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                        <path fill-rule="evenodd" d="M5.23 7.21a.75.75 0 011.06.02L10 10.94l3.71-3.71a.75.75 0 111.06 1.06l-4.25 4.25a.75.75 0 01-1.06 0L5.23 8.29a.75.75 0 01.02-1.06z" clip-rule="evenodd" />
                                    </svg>
                                </button>
                            </div>
                            <div
                                id="language-accordion-content-mobile"
                                class="max-h-0 overflow-hidden transition-all duration-300 ease-in-out mt-2 w-full"
                            >
                                <ul class="py-1 text-center space-y-2">
                                    <li><a href="#" class="block px-4 py-2 text-sm text-gray-100 hover:bg-[#003566]" data-lang="es">${getTranslation('common', 'castellano')}</a></li>
                                    <li><a href="#" class="block px-4 py-2 text-sm text-gray-100 hover:bg-[#003566]" data-lang="en">${getTranslation('common', 'english')}</a></li>
                                    <li><a href="#" class="block px-4 py-2 text-sm text-gray-100 hover:bg-[#003566]" data-lang="gl">${getTranslation('common', 'galician')}</a></li>
                                    <li><a href="#" class="block px-4 py-2 text-sm text-gray-100 hover:bg-[#003566]" data-lang="zh">${getTranslation('common', 'chinese')}</a></li>
                                </ul>
                            </div>
                        </li>
                    </ul>
                </div>
            </div>
        </header>
    `;

    const navbarContainer = document.getElementById('navbar-container');
    if (navbarContainer) {
        navbarContainer.innerHTML = navbarHtml;

        // Function to update the language dropdown button's UI
        const updateLanguageButtonUI = (nameSpanId: string) => {
            const nameSpan = document.getElementById(nameSpanId);
            const currentLang = getCurrentLanguage();

            let languageDisplayName = '';
            switch (currentLang) {
                case 'es':
                    languageDisplayName = getTranslation('common', 'castellano');
                    break;
                case 'en':
                    languageDisplayName = getTranslation('common', 'english');
                    break;
                case 'gl':
                    languageDisplayName = getTranslation('common', 'galician');
                    break;
                case 'zh':
                    languageDisplayName = getTranslation('common', 'chinese');
                    break;
                default:
                    languageDisplayName = getTranslation('common', 'language'); // Fallback
            }

            if (nameSpan) {
                nameSpan.textContent = languageDisplayName;
            }
        };

        // Initialize desktop button UI
        updateLanguageButtonUI('current-language-name-desktop');
        // Initialize mobile inner button UI
        updateLanguageButtonUI('current-language-name-mobile-inner');


        // Desktop Language Dropdown Logic
        const languageDropdownButtonDesktop = document.getElementById('language-dropdown-button-desktop');
        const languageDropdownMenuDesktop = document.getElementById('language-dropdown-menu-desktop');

        if (languageDropdownButtonDesktop && languageDropdownMenuDesktop) {
            languageDropdownButtonDesktop.addEventListener('click', (event) => {
                event.stopPropagation();
                languageDropdownMenuDesktop.classList.toggle('hidden');
                languageDropdownButtonDesktop.setAttribute('aria-expanded', languageDropdownMenuDesktop.classList.contains('hidden') ? 'false' : 'true');
            });

            languageDropdownMenuDesktop.querySelectorAll('a').forEach(item => {
                item.addEventListener('click', (event) => {
                    event.preventDefault();
                    const langId = item.dataset.lang;
                    if (langId) {
                        setLanguage(langId);
                        languageDropdownMenuDesktop.classList.add('hidden');
                        languageDropdownButtonDesktop.setAttribute('aria-expanded', 'false');
                    }
                });
            });
        }

        // Mobile Language Accordion Logic
        const languageAccordionButtonMobile = document.getElementById('language-accordion-button-mobile');
        const languageAccordionContentMobile = document.getElementById('language-accordion-content-mobile');
        const languageAccordionArrowMobile = document.getElementById('language-accordion-arrow-mobile');

        if (languageAccordionButtonMobile && languageAccordionContentMobile && languageAccordionArrowMobile) {
            languageAccordionButtonMobile.addEventListener('click', (event) => {
                event.stopPropagation();
                languageAccordionContentMobile.classList.toggle('max-h-0');
                languageAccordionContentMobile.classList.toggle('max-h-screen'); // Para que se expanda
                languageAccordionArrowMobile.classList.toggle('rotate-180'); // Gira la flecha
            });

            languageAccordionContentMobile.querySelectorAll('a').forEach(item => {
                item.addEventListener('click', (event) => {
                    event.preventDefault();
                    const langId = item.dataset.lang;
                    if (langId) {
                        setLanguage(langId);
                        // Cierra el acordeón de idioma
                        languageAccordionContentMobile.classList.add('max-h-0');
                        languageAccordionContentMobile.classList.remove('max-h-screen');
                        languageAccordionArrowMobile.classList.remove('rotate-180');
                        // Cierra el menú móvil principal (si está abierto)
                        const menuToggle = document.getElementById('menu-toggle') as HTMLInputElement;
                        if (menuToggle) menuToggle.checked = false;
                    }
                });
            });
        }

        // Common click-outside listener for desktop dropdown only (mobile accordion doesn't need it)
        document.addEventListener('click', (event) => {
            if (languageDropdownMenuDesktop && languageDropdownButtonDesktop && !languageDropdownButtonDesktop.contains(event.target as Node) && !languageDropdownMenuDesktop.contains(event.target as Node)) {
                languageDropdownMenuDesktop.classList.add('hidden');
                languageDropdownButtonDesktop.setAttribute('aria-expanded', 'false');
            }
        });

        // Mobile menu toggle logic
        const menuToggle = document.getElementById('menu-toggle') as HTMLInputElement;
        const mobileMenuDropdown = document.querySelector('header .md\\:hidden .peer:checked~div');

        if (menuToggle && mobileMenuDropdown) {
            mobileMenuDropdown.querySelectorAll('a').forEach(link => {
                link.addEventListener('click', (event) => {
                    // Cierra el menú principal al hacer clic en un enlace de navegación
                    menuToggle.checked = false;
                });
            });
        }

        // Logout button event listeners
        const logoutBtnDesktop = document.getElementById('logout-btn-desktop');
        const logoutBtnMobile = document.getElementById('logout-btn-mobile');

        if (logoutBtnDesktop) {
            logoutBtnDesktop.addEventListener('click', (event) => {
                event.preventDefault();
                logout();
            });
        }

        if (logoutBtnMobile) {
            logoutBtnMobile.addEventListener('click', (event) => {
                event.preventDefault();
                // Close mobile menu first
                if (menuToggle) menuToggle.checked = false;
                logout();
            });
        }
    } else {
        console.error('Navbar container element not found.');
    }
}

[1;30m----------------------------------------[0m

[1;34m=== ./frontend/src/components/playerDisplay.ts ===[0m
// Componente reutilizable para mostrar información de jugadores
export interface PlayerInfo {
  numero: number;
  username: string;
  displayName: string;
  esIA?: boolean;
  isCurrentUser?: boolean;
  controls?: string;
}

export class PlayerDisplay {
  
  /**
   * Genera las tarjetas de información de jugadores
   */
  static generatePlayerCards(
    player1: PlayerInfo, 
    player2: PlayerInfo, 
    gameMode: 'online' | 'local' = 'online'
  ): string {
    const player1Card = this.generatePlayerCard(player1, 1, gameMode);
    const player2Card = this.generatePlayerCard(player2, 2, gameMode);
    
    return `
      <div class="grid grid-cols-2 gap-4 mb-4">
        ${player1Card}
        ${player2Card}
      </div>
    `;
  }

  /**
   * Genera una tarjeta individual para un jugador
   */
  private static generatePlayerCard(player: PlayerInfo, position: 1 | 2, gameMode: 'online' | 'local'): string {
    const isPlayer1 = position === 1;
    const baseColor = isPlayer1 ? 'yellow' : 'blue';
    const bgColor = isPlayer1 ? 'bg-yellow-600' : 'bg-blue-600';
    const textColor = isPlayer1 ? 'text-yellow-200' : 'text-blue-200';
    
    // Íconos según el tipo de jugador
    let playerIcon = '👤';
    let playerType = 'Jugador';
    let playerDescription = 'Jugador humano';
    
    if (player.esIA) {
      playerIcon = '🤖';
      playerType = 'IA';
      playerDescription = 'Inteligencia Artificial';
    } else if (player.isCurrentUser) {
      playerIcon = '📱';
      playerType = 'Tú';
      playerDescription = gameMode === 'local' ? 'Jugador local' : 'Jugador actual';
    } else if (gameMode === 'local') {
      playerIcon = '🎮';
      playerType = 'Jugador 2';
      playerDescription = 'Jugador local';
    }
    
    // Controles según el modo de juego
    const controls = gameMode === 'local' 
      ? (isPlayer1 ? 'W (arriba) / S (abajo)' : '↑ (arriba) / ↓ (abajo)')
      : (player.isCurrentUser ? 'W (arriba) / S (abajo)' : 'Controlado remotamente');
    
    const sideText = isPlayer1 ? 'Izquierda' : 'Derecha';
    const colorText = isPlayer1 ? 'Amarilla' : 'Azul';
    
    return `
      <div class="${bgColor} rounded-lg p-3">
        <h3 class="text-lg font-bold text-white">
          ${playerIcon} ${player.displayName}
        </h3>
        <p class="text-sm ${textColor}">
          ${playerType} - Pala ${colorText}
        </p>
        <p class="text-sm ${textColor} font-semibold">
          Lado ${sideText}
        </p>
        <p class="text-xs ${textColor}">
          ${controls}
        </p>
        <p class="text-xs ${textColor} italic">
          ${playerDescription}
        </p>
      </div>
    `;
  }

  /**
   * Genera la información de rol del jugador
   */
  static generatePlayerRoleInfo(
    currentPlayer: PlayerInfo,
    opponent: PlayerInfo,
    gameMode: 'online' | 'local' = 'online'
  ): string {
    const opponentType = opponent.esIA ? 'IA' : 
                        (gameMode === 'local' ? 'Jugador Local' : 'Jugador Online');
    
    const playerSide = currentPlayer.numero === 1 ? 'Izquierda' : 'Derecha';
    const playerColor = currentPlayer.numero === 1 ? 'Amarilla' : 'Azul';
    
    return `
      <div class="text-green-400 font-bold text-center">
        ✅ Juegas como ${currentPlayer.displayName} vs ${opponent.displayName}
        <br>
        <span class="text-sm">Pala ${playerColor} - Lado ${playerSide}</span>
      </div>
    `;
  }

  /**
   * Genera los títulos del marcador
   */
  static generateScoreTitles(
    player1: PlayerInfo, 
    player2: PlayerInfo, 
    currentPlayerNumber?: number
  ): { player1Title: string; player2Title: string } {
    const player1IsCurrentUser = currentPlayerNumber === 1;
    const player2IsCurrentUser = currentPlayerNumber === 2;
    
    const player1Title = `🟡 ${player1.displayName}${player1IsCurrentUser ? ' (Tú)' : ''}`;
    const player2Title = `🔵 ${player2.displayName}${player2IsCurrentUser ? ' (Tú)' : ''}`;
    
    return {
      player1Title,
      player2Title
    };
  }
}
[1;30m----------------------------------------[0m

[1;34m=== ./frontend/src/google-config.ts ===[0m
// Configuración de Google OAuth para desarrollo
export const GOOGLE_CLIENT_ID = 'your-client-id-here.apps.googleusercontent.com';

// Para desarrollo local, podemos usar un mock o configurar correctamente
export const GOOGLE_CONFIG = {
    client_id: GOOGLE_CLIENT_ID,
    redirect_uri: 'http://localhost:9001',
    scope: 'email profile'
};
[1;30m----------------------------------------[0m

[1;34m=== ./frontend/src/router.ts ===[0m
// src/router.ts

import { renderHomePage } from './pages/home';
import { renderPlay } from './pages/play';
import { renderProfilePage } from './pages/profile';
import { renderRankingPage } from './pages/ranking';
import { renderSettingsPage } from './pages/settings';
import { renderLoginPage } from './pages/login';
import { renderRegister } from './pages/register';
import { renderNavbar } from './components/navbar';
import { isAuthenticated } from './auth';
import { renderGameSelection } from './pages/gameSelection';
import { renderGameLocal } from './pages/gameLocal';
import { renderGameOnline } from './pages/gameOnline';
import { renderGameObserver } from './pages/gameObserver';
import { renderGameSelect } from './pages/gameSelect';
import { renderGameLobby } from './pages/gameLobby';
import { renderGameAI } from './pages/gameAI';
import { renderGameMultiplayer } from './pages/gameMultiplayer';


// Define tus rutas
const routes: { [key: string]: () => void } = {
  '/home': renderHomePage,
  '/': () => {
    // Redirigir al login si no está autenticado, al home si lo está
    if (isAuthenticated()) {
      navigateTo('/home');
    } else {
      navigateTo('/login');
    }
  },
  '/profile': renderProfilePage,
  '/play': renderPlay,
  '/ranking': renderRankingPage,
  '/settings': renderSettingsPage,
  '/login': renderLoginPage,
  '/register': renderRegister,
  
  // Nuevas rutas de juego
  '/game-selection': renderGameSelection,
  '/game-lobby': renderGameLobby,
  '/game-local': renderGameLocal,
  '/game-online': renderGameOnline,
  '/game-observer': renderGameObserver,
  '/game-select': renderGameSelect,
  '/game-ai': renderGameAI,
  '/game-multiplayer': renderGameMultiplayer
};

/**
 * Función auxiliar para establecer la estructura principal de la aplicación (navbar + contenido de página).
 * Solo la recrea si no existe.
 */
function setupMainAppLayout(): void {
  const appRoot = document.getElementById('app-root');
  if (!appRoot) {
    console.error('Elemento con id "app-root" no encontrado para configurar el layout principal.');
    return;
  }

  // Si no existen los contenedores principales (navbar-container o page-content), los crea
  if (!document.getElementById('navbar-container') || !document.getElementById('page-content')) {
    appRoot.innerHTML = `
      <div id="navbar-container"></div>
      <main id="page-content" class="flex-grow flex flex-col justify-center items-center p-4 sm:p-8 mt-24 sm:mt-32 w-full text-gray-100"></main>
    `;
  }
}

/**
 * Navega a una nueva ruta, renderiza la página correspondiente y actualiza el historial del navegador.
 * También asegura que el navbar se vuelva a renderizar para reflejar el enlace activo, si aplica.
 * @param path La ruta a la que navegar.
 */
export async function navigateTo(path: string): Promise<void> {
  const appRoot = document.getElementById('app-root') as HTMLElement;
  if (!appRoot) {
    console.error('Elemento con id "app-root" no encontrado. No se puede navegar.');
    return;
  }
  
  // Separar la ruta de los parámetros de consulta
  const [routePath, queryString] = path.split('?');
  const fullPath = path; // Mantener el path completo para el historial
  
  const isAuthPage = routePath === '/login' || routePath === '/register';
  const currentPagePath = window.location.pathname;
  const wasAuthPage = currentPagePath === '/login' || currentPagePath === '/register';
  
  // Verifica si el usuario está autenticado
  const userIsAuthenticated = isAuthenticated();

  // Protección de rutas
  if (isAuthPage && userIsAuthenticated) {
    // Si el usuario está autenticado y trata de acceder a login/register, redirigir a home
    console.log('Usuario autenticado intentando acceder a página de auth, redirigiendo a home');
    navigateTo('/home');
    return;
  }

  if (!isAuthPage && !userIsAuthenticated) {
    // Si el usuario no está autenticado y trata de acceder a páginas protegidas, redirigir a login
    console.log('Usuario no autenticado intentando acceder a página protegida, redirigiendo a login');
    navigateTo('/login');
    return;
  }

  if (isAuthPage) {
    // Si vamos a una página de autenticación, limpiamos todo el appRoot
    // y dejamos que renderLoginPage/renderRegister sobrescriba appRoot.innerHTML
    if (!wasAuthPage) { // Solo si venimos de una página que no era de autenticación
        appRoot.innerHTML = ''; // Limpia la estructura principal (navbar + main)
    }
    const renderFunction = routes[routePath];
    if (renderFunction) {
      renderFunction(); // Llama a la función de renderizado de login/register
    } else {
        console.warn(`Ruta no encontrada para página de autenticación: ${routePath}`);
    }
  } else {
    // Si vamos a una página de la aplicación principal, nos aseguramos de que la estructura exista
    if (wasAuthPage) { // Si venimos de una página de autenticación
        setupMainAppLayout(); // Reestablece la estructura principal (navbar + main)
    } else if (!document.getElementById('navbar-container') || !document.getElementById('page-content')) {
        // Si no es una página de autenticación, pero la estructura no está (ej. primera carga de /home)
        setupMainAppLayout();
    }

    const pageContentContainer = document.getElementById('page-content');
    if (!pageContentContainer) {
      console.error('Contenedor de contenido de página (#page-content) no encontrado después de configurar el layout.');
      return;
    }

    // Limpia solo el contenido de la página para las rutas no de autenticación
    pageContentContainer.innerHTML = '';

    const renderFunction = routes[routePath]; // Usar routePath sin parámetros
    if (renderFunction) {
      renderFunction(); // Renderiza el contenido de la página dentro de #page-content
    } else {
      // Manejar 404 o redirigir a una página predeterminada
      pageContentContainer.innerHTML = '<h1>404 - Página No Encontrada</h1><p>Lo sentimos, la página que buscas no existe.</p>';
      console.warn(`Ruta no encontrada para la ruta: ${routePath}`);
    }

    // Siempre vuelve a renderizar el navbar para actualizar el enlace activo en las páginas de la aplicación
    renderNavbar(routePath);
  }

  // Actualiza el historial del navegador (a menos que sea la carga inicial y la ruta sea la misma)
  if (window.location.pathname !== fullPath) {
    window.history.pushState({}, fullPath, fullPath);
  }
}

[1;30m----------------------------------------[0m

[1;34m=== ./frontend/src/i18n.ts ===[0m
// src/i18n.ts

interface Translations {
    [key: string]: { // This key will be the language code (e.g., 'es', 'en')
        [component: string]: { // This key will be the component name (e.g., 'common', 'login', 'register', 'home', 'profile', 'play', 'ranking', 'settings', 'pong')
            [textKey: string]: string; // This key will be the specific text identifier (e.g., 'welcomeBack')
        };
    };
}

const translations: Translations = {
    es: {
        common: {
            language: 'Castellano',
            english: 'English',
            galician: 'Galego',
            chinese: '中文 (Chino)',
            castellano: 'Castellano',
            infoTitle: "Información",
            okButton: "Entendido",
            backToHome: "Volver al Inicio"
        },
        navbar: {
            home: 'Inicio',
            profile: 'Perfil',
            play: 'Jugar',
            ranking: 'Ranking',
            settings: 'Ajustes',
            logout: 'Cerrar Sesión'
        },
        login: {
            welcomeBack: 'Bienvenido de nuevo',
            title: 'PONG',
            subtitle: 'Conéctate para jugar al máximo nivel.',
            usernameLabel: 'Nombre de usuario',
            passwordLabel: 'Contraseña',
            loginButton: 'Iniciar sesión',
            createAccountButton: 'Crear una cuenta',
            or: 'O',
            noAccountYet: '¿Aún no tienes una cuenta?'
        },
        register: {
            joinExperience: 'Únete a la experiencia',
            title: 'Regístrate',
            subtitle: 'Crea tu cuenta para empezar a jugar.',
            usernameLabel: 'Nombre de usuario',
            emailLabel: 'Correo electrónico',
            passwordLabel: 'Contraseña',
            confirmPasswordLabel: 'Confirmar contraseña',
            registerButton: 'Registrarse',
            alreadyHaveAccount: '¿Ya tienes una cuenta?',
            loginHere: 'Iniciar sesión aquí',
            registerWithGoogle: 'Registrarse con Google',
            or: 'O'
        },
        home: {
            welcomeTitle: "Bienvenido a",
            welcomeSubtitle: "La plataforma definitiva para el Pong moderno. ¡Compite, conéctate y trasciende!",
            playNowButton: "Jugar Ahora",
            viewTournamentsButton: "Ver Torneos",
            liveMatchesTitle: "Partidos en Vivo",
            liveMatchesSubtitle: "Sigue la acción en tiempo real.",
            playerA: "Jugador A",
            playerB: "Jugador B",
            teamX: "Equipo X",
            teamY: "Equipo Y",
            vs: "vs",
            inProgressRound: "En progreso - Ronda ",
            tournamentSemifinal: "Semifinal del Torneo",
            quickMatch: "Partida Rápida",
            preparingToStart: "Preparándose para empezar",
            assassin: "Asesino",
            master: "Maestro",
            matchPoint: "Punto de partido",
            yourProfileTitle: "Tu Perfil",
            yourProfileSubtitle: "Accede a tus estadísticas, historial y personaliza tu experiencia.",
            globalRankingTitle: "Ranking Global",
            globalRankingSubtitle: "Descubre a los mejores jugadores de Transcendence."
        },
        profile: {
            profileTitle: "Perfil de Usuario",
            settingsTitle: "Ajustes",
            editProfileButton: "Editar Perfil",
            uploadAvatarButton: "Subir Avatar",
            changePasswordButton: "Cambiar Contraseña",
            matchHistoryTitle: "Historial de Partidas",
            matchHistorySubtitle: "Tus últimas partidas",
            matchWin: "Victoria",
            matchLoss: "Derrota",
            matchDraw: "Empate",
            score: "Puntuación",
            date: "Fecha",
            time: "Hora",
            opponent: "Oponente",
            gameMode: "Modo de Juego",
            noMatches: "No hay partidas en el historial.",
            statsTitle: "Estadísticas",
            totalWins: "Victorias Totales",
            totalLosses: "Derrotas Totales",
            winRate: "Tasa de Victorias",
            totalGames: "Partidas Totales",
            eloRating: "Puntuación ELO",
            accuracy: "Precisión",
            mostPlayedMode: "Modo más jugado",
            languageSetting: "Idioma",
            notificationsSetting: "Notificaciones",
            twoFactorAuthSetting: "Autenticación de Dos Factores",
            darkModeSetting: "Modo Oscuro",
            enable: "Activar",
            disable: "Desactivar",
            change: "Cambiar",
            logoutButton: "Cerrar Sesión",
            saveChangesButton: "Guardar Cambios",
            cancelButton: "Cancelar",
            confirmLogoutTitle: "¿Cerrar Sesión?",
            confirmLogoutMessage: "¿Estás seguro de que quieres cerrar tu sesión?",
            yesLogout: "Sí, Cerrar Sesión",
            noCancel: "No, Cancelar",
            customMessageTitle: "Información",
            okButton: "Entendido"
        },
        play: {
            selectGameMode: "Selecciona un Modo de Juego",
            oneVsOne: "1 vs 1 Clásico",
            oneVsOneDescription: "Partida rápida contra otro jugador.",
            tournament: "Torneo",
            tournamentDescription: "Competición con múltiples jugadores. ¡Próximamente!",
            comingSoon: "¡Próximamente!",
            customGame: "Partida Personalizada",
            customGameDescription: "Crea o únete a una partida con reglas específicas.",
            vsAIButton: "Vs IA",
            chooseModeTitle: "Elige un modo de juego",
            chooseModeDescription: "Selecciona un modo de juego para empezar a jugar.",
            backToGame: "Volver al juego",
            vsAIDescription: "Juega contra la inteligencia artificial.",
            selectDifficulty: "Selecciona la dificultad"
        },
        ranking: {
            globalRankingTitle: "Ranking Global",
            wins: "Victorias:",
            losses: "Derrotas:",
            pointsAbbreviation: "pts",
            yourCurrentPosition: "Tu posición actual:",
            viewMyPositionButton: "Ver mi posición"
        },
        settings: {
            title: "Ajustes",
            userAccountSectionTitle: "Cuenta de Usuario",
            usernameLabel: "Nombre de Usuario",
            emailLabel: "Correo Electrónico",
            currentPasswordLabel: "Contraseña Actual",
            currentPasswordPlaceholder: "Ingresa tu contraseña actual",
            newPasswordLabel: "Nueva Contraseña",
            newPasswordPlaceholder: "Ingresa tu nueva contraseña",
            confirmNewPasswordLabel: "Confirmar Nueva Contraseña",
            confirmNewPasswordPlaceholder: "Confirma tu nueva contraseña",
            acceptChangesButton: "Aceptar Cambios",
            deleteAccountButton: "Eliminar Cuenta"
        }
    },
    en: {
        common: {
            language: 'English',
            english: 'English',
            galician: 'Galician',
            chinese: '中文 (Chinese)',
            castellano: 'Spanish',
            infoTitle: "Information",
            okButton: "Understood",
            backToHome: "Back to Home"
        },
        navbar: {
            home: 'Home',
            profile: 'Profile',
            play: 'Play',
            ranking: 'Ranking',
            settings: 'Settings',
            logout: 'Logout'
        },
        login: {
            welcomeBack: 'Welcome Back',
            title: 'PONG',
            subtitle: 'Connect to play at the highest level.',
            usernameLabel: 'Username',
            passwordLabel: 'Password',
            loginButton: 'Login',
            createAccountButton: 'Create an Account',
            or: 'Or',
            noAccountYet: 'Don\'t have an account yet?'
        },
        register: {
            joinExperience: 'Join the Experience',
            title: 'Register',
            subtitle: 'Create your account to start playing.',
            usernameLabel: 'Username',
            emailLabel: 'Email',
            passwordLabel: 'Password',
            confirmPasswordLabel: 'Confirm Password',
            registerButton: 'Register',
            alreadyHaveAccount: 'Already have an account?',
            loginHere: 'Login here',
            registerWithGoogle: 'Register with Google',
            or: 'Or'
        },
        home: {
            welcomeTitle: "Welcome to",
            welcomeSubtitle: "The ultimate platform for modern Pong. Compete, connect, and transcend!",
            playNowButton: "Play Now",
            viewTournamentsButton: "View Tournaments",
            liveMatchesTitle: "Live Matches",
            liveMatchesSubtitle: "Follow the action in real-time.",
            playerA: "Player A",
            playerB: "Player B",
            teamX: "Team X",
            teamY: "Team Y",
            vs: "vs",
            inProgressRound: "In progress - Round ",
            tournamentSemifinal: "Tournament Semifinal",
            quickMatch: "Quick Match",
            preparingToStart: "Preparing to start",
            assassin: "Assassin",
            master: "Master",
            matchPoint: "Match Point",
            yourProfileTitle: "Your Profile",
            yourProfileSubtitle: "Access your stats, history, and customize your experience.",
            globalRankingTitle: "Global Ranking",
            globalRankingSubtitle: "Discover the best players in Transcendence."
        },
        profile: {
            profileTitle: "User Profile",
            settingsTitle: "Settings",
            editProfileButton: "Edit Profile",
            uploadAvatarButton: "Upload Avatar",
            changePasswordButton: "Change Password",
            matchHistoryTitle: "Match History",
            matchHistorySubtitle: "Your recent games",
            matchWin: "Win",
            matchLoss: "Loss",
            matchDraw: "Draw",
            score: "Score",
            date: "Date",
            time: "Time",
            opponent: "Opponent",
            gameMode: "Game Mode",
            noMatches: "No matches in history.",
            statsTitle: "Statistics",
            totalWins: "Total Wins",
            totalLosses: "Total Losses",
            winRate: "Win Rate",
            totalGames: "Total Games",
            eloRating: "ELO Rating",
            accuracy: "Accuracy",
            mostPlayedMode: "Most Played Mode",
            languageSetting: "Language",
            notificationsSetting: "Notifications",
            twoFactorAuthSetting: "Two-Factor Authentication",
            darkModeSetting: "Dark Mode",
            enable: "Enable",
            disable: "Disable",
            change: "Change",
            logoutButton: "Logout",
            saveChangesButton: "Save Changes",
            cancelButton: "Cancel",
            confirmLogoutTitle: "Logout?",
            confirmLogoutMessage: "Are you sure you want to log out?",
            yesLogout: "Yes, Logout",
            noCancel: "No, Cancel",
            customMessageTitle: "Information",
            okButton: "Understood"
        },
        play: {
            selectGameMode: "Select Game Mode",
            oneVsOne: "1 vs 1 Classic",
            oneVsOneDescription: "Quick match against another player.",
            tournament: "Tournament",
            tournamentDescription: "Competition with multiple players. Coming soon!",
            comingSoon: "Coming Soon!",
            customGame: "Custom Game",
            customGameDescription: "Create or join a game with specific rules.",
            vsAIButton: "Vs AI",
            chooseModeTitle: "Choose a Game Mode",
            chooseModeDescription: "Select a game mode to start playing.",
            backToGame: "Back to Game",
            vsAIDescription: "Play against AI.",
            selectDifficulty: "Select Difficulty"
        },
        ranking: {
            globalRankingTitle: "Global Ranking",
            wins: "Wins:",
            losses: "Losses:",
            pointsAbbreviation: "pts",
            yourCurrentPosition: "Your current position:",
            viewMyPositionButton: "View my position"
        },
        settings: {
            title: "Settings",
            userAccountSectionTitle: "User Account",
            usernameLabel: "Username",
            emailLabel: "Email",
            currentPasswordLabel: "Current Password",
            currentPasswordPlaceholder: "Enter your current password",
            newPasswordLabel: "New Password",
            newPasswordPlaceholder: "Enter your new password",
            confirmNewPasswordLabel: "Confirm New Password",
            confirmNewPasswordPlaceholder: "Confirm your new password",
            acceptChangesButton: "Accept Changes",
            deleteAccountButton: "Delete Account"
        }
    },
    gl: {
        common: {
            language: 'Galego',
            english: 'Inglés',
            galician: 'Galego',
            chinese: '中文 (Chinés)',
            castellano: 'Castelán',
            infoTitle: "Información",
            okButton: "Entendido",
            backToHome: "Volver ao Inicio"
        },
        navbar: {
            home: 'Inicio',
            profile: 'Perfil',
            play: 'Xogar',
            ranking: 'Clasificación',
            settings: 'Configuración',
            logout: 'Pechar Sesión'
        },
        login: {
            welcomeBack: 'Benvido de volta',
            title: 'PONG',
            subtitle: 'Conéctate para xogar ao máximo nivel.',
            usernameLabel: 'Nome de usuario',
            passwordLabel: 'Contrasinal',
            loginButton: 'Iniciar sesión',
            createAccountButton: 'Crear unha conta',
            or: 'Ou',
            noAccountYet: 'Aínda non tes unha conta?'
        },
        register: {
            joinExperience: 'Únete á experiencia',
            title: 'Rexistrar',
            subtitle: 'Crea a túa conta para comezar a xogar.',
            usernameLabel: 'Nome de usuario',
            emailLabel: 'Correo electrónico',
            passwordLabel: 'Contrasinal',
            confirmPasswordLabel: 'Confirmar contrasinal',
            registerButton: 'Rexistrarse',
            alreadyHaveAccount: 'Xa tes unha conta?',
            loginHere: 'Iniciar sesión aquí',
            registerWithGoogle: 'Rexistrarse con Google',
            or: 'Ou'
        },
        home: {
            welcomeTitle: "Benvido a",
            welcomeSubtitle: "A plataforma definitiva para o Pong moderno. Compite, conéctate e trasciende!",
            playNowButton: "Xogar Agora",
            viewTournamentsButton: "Ver Torneos",
            liveMatchesTitle: "Partidos en Vivo",
            liveMatchesSubtitle: "Segue a acción en tempo real.",
            playerA: "Xogador A",
            playerB: "Xogador B",
            teamX: "Equipo X",
            teamY: "Equipo Y",
            vs: "vs",
            inProgressRound: "En progreso - Ronda ",
            tournamentSemifinal: "Semifinal do Torneo",
            quickMatch: "Partida Rápida",
            preparingToStart: "Preparándose para empezar",
            assassin: "Asasino",
            master: "Mestre",
            matchPoint: "Punto de partido",
            yourProfileTitle: "O teu Perfil",
            yourProfileSubtitle: "Accede ás túas estadísticas, historial e personaliza a túa experiencia.",
            globalRankingTitle: "Clasificación Global",
            globalRankingSubtitle: "Descobre os mellores xogadores de Transcendence."
        },
        profile: {
            profileTitle: "Perfil de Usuario",
            settingsTitle: "Configuración",
            editProfileButton: "Editar Perfil",
            uploadAvatarButton: "Subir Avatar",
            changePasswordButton: "Cambiar Contrasinal",
            matchHistoryTitle: "Historial de Partidas",
            matchHistorySubtitle: "As túas últimas partidas",
            matchWin: "Victoria",
            matchLoss: "Derrota",
            matchDraw: "Empate",
            score: "Puntuación",
            date: "Data",
            time: "Hora",
            opponent: "Opoñente",
            gameMode: "Modo de Xogo",
            noMatches: "Non hai partidas no historial.",
            statsTitle: "Estadísticas",
            totalWins: "Victorias Totais",
            totalLosses: "Derrotas Totais",
            winRate: "Taxa de Victorias",
            totalGames: "Partidas Totais",
            eloRating: "Puntuación ELO",
            accuracy: "Precisión",
            mostPlayedMode: "Modo máis xogado",
            languageSetting: "Idioma",
            notificationsSetting: "Notificacións",
            twoFactorAuthSetting: "Autenticación de Dous Factores",
            darkModeSetting: "Modo Escuro",
            enable: "Activar",
            disable: "Desactivar",
            change: "Cambiar",
            logoutButton: "Pechar Sesión",
            saveChangesButton: "Gardar Cambios",
            cancelButton: "Cancelar",
            confirmLogoutTitle: "Pechar Sesión?",
            confirmLogoutMessage: "Estás seguro de que queres pechar a túa sesión?",
            yesLogout: "Si, Pechar Sesión",
            noCancel: "Non, Cancelar",
            customMessageTitle: "Información",
            okButton: "Entendido"
        },
        play: {
            selectGameMode: "Selecciona un Modo de Xogo",
            oneVsOne: "1 vs 1 Clásico",
            oneVsOneDescription: "Partida rápida contra outro xogador.",
            tournament: "Torneo",
            tournamentDescription: "Competición con múltiples xogadores. Proximamente!",
            comingSoon: "Proximamente!",
            customGame: "Partida Personalizada",
            customGameDescription: "Crea ou únete a unha partida con regras específicas.",
            vsAIButton: "Vs IA",
            chooseModeTitle: "Elixe un modo de xogo",
            chooseModeDescription: "Selecciona un modo de xogo para empezar a xogar.",
            backToGame: "Volver ao xogo",
            vsAIDescription: "Xoga contra a intelixencia artificial.",
            selectDifficulty: "Selecciona a dificultade"
        },
        ranking: {
            globalRankingTitle: "Clasificación Global",
            wins: "Victorias:",
            losses: "Derrotas:",
            pointsAbbreviation: "pts",
            yourCurrentPosition: "A túa posición actual:",
            viewMyPositionButton: "Ver a miña posición"
        },
        settings: {
            title: "Configuración",
            userAccountSectionTitle: "Conta de Usuario",
            usernameLabel: "Nome de Usuario",
            emailLabel: "Correo Electrónico",
            currentPasswordLabel: "Contrasinal Actual",
            currentPasswordPlaceholder: "Introduce o teu contrasinal actual",
            newPasswordLabel: "Novo Contrasinal",
            newPasswordPlaceholder: "Introduce o teu novo contrasinal",
            confirmNewPasswordLabel: "Confirmar Novo Contrasinal",
            confirmNewPasswordPlaceholder: "Confirma o teu novo contrasinal",
            acceptChangesButton: "Aceptar Cambios",
            deleteAccountButton: "Eliminar Conta"
        }
    },
    zh: {
        common: {
            language: '中文',
            english: 'English (英语)',
            galician: 'Galician (加利西亚语)',
            chinese: '中文',
            castellano: 'Spanish (西班牙语)',
            infoTitle: "信息",
            okButton: "明白了",
            backToHome: "返回主页"
        },
        navbar: {
            home: '主页',
            profile: '个人资料',
            play: '游戏',
            ranking: '排行榜',
            settings: '设置',
            logout: '登出'
        },
        login: {
            welcomeBack: '欢迎回来',
            title: 'PONG',
            subtitle: '连接以在最高水平上游戏。',
            usernameLabel: '用户名',
            passwordLabel: '密码',
            loginButton: '登录',
            createAccountButton: '创建账户',
            or: '或',
            noAccountYet: '还没有账户？'
        },
        register: {
            joinExperience: '加入体验',
            title: '注册',
            subtitle: '创建您的账户开始游戏。',
            usernameLabel: '用户名',
            emailLabel: '邮箱',
            passwordLabel: '密码',
            confirmPasswordLabel: '确认密码',
            registerButton: '注册',
            alreadyHaveAccount: '已经有账户了？',
            loginHere: '在这里登录',
            registerWithGoogle: '使用Google注册',
            or: '或'
        },
        home: {
            welcomeTitle: "欢迎来到",
            welcomeSubtitle: "现代乒乓球的终极平台。竞争、连接、超越！",
            playNowButton: "立即游戏",
            viewTournamentsButton: "查看锦标赛",
            liveMatchesTitle: "实时比赛",
            liveMatchesSubtitle: "实时关注比赛动态。",
            playerA: "玩家 A",
            playerB: "玩家 B",
            teamX: "队伍 X",
            teamY: "队伍 Y",
            vs: "对战",
            inProgressRound: "进行中 - 第 ",
            tournamentSemifinal: "锦标赛半决赛",
            quickMatch: "快速比赛",
            preparingToStart: "准备开始",
            assassin: "刺客",
            master: "大师",
            matchPoint: "赛点",
            yourProfileTitle: "你的个人资料",
            yourProfileSubtitle: "访问您的统计数据、历史记录并自定义您的体验。",
            globalRankingTitle: "全球排行榜",
            globalRankingSubtitle: "发现Transcendence中最好的玩家。"
        },
        profile: {
            profileTitle: "用户资料",
            settingsTitle: "设置",
            editProfileButton: "编辑资料",
            uploadAvatarButton: "上传头像",
            changePasswordButton: "更改密码",
            matchHistoryTitle: "比赛历史",
            matchHistorySubtitle: "你最近的游戏",
            matchWin: "胜利",
            matchLoss: "失败",
            matchDraw: "平局",
            score: "分数",
            date: "日期",
            time: "时间",
            opponent: "对手",
            gameMode: "游戏模式",
            noMatches: "历史记录中没有比赛。",
            statsTitle: "统计数据",
            totalWins: "总胜利",
            totalLosses: "总失败",
            winRate: "胜率",
            totalGames: "总游戏数",
            eloRating: "ELO评级",
            accuracy: "准确性",
            mostPlayedMode: "最常玩的模式",
            languageSetting: "语言",
            notificationsSetting: "通知",
            twoFactorAuthSetting: "双因素认证",
            darkModeSetting: "深色模式",
            enable: "启用",
            disable: "禁用",
            change: "更改",
            logoutButton: "登出",
            saveChangesButton: "保存更改",
            cancelButton: "取消",
            confirmLogoutTitle: "登出？",
            confirmLogoutMessage: "您确定要登出吗？",
            yesLogout: "是，登出",
            noCancel: "否，取消",
            customMessageTitle: "信息",
            okButton: "明白了"
        },
        play: {
            selectGameMode: "选择游戏模式",
            oneVsOne: "1对1经典",
            oneVsOneDescription: "与另一个玩家的快速比赛。",
            tournament: "锦标赛",
            tournamentDescription: "多玩家竞赛。即将推出！",
            comingSoon: "即将推出！",
            customGame: "自定义游戏",
            customGameDescription: "创建或加入具有特定规则的游戏。",
            vsAIButton: "对战AI",
            chooseModeTitle: "选择游戏模式",
            chooseModeDescription: "选择游戏模式开始游戏。",
            backToGame: "返回游戏",
            vsAIDescription: "与人工智能对战。",
            selectDifficulty: "选择难度"
        },
        ranking: {
            globalRankingTitle: "全球排行榜",
            wins: "胜利：",
            losses: "失败：",
            pointsAbbreviation: "分",
            yourCurrentPosition: "您当前的位置：",
            viewMyPositionButton: "查看我的位置"
        },
        settings: {
            title: "设置",
            userAccountSectionTitle: "用户账户",
            usernameLabel: "用户名",
            emailLabel: "邮箱",
            currentPasswordLabel: "当前密码",
            currentPasswordPlaceholder: "输入您当前的密码",
            newPasswordLabel: "新密码",
            newPasswordPlaceholder: "输入您的新密码",
            confirmNewPasswordLabel: "确认新密码",
            confirmNewPasswordPlaceholder: "确认您的新密码",
            acceptChangesButton: "接受更改",
            deleteAccountButton: "删除账户"
        }
    }
};

// Variable para almacenar el idioma actual, inicializada desde localStorage o 'es' por defecto
let currentLang = localStorage.getItem('lang') || 'es';

/**
 * Obtiene la traducción para una clave de texto específica.
 * @param component El componente al que pertenece el texto (ej. 'login', 'common').
 * @param key La clave del texto a traducir (ej. 'welcomeBack', 'usernameLabel').
 * @returns El texto traducido o la clave original si no se encuentra la traducción.
 */
export function getTranslation(component: string, key: string): string {
    return translations[currentLang]?.[component]?.[key] || key;
}

/**
 * Establece el idioma de la aplicación.
 * @param lang El código del idioma (ej. 'es', 'en').
 */
export function setLanguage(lang: string): void {
    if (translations[lang]) {
        currentLang = lang;
        localStorage.setItem('lang', lang);
        // Dispara un evento personalizado para notificar a los componentes que deben actualizarse
        window.dispatchEvent(new CustomEvent('languageChange', { detail: lang }));
    } else {
        console.warn(`Language ${lang} not found in translations.`);
    }
}

/**
 * Obtiene el idioma actual de la aplicación.
 * @returns El código del idioma actual.
 */
export function getCurrentLanguage(): string {
    return currentLang;
}
[1;30m----------------------------------------[0m

[1;34m=== ./frontend/src/utils/safariPolyfills.ts ===[0m
// src/utils/safariPolyfills.ts

/**
 * Detecta si el navegador es Safari
 */
export function isSafari(): boolean {
    return /constructor/i.test(window.HTMLElement.toString()) || 
           (function (p) { return p.toString() === "[object SafariRemoteNotification]"; })(!((window as any).safari) || (typeof (window as any).safari !== 'undefined' && (window as any).safari.pushNotification));
}

/**
 * Detecta si es Safari en iOS
 */
export function isIOSSafari(): boolean {
    const ua = window.navigator.userAgent;
    const iOS = !!ua.match(/iPad/i) || !!ua.match(/iPhone/i);
    const webkit = !!ua.match(/WebKit/i);
    const iOSSafari = iOS && webkit && !ua.match(/CriOS/i);
    return iOSSafari;
}

/**
 * Inicializa correcciones de compatibilidad para Safari
 */
export function initSafariCompatibility(): void {
    if (isSafari() || isIOSSafari()) {
        // Evitar zoom en inputs en iOS Safari
        const inputs = document.querySelectorAll('input, textarea, select');
        inputs.forEach(input => {
            input.addEventListener('focus', () => {
                // Temporal para evitar el zoom
                const viewport = document.querySelector('meta[name=viewport]') as HTMLMetaElement;
                if (viewport) {
                    viewport.content = 'width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no';
                }
            });
            
            input.addEventListener('blur', () => {
                // Restaurar zoom después del focus
                const viewport = document.querySelector('meta[name=viewport]') as HTMLMetaElement;
                if (viewport) {
                    viewport.content = 'width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, viewport-fit=cover';
                }
            });
        });

        // Fix para la altura del viewport en Safari móvil
        const setVH = () => {
            const vh = window.innerHeight * 0.01;
            document.documentElement.style.setProperty('--vh', `${vh}px`);
        };

        setVH();
        window.addEventListener('resize', setVH);
        window.addEventListener('orientationchange', () => {
            setTimeout(setVH, 100);
        });

        console.log('🍎 Safari compatibility fixes applied');
    }
}
[1;30m----------------------------------------[0m

[1;34m=== ./frontend/src/utils/gameStats.ts ===[0m
import { getCurrentUser } from '../auth';

export interface GameStats {
  player1_id: number;
  player2_id: number;
  player1_name: string;
  player2_name: string;
  score1: number;
  score2: number;
  winner_id: number;
  winner_name: string;
  game_mode: string;
  duration: number; // en segundos
  start_time: string;
  end_time: string;
}

export async function saveGameStats(stats: GameStats): Promise<boolean> {
  try {
    const token = localStorage.getItem('jwt');
    if (!token) {
      console.error('No se encontró token de autenticación');
      return false;
    }

    const response = await fetch('/api/game/stats', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${token}`,
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(stats)
    });

    if (!response.ok) {
      console.error('Error al guardar estadísticas:', response.status);
      return false;
    }

    console.log('Estadísticas del juego guardadas exitosamente');
    return true;
  } catch (error) {
    console.error('Error al guardar estadísticas:', error);
    return false;
  }
}

export function createGameStats(
  player1Name: string,
  player2Name: string,
  score1: number,
  score2: number,
  gameMode: string,
  startTime: Date,
  endTime: Date
): GameStats {
  const currentUser = getCurrentUser();
  const winner = score1 > score2 ? { id: currentUser?.id || 1, name: player1Name } : { id: 2, name: player2Name };
  const duration = Math.floor((endTime.getTime() - startTime.getTime()) / 1000);

  return {
    player1_id: currentUser?.id || 1,
    player2_id: 2, // En juego local, player2 será siempre ID 2 o se puede ajustar
    player1_name: player1Name,
    player2_name: player2Name,
    score1,
    score2,
    winner_id: winner.id,
    winner_name: winner.name,
    game_mode: gameMode,
    duration,
    start_time: startTime.toISOString(),
    end_time: endTime.toISOString()
  };
}
[1;30m----------------------------------------[0m

[1;34m=== ./frontend/src/pages/ranking.ts ===[0m
// src/pages/ranking.ts

import { navigateTo } from '../router';
import { getTranslation } from '../i18n';
import { getCurrentUser } from '../auth';

interface RankingPlayer {
    rank: number;
    id: number;
    username: string;
    wins: number;
    losses: number;
    totalGames: number;
    elo: number;
    winRate: number;
    points: number;
}

interface UserStats {
    totalGames: number;
    wins: number;
    losses: number;
    winRate: number;
    elo: number;
    ranking: number;
}

// Función para obtener el ranking global
async function getRankingData(): Promise<RankingPlayer[]> {
    try {
        const response = await fetch('/api/auth/ranking', {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json'
            }
        });

        if (!response.ok) {
            console.error('Error al obtener ranking:', response.status);
            return [];
        }

        return await response.json();
    } catch (error) {
        console.error('Error en la petición del ranking:', error);
        return [];
    }
}

// Función para obtener estadísticas del usuario actual
async function getUserStats(): Promise<UserStats | null> {
    const token = localStorage.getItem('jwt');
    if (!token) return null;

    try {
        const response = await fetch('/api/auth/profile/stats', {
            method: 'GET',
            headers: {
                'Authorization': `Bearer ${token}`,
                'Content-Type': 'application/json'
            }
        });

        if (!response.ok) {
            console.error('Error al obtener estadísticas del usuario:', response.status);
            return null;
        }

        return await response.json();
    } catch (error) {
        console.error('Error en la petición de estadísticas del usuario:', error);
        return null;
    }
}

export async function renderRankingPage(): Promise<void> {
    const currentUser = getCurrentUser();
    
    // Mostrar loading inicial
    const pageContent = document.getElementById('page-content') as HTMLElement;
    if (pageContent) {
        pageContent.innerHTML = `
            <main class="flex-grow w-full p-4 sm:p-8 flex flex-col items-center gap-8 text-gray-100">
                <div class="max-w-4xl w-full">
                    <div class="text-center mb-12">
                        <h1 class="text-4xl sm:text-5xl lg:text-6xl font-display font-extrabold mb-6 text-[#ffc300] drop-shadow-md leading-tight">
                            ${getTranslation('ranking', 'globalRankingTitle')}
                        </h1>
                        <p class="text-base sm:text-lg md:text-xl text-gray-300 mb-8">
                            Cargando ranking...
                        </p>
                    </div>
                </div>
            </main>
        `;
    }

    // Obtener datos del ranking y estadísticas del usuario
    const [rankingData, userStats] = await Promise.all([
        getRankingData(),
        getUserStats()
    ]);

    // Función para obtener el color del badge según el ranking
    function getRankBadgeColor(rank: number): string {
        switch (rank) {
            case 1: return 'bg-gradient-to-r from-yellow-400 to-yellow-600';
            case 2: return 'bg-gradient-to-r from-gray-300 to-gray-500';
            case 3: return 'bg-gradient-to-r from-orange-400 to-orange-600';
            default: return 'bg-[#003566]';
        }
    }

    // Función para obtener el icono según el ranking
    function getRankIcon(rank: number): string {
        switch (rank) {
            case 1: return '👑';
            case 2: return '🥈';
            case 3: return '🥉';
            default: return `#${rank}`;
        }
    }

    // Encontrar al usuario actual en el ranking
    const currentUserInRanking = rankingData.find(player => 
        currentUser && player.username === currentUser.username
    );

    const rankingHtml = `
        <main class="flex-grow w-full p-4 sm:p-8 flex flex-col items-center gap-8 text-gray-100">
            <div class="max-w-4xl w-full">
                <div class="text-center mb-12">
                    <h1 class="text-4xl sm:text-5xl lg:text-6xl font-display font-extrabold mb-6 text-[#ffc300] drop-shadow-md leading-tight">
                        ${getTranslation('ranking', 'globalRankingTitle')}
                    </h1>
                    <p class="text-base sm:text-lg md:text-xl text-gray-300 mb-8">
                        Los mejores jugadores de Transcendence
                    </p>
                </div>

                ${currentUser && userStats ? `
                <!-- User's Position Highlight -->
                <div class="bg-gradient-to-r from-[#ffc300] to-[#ffd60a] rounded-3xl p-1 mb-8">
                    <div class="bg-[#000814] rounded-3xl p-6">
                        <h2 class="text-xl font-bold text-[#ffc300] mb-4 text-center">
                            ${getTranslation('ranking', 'yourCurrentPosition')}
                        </h2>
                        <div class="flex items-center justify-between bg-[#001d3d] rounded-xl p-4 border border-[#003566]">
                            <div class="flex items-center gap-4">
                                <div class="w-12 h-12 bg-gradient-to-r from-[#ffc300] to-[#ffd60a] rounded-full flex items-center justify-center text-[#000814] font-bold text-lg">
                                    #${userStats.ranking}
                                </div>
                                <div>
                                    <div class="font-bold text-lg">${currentUser.username}</div>
                                    <div class="text-sm text-gray-300">${getTranslation('ranking', 'wins')} ${userStats.wins} | ${getTranslation('ranking', 'losses')} ${userStats.losses}</div>
                                </div>
                            </div>
                            <div class="text-right">
                                <div class="text-2xl font-bold text-[#ffc300]">${userStats.elo.toLocaleString()}</div>
                                <div class="text-sm text-gray-300">${getTranslation('ranking', 'pointsAbbreviation')}</div>
                            </div>
                        </div>
                    </div>
                </div>
                ` : ''}

                <!-- Global Ranking Table -->
                <div class="bg-white bg-opacity-5 backdrop-filter backdrop-blur-xl rounded-3xl p-6 border border-[#003566] shadow-2xl">
                    <div class="space-y-3">
                        ${rankingData.length > 0 ? rankingData.map(player => {
                            const isCurrentUser = currentUser && player.username === currentUser.username;
                            const bgColor = isCurrentUser ? 'bg-gradient-to-r from-[#ffc300]/20 to-[#ffd60a]/20 border-[#ffc300]' : 'bg-[#001d3d] border-[#003566]';
                            const textColor = isCurrentUser ? 'text-[#ffc300]' : 'text-gray-100';
                            
                            return `
                                <div class="flex items-center justify-between p-4 ${bgColor} rounded-xl border hover:bg-opacity-70 transition-all duration-200">
                                    <div class="flex items-center gap-4">
                                        <div class="w-10 h-10 ${player.rank <= 3 ? getRankBadgeColor(player.rank) : 'bg-[#003566]'} rounded-full flex items-center justify-center font-bold text-sm">
                                            ${player.rank <= 3 ? getRankIcon(player.rank) : `#${player.rank}`}
                                        </div>
                                        <div>
                                            <div class="font-bold ${textColor}">${player.username}</div>
                                            <div class="text-sm text-gray-300">${getTranslation('ranking', 'wins')} ${player.wins} | ${getTranslation('ranking', 'losses')} ${player.losses}</div>
                                        </div>
                                    </div>
                                    <div class="text-right">
                                        <div class="text-xl font-bold ${isCurrentUser ? 'text-[#ffc300]' : 'text-[#ffd60a]'}">${player.points.toLocaleString()}</div>
                                        <div class="text-sm text-gray-300">${getTranslation('ranking', 'pointsAbbreviation')}</div>
                                    </div>
                                </div>
                            `;
                        }).join('') : `
                            <div class="text-center p-8 text-gray-400">
                                <div class="text-xl mb-2">🏆</div>
                                <div class="text-lg">No hay datos de ranking disponibles</div>
                                <div class="text-sm mt-2">¡Juega algunas partidas para aparecer en el ranking!</div>
                            </div>
                        `}
                    </div>
                </div>
            </div>
        </main>
        <style>
            .hover\\:bg-opacity-70:hover {
                background-opacity: 0.7;
            }
        </style>
    `;

    if (pageContent) {
        pageContent.innerHTML = rankingHtml;
    } else {
        console.error('Elemento con id "page-content" no encontrado para renderizar la página de ranking.');
    }
}
[1;30m----------------------------------------[0m

[1;34m=== ./frontend/src/pages/gameOnline.ts ===[0m
import { getCurrentUser } from '../auth';
import { navigateTo } from '../router';
import { PlayerDisplay, PlayerInfo } from '../components/playerDisplay';

export function renderGameOnline(): void {
  const content = document.getElementById('page-content');

  if (!content) {
    console.error('No se encontró el contenedor principal para renderizar el juego online.');
    return;
  }

  // Verificar si hay un gameId pendiente en sessionStorage
  const gameId = sessionStorage.getItem('pendingGameId');
  sessionStorage.removeItem('pendingGameId'); // Limpiar después de usar
  
  if (gameId && gameId.trim() !== '') {
    // Si hay gameId, ir directamente a la vista del juego
    console.log(`🎮 Conectando directamente al juego: ${gameId}`);
    showGameView(gameId);
    return;
  }

  content.innerHTML = `
    <div class="w-full max-w-4xl mx-auto p-8 text-center">
      <h1 class="text-4xl font-bold mb-8">Juego Online - Pong</h1>
      <p class="mb-6">Conéctate y juega contra otros jugadores en línea o enfréntate a la IA.</p>
      <div class="space-y-4">
          <button id="create-ai-game" class="w-full bg-green-500 text-white py-2 px-4 rounded-xl hover:bg-green-700 transition">
            Jugar contra la IA
          </button>
          <button id="join-online-game" class="w-full bg-yellow-500 text-white py-2 px-4 rounded-xl hover:bg-yellow-700 transition">
            Jugar Online
          </button>
      </div>
      <button id="back-to-play" class="mt-6 bg-gray-500 text-white font-semibold py-2 px-4 rounded">
        Volver a Selección
      </button>
    </div>
  `;

  document.getElementById('create-ai-game')?.addEventListener('click', () => navigateTo('/game-ai'));
  document.getElementById('join-online-game')?.addEventListener('click', () => navigateTo('/game-select'));
  document.getElementById('back-to-play')?.addEventListener('click', () => navigateTo('/play'));
}

function showGameView(gameId: string): void {
  const content = document.getElementById('page-content');
  if (!content) return;
  
  content.innerHTML = `
    <div class="w-full max-w-4xl mx-auto p-8">
      <h1 class="text-3xl font-bold text-center mb-6">🎮 Partida Online</h1>
      
      <!-- Player Info Section -->
      <div id="player-info" class="bg-gray-800 rounded-lg p-4 mb-6">
        <div id="player-cards" class="mb-4">
          <!-- Las tarjetas se generarán dinámicamente -->
        </div>
        <div id="player-role" class="text-center text-yellow-400 font-bold">
          🔄 Conectando y asignando rol...
        </div>
      </div>
      
      <div class="bg-black border-2 border-gray-400 rounded-lg p-4 mb-6">
        <canvas id="gameCanvas" width="600" height="400" class="w-full h-auto bg-black"></canvas>
      </div>
      
      <div class="text-center mb-4">
        <div id="score-container" class="grid grid-cols-2 gap-4 mb-4">
          <div class="text-left">
            <h3 class="text-xl font-bold text-yellow-400" id="score1-title">🟡 Conectando...</h3>
            <p class="text-2xl font-bold" id="score1">0</p>
          </div>
          <div class="text-right">
            <h3 class="text-xl font-bold text-blue-400" id="score2-title">🔵 Conectando...</h3>
            <p class="text-2xl font-bold" id="score2">0</p>
          </div>
        </div>
        
        <div id="game-status" class="mb-4">
          <p class="text-yellow-500">🔄 Conectando...</p>
        </div>
        
        <div class="space-x-4">
          <button id="leave-game" class="bg-red-500 text-white font-semibold py-2 px-4 rounded hover:bg-red-600">Salir del Juego</button>
        </div>
      </div>
      
      <div class="text-center">
        <button id="back-to-play" class="bg-blue-500 text-white font-semibold py-2 px-4 rounded hover:bg-blue-600">Volver a Selección</button>
      </div>
    </div>
  `;
  
  document.getElementById('leave-game')?.addEventListener('click', () => {
    navigateTo('/game-select');
  });
  
  document.getElementById('back-to-play')?.addEventListener('click', () => {
    navigateTo('/play');
  });
  
  connectToGame(gameId);
}

function connectToGame(gameId: string): void {
  const canvas = document.getElementById('gameCanvas') as HTMLCanvasElement;
  const ctx = canvas?.getContext('2d');
  const statusElement = document.getElementById('game-status');
  
  if (!canvas || !ctx) {
    console.error('Canvas no encontrado');
    return;
  }
  
  if (statusElement) {
    statusElement.innerHTML = '<p class="text-blue-500">🔗 Conectando al WebSocket...</p>';
  }
  
  // Construir URL WebSocket correcta
  const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';
  const currentUser = getCurrentUser();
  const currentUserName = currentUser?.username || "Usuario";
  const username = encodeURIComponent(currentUserName);
  const wsUrl = `${protocol}//${window.location.host}/pong/${gameId}?username=${username}`;
  
  console.log('🔗 Conectando al WebSocket:', wsUrl);
  const socket = new WebSocket(wsUrl);
  let playerNumber: number | null = null;
  let gameMode: string = 'pvp';
  let player1Info: PlayerInfo | null = null;
  let player2Info: PlayerInfo | null = null;

  socket.onopen = () => {
    console.log(`✅ Conectado a la partida ${gameId}`);
    if (statusElement) {
      statusElement.innerHTML = '<p class="text-green-500">✅ Conectado! Esperando asignación...</p>';
    }
  };

  function updatePlayersInfo(jugadoresInfo: any[]) {
    console.log('📋 Actualizando información de jugadores:', jugadoresInfo);
    
    // Detectar el modo de juego
    const currentUrl = window.location.pathname;
    if (currentUrl.includes('game-ai') || sessionStorage.getItem('gameType') === 'ai') {
      gameMode = 'pve';
    }
    
    // Crear información de jugadores con datos reales
    player1Info = {
      numero: 1,
      username: 'Esperando...',
      displayName: 'Esperando...',
      esIA: false,
      isCurrentUser: playerNumber === 1
    };
    
    player2Info = {
      numero: 2,
      username: gameMode === 'pve' ? 'IA' : 'Esperando...',
      displayName: gameMode === 'pve' ? 'IA' : 'Esperando...',
      esIA: gameMode === 'pve',
      isCurrentUser: playerNumber === 2
    };
    
    // Actualizar con información real de los jugadores
    jugadoresInfo.forEach((jugador: any) => {
      if (jugador.numero === 1) {
        player1Info = {
          numero: 1,
          username: jugador.username || jugador.displayName || 'Jugador 1',
          displayName: jugador.displayName || jugador.username || 'Jugador 1',
          esIA: jugador.esIA || false,
          isCurrentUser: playerNumber === 1
        };
      } else if (jugador.numero === 2) {
        player2Info = {
          numero: 2,
          username: jugador.username || jugador.displayName || (gameMode === 'pve' ? 'IA' : 'Jugador 2'),
          displayName: jugador.displayName || jugador.username || (gameMode === 'pve' ? 'IA' : 'Jugador 2'),
          esIA: jugador.esIA || (gameMode === 'pve'),
          isCurrentUser: playerNumber === 2
        };
      }
    });
    
    // Actualizar la visualización
    if (playerNumber !== null && player1Info && player2Info) {
      updatePlayerDisplay(player1Info, player2Info, playerNumber, gameMode);
    }
    
    // Actualizar el estado según la cantidad de jugadores
    if (statusElement) {
      const currentPlayerName = playerNumber === 1 ? player1Info?.displayName : player2Info?.displayName;
      const opponentName = playerNumber === 1 ? player2Info?.displayName : player1Info?.displayName;
      const side = playerNumber === 1 ? 'izquierda' : 'derecha';
      const sideColor = playerNumber === 1 ? 'amarilla' : 'azul';
      
      if (jugadoresInfo.length === 2) {
        statusElement.innerHTML = `
          <p class="text-green-500 text-lg font-bold">🎮 Eres <span class="text-yellow-300">${currentPlayerName}</span> vs <span class="text-blue-300">${opponentName}</span></p>
          <p class="text-blue-400">📍 Juegas en el lado <strong>${side}</strong> con la pala <strong>${sideColor}</strong></p>
          <p class="text-gray-300">🎯 Controles: <strong>W</strong> (arriba) y <strong>S</strong> (abajo)</p>
        `;
      } else {
        statusElement.innerHTML = `
          <p class="text-yellow-500">⏳ Esperando otro jugador...</p>
          <p class="text-blue-400">📍 Serás el jugador del lado <strong>${side}</strong> con la pala <strong>${sideColor}</strong></p>
        `;
      }
    }
  }

  socket.onmessage = (event) => {
    try {
      const data = JSON.parse(event.data);
      console.log('📡 Mensaje recibido:', data);
      
      if (data.tipo === 'bienvenida') {
        playerNumber = data.numero;
        console.log(`🎮 Soy el jugador ${playerNumber}`);
        
        // Actualizar información de jugadores
        const jugadoresInfo = data.jugadores || [];
        updatePlayersInfo(jugadoresInfo);
      }
      
      if (data.tipo === 'jugadores_actualizados') {
        console.log('🔄 Recibida actualización de jugadores');
        updatePlayersInfo(data.jugadores || []);
      }
      
      if (data.tipo === 'estado' && data.juego && ctx) {
        drawGame(ctx, data.juego);
        updateScore(data.juego);
      }
      
      if (data.tipo === 'estado_general') {
        if (statusElement) {
          if (gameMode === 'pve' && data.estado && data.estado.includes('esperando_jugador')) {
            statusElement.innerHTML = '<p class="text-green-500">🎮 ¡Listo para jugar contra la IA!</p>';
          } else if (data.estado && data.estado.includes('esperando_jugador')) {
            const side = playerNumber === 1 ? 'izquierda' : 'derecha';
            const sideColor = playerNumber === 1 ? 'amarilla' : 'azul';
            statusElement.innerHTML = `
              <p class="text-yellow-500">⏳ Esperando otro jugador...</p>
              <p class="text-blue-400">📍 Serás el jugador del lado <strong>${side}</strong> con la pala <strong>${sideColor}</strong></p>
            `;
          } else {
            statusElement.innerHTML = `<p class="text-yellow-500">⏳ ${data.estado}</p>`;
          }
        }
      }
      
      if (data.tipo === 'cuenta_atras') {
        if (statusElement) {
          const currentPlayerName = playerNumber === 1 ? player1Info?.displayName : player2Info?.displayName;
          const opponentName = playerNumber === 1 ? player2Info?.displayName : player1Info?.displayName;
          const side = playerNumber === 1 ? 'izquierda' : 'derecha';
          const sideColor = playerNumber === 1 ? 'amarilla' : 'azul';
          
          statusElement.innerHTML = `
            <p class="text-orange-500 text-xl font-bold">🔢 Iniciando en ${data.valor}...</p>
            <p class="text-green-500">🎮 <span class="text-yellow-300">${currentPlayerName}</span> vs <span class="text-blue-300">${opponentName}</span></p>
            <p class="text-blue-400">📍 Lado <strong>${side}</strong> - Pala <strong>${sideColor}</strong> - Controles: <strong>W/S</strong></p>
          `;
        }
      }
      
      if (data.tipo === 'juego_iniciado') {
        if (statusElement) {
          const currentPlayerName = playerNumber === 1 ? player1Info?.displayName : player2Info?.displayName;
          const opponentName = playerNumber === 1 ? player2Info?.displayName : player1Info?.displayName;
          const side = playerNumber === 1 ? 'izquierda' : 'derecha';
          const sideColor = playerNumber === 1 ? 'amarilla' : 'azul';
          
          statusElement.innerHTML = `
            <p class="text-green-500 text-lg font-bold">🎮 ¡Juego iniciado!</p>
            <p class="text-green-400"><span class="text-yellow-300">${currentPlayerName}</span> vs <span class="text-blue-300">${opponentName}</span></p>
            <p class="text-blue-400">📍 Lado <strong>${side}</strong> - Pala <strong>${sideColor}</strong> - Usa <strong>W/S</strong> para mover</p>
          `;
        }
      }
      
      if (data.tipo === 'juego_finalizado') {
        console.log('🏆 Juego finalizado recibido:', data);
        showWinnerModal(data.mensaje, data.juego, player1Info, player2Info);
        if (statusElement) {
          statusElement.innerHTML = `<p class="text-blue-500">🏆 ${data.mensaje}</p>`;
        }
      }
      
      if (data.tipo === 'jugador_desconectado') {
        console.log('❌ Jugador desconectado recibido:', data);
        showWinnerModal('¡Has ganado! Tu oponente se desconectó.', data.juego, player1Info, player2Info);
        if (statusElement) {
          statusElement.innerHTML = '<p class="text-red-500">❌ Oponente desconectado</p>';
        }
      }
    } catch (error) {
      console.error('Error procesando mensaje:', error);
    }
  };

  socket.onclose = () => {
    console.log('🔌 Desconectado del WebSocket');
    if (statusElement) {
      statusElement.innerHTML = '<p class="text-red-500">❌ Desconectado</p>';
    }
  };

  socket.onerror = (error) => {
    console.error('❌ Error en WebSocket:', error);
    if (statusElement) {
      statusElement.innerHTML = '<p class="text-red-500">❌ Error de conexión</p>';
    }
  };

  // Configurar controles del teclado
  document.addEventListener('keydown', (e) => {
    if (socket.readyState === WebSocket.OPEN) {
      if (e.key === 'w' || e.key === 'W') {
        socket.send(JSON.stringify({ tipo: 'mover', y: -5 }));
      } else if (e.key === 's' || e.key === 'S') {
        socket.send(JSON.stringify({ tipo: 'mover', y: 5 }));
      }
    }
  });

  // Dibujar canvas inicial
  drawInitialCanvas(ctx);
}

function updatePlayerDisplay(player1: PlayerInfo, player2: PlayerInfo, playerNumber: number, gameMode: string): void {
  const playerCardsContainer = document.getElementById('player-cards');
  const playerRoleElement = document.getElementById('player-role');
  const score1TitleElement = document.getElementById('score1-title');
  const score2TitleElement = document.getElementById('score2-title');
  
  if (playerCardsContainer) {
    const playerCardsHtml = PlayerDisplay.generatePlayerCards(player1, player2, 'online');
    playerCardsContainer.innerHTML = playerCardsHtml;
  }
  
  if (playerRoleElement) {
    const currentPlayer = playerNumber === 1 ? player1 : player2;
    const opponent = playerNumber === 1 ? player2 : player1;
    const playerRoleHtml = PlayerDisplay.generatePlayerRoleInfo(currentPlayer, opponent, 'online');
    playerRoleElement.innerHTML = playerRoleHtml;
  }
  
  if (score1TitleElement && score2TitleElement) {
    const scoreTitles = PlayerDisplay.generateScoreTitles(player1, player2, playerNumber);
    score1TitleElement.innerHTML = scoreTitles.player1Title;
    score2TitleElement.innerHTML = scoreTitles.player2Title;
  }
}

function drawInitialCanvas(ctx: CanvasRenderingContext2D): void {
  ctx.fillStyle = 'black';
  ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);
  
  ctx.strokeStyle = 'white';
  ctx.setLineDash([5, 5]);
  ctx.beginPath();
  ctx.moveTo(ctx.canvas.width / 2, 0);
  ctx.lineTo(ctx.canvas.width / 2, ctx.canvas.height);
  ctx.stroke();
  
  ctx.fillStyle = 'white';
  ctx.font = '24px Arial';
  ctx.textAlign = 'center';
  ctx.fillText('Esperando jugadores...', ctx.canvas.width / 2, ctx.canvas.height / 2);
}

function drawGame(ctx: CanvasRenderingContext2D, gameData: any): void {
  ctx.fillStyle = 'black';
  ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);
  
  ctx.strokeStyle = 'white';
  ctx.setLineDash([5, 5]);
  ctx.beginPath();
  ctx.moveTo(ctx.canvas.width / 2, 0);
  ctx.lineTo(ctx.canvas.width / 2, ctx.canvas.height);
  ctx.stroke();
  
  ctx.fillStyle = 'white';
  ctx.setLineDash([]);
  
  ctx.fillRect(
    gameData.palas.jugador1.x,
    gameData.palas.jugador1.y,
    gameData.palaAncho,
    gameData.palaAlto
  );
  
  ctx.fillRect(
    gameData.palas.jugador2.x,
    gameData.palas.jugador2.y,
    gameData.palaAncho,
    gameData.palaAlto
  );
  
  ctx.beginPath();
  ctx.arc(gameData.pelota.x, gameData.pelota.y, gameData.pelota.radio, 0, 2 * Math.PI);
  ctx.fill();
}

function updateScore(gameData: any): void {
  const score1Element = document.getElementById('score1');
  const score2Element = document.getElementById('score2');
  
  if (score1Element) {
    score1Element.textContent = gameData.puntuacion.jugador1.toString();
  }
  if (score2Element) {
    score2Element.textContent = gameData.puntuacion.jugador2.toString();
  }
}

function showWinnerModal(message: string, gameData: any, player1Info: PlayerInfo | null, player2Info: PlayerInfo | null): void {
  const modal = document.createElement('div');
  modal.className = 'fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50';
  
  const player1Name = player1Info?.displayName || 'Jugador 1';
  const player2Name = player2Info?.displayName || 'Jugador 2';
  
  // Asegurar que gameData tenga puntuaciones válidas
  const puntuacion1 = gameData?.puntuacion?.jugador1 || 0;
  const puntuacion2 = gameData?.puntuacion?.jugador2 || 0;
  
  console.log('📊 Datos del juego final:', gameData);
  console.log('🏆 Puntuaciones:', { jugador1: puntuacion1, jugador2: puntuacion2 });
  
  modal.innerHTML = `
    u003cdiv class="bg-white rounded-lg p-8 max-w-md w-full mx-4"u003e
      u003ch2 class="text-2xl font-bold mb-4 text-center text-gray-800"u003e🏆 Juego Terminadou003c/h2u003e
      u003cp class="text-center mb-6 text-gray-600"u003e${message}u003c/pu003e
      u003cdiv class="text-center mb-6"u003e
        u003cp class="text-lg font-semibold mb-2 text-gray-800"u003ePuntuación Final:u003c/pu003e
        u003cdiv class="bg-gray-100 rounded-lg p-4"u003e
          u003cp class="text-xl font-bold text-yellow-600 mb-2"u003e
            🟡 ${player1Name}: ${puntuacion1}
          u003c/pu003e
          u003cp class="text-xl font-bold text-blue-600"u003e
            🔵 ${player2Name}: ${puntuacion2}
          u003c/pu003e
        u003c/divu003e
      u003c/divu003e
      u003cdiv class="flex justify-center space-x-4"u003e
        u003cbutton id="play-again" class="bg-green-500 text-white px-6 py-2 rounded-lg hover:bg-green-600 transition-colors"u003e
          Jugar de Nuevo
        u003c/buttonu003e
        u003cbutton id="back-to-lobby" class="bg-blue-500 text-white px-6 py-2 rounded-lg hover:bg-blue-600 transition-colors"u003e
          Volver al Lobby
        u003c/buttonu003e
      u003c/divu003e
    u003c/divu003e
  `;
  
  document.body.appendChild(modal);
  
  document.getElementById('play-again')?.addEventListener('click', () => {
    document.body.removeChild(modal);
    navigateTo('/game-online');
  });
  
  document.getElementById('back-to-lobby')?.addEventListener('click', () => {
    document.body.removeChild(modal);
    navigateTo('/play');
  });
}
[1;30m----------------------------------------[0m

[1;34m=== ./frontend/src/pages/settings.ts ===[0m
// src/pages/settings.ts

import { navigateTo } from '../router';
import { getTranslation } from '../i18n';
import { getCurrentUser, getSetting, setSetting } from '../auth';

interface UserSettings {
    language: string;
    notifications: string;
    sound_effects: string;
    game_difficulty: string;
}

// Función para obtener configuraciones del usuario
async function getUserSettings(): Promise<UserSettings | null> {
    const token = localStorage.getItem('jwt');
    if (!token) return null;

    try {
        const response = await fetch('/api/auth/settings', {
            method: 'GET',
            headers: {
                'Authorization': `Bearer ${token}`,
                'Content-Type': 'application/json'
            }
        });

        if (!response.ok) {
            console.error('Error al obtener configuraciones:', response.status);
            return null;
        }

        return await response.json();
    } catch (error) {
        console.error('Error en la petición de configuraciones:', error);
        return null;
    }
}

// Función para actualizar configuraciones del usuario
async function updateUserSettings(settings: UserSettings): Promise<boolean> {
    const token = localStorage.getItem('jwt');
    if (!token) return false;

    try {
        const response = await fetch('/api/auth/settings', {
            method: 'PUT',
            headers: {
                'Authorization': `Bearer ${token}`,
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(settings)
        });

        if (!response.ok) {
            console.error('Error al actualizar configuraciones:', response.status);
            return false;
        }

        return true;
    } catch (error) {
        console.error('Error en la petición de actualización:', error);
        return false;
    }
}

// Función para actualizar perfil del usuario
async function updateUserProfile(profileData: any): Promise<{ success: boolean; message: string; user?: any }> {
    const token = localStorage.getItem('jwt');
    if (!token) return { success: false, message: 'No autenticado' };

    try {
        const response = await fetch('/api/auth/profile', {
            method: 'PUT',
            headers: {
                'Authorization': `Bearer ${token}`,
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(profileData)
        });

        const result = await response.json();
        
        if (!response.ok) {
            return { success: false, message: result.message || 'Error al actualizar perfil' };
        }

        return { success: true, message: result.message, user: result.user };
    } catch (error) {
        console.error('Error en la petición de actualización de perfil:', error);
        return { success: false, message: 'Error de conexión' };
    }
}

// Función para eliminar cuenta
async function deleteUserAccount(password: string): Promise<{ success: boolean; message: string }> {
    const token = localStorage.getItem('jwt');
    if (!token) return { success: false, message: 'No autenticado' };

    try {
        const response = await fetch('/api/auth/profile', {
            method: 'DELETE',
            headers: {
                'Authorization': `Bearer ${token}`,
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ password })
        });

        const result = await response.json();
        
        if (!response.ok) {
            return { success: false, message: result.message || 'Error al eliminar cuenta' };
        }

        return { success: true, message: result.message };
    } catch (error) {
        console.error('Error en la petición de eliminación de cuenta:', error);
        return { success: false, message: 'Error de conexión' };
    }
}

export async function renderSettingsPage(): Promise<void> {
    const user = getCurrentUser();
    
    if (!user) {
        navigateTo('/login');
        return;
    }

    // Mostrar loading inicial
    const pageContent = document.getElementById('page-content') as HTMLElement;
    if (pageContent) {
        pageContent.innerHTML = `
            <main class="flex-grow w-full p-4 sm:p-8 flex flex-col items-center gap-8 text-gray-100">
                <div class="max-w-6xl w-full">
                    <div class="text-center mb-12">
                        <h1 class="text-4xl sm:text-5xl lg:text-6xl font-display font-extrabold mb-6 text-[#ffc300] drop-shadow-md leading-tight">
                            ⚙️ Configuración
                        </h1>
                        <p class="text-base sm:text-lg md:text-xl text-gray-300 mb-8">
                            Cargando configuraciones...
                        </p>
                    </div>
                </div>
            </main>
        `;
    }

    // Obtener configuraciones del usuario
    const userSettings = await getUserSettings();
    const defaultSettings: UserSettings = {
        language: 'es',
        notifications: 'true',
        sound_effects: 'true',
        game_difficulty: 'normal'
    };

    const settings = userSettings || defaultSettings;
    
    const settingsHtml = `
        <main class="flex-grow w-full p-4 sm:p-8 flex flex-col items-center gap-8 text-gray-100">
            <div class="max-w-6xl w-full">
                <!-- Header -->
                <div class="text-center mb-12">
                    <h1 class="text-4xl sm:text-5xl lg:text-6xl font-display font-extrabold mb-6 text-[#ffc300] drop-shadow-md leading-tight">
                        ⚙️ Configuración
                    </h1>
                    <p class="text-base sm:text-lg md:text-xl text-gray-300 mb-8">
                        Personaliza tu experiencia de juego y gestiona tu cuenta
                    </p>
                </div>

                <!-- Settings Grid -->
                <div class="grid grid-cols-1 xl:grid-cols-2 gap-8">
                    <!-- Account Settings -->
                    <div class="bg-white bg-opacity-5 backdrop-filter backdrop-blur-xl rounded-3xl p-8 border border-[#003566] shadow-2xl">
                        <div class="flex items-center gap-4 mb-8">
                            <div class="w-16 h-16 bg-gradient-to-r from-[#ffc300] to-[#ffd60a] rounded-full flex items-center justify-center">
                                <span class="text-2xl">👤</span>
                            </div>
                            <div>
                                <h2 class="text-2xl font-display font-bold text-[#ffc300]">
                                    Cuenta de Usuario
                                </h2>
                                <p class="text-gray-300">Gestiona tu información personal</p>
                            </div>
                        </div>
                        
                        <form id="profile-form" class="space-y-6">
                            <div class="space-y-2">
                                <label class="block text-sm font-medium text-gray-300">
                                    📝 Nombre de usuario
                                </label>
                                <input type="text" id="username" value="${user.username}" 
                                       class="w-full px-4 py-3 bg-[#001d3d] border border-[#003566] rounded-xl text-gray-100 focus:outline-none focus:border-[#ffc300] focus:ring-2 focus:ring-[#ffc300] focus:ring-opacity-50 transition-all duration-200 placeholder-gray-400"
                                       placeholder="Tu nombre de usuario">
                            </div>
                            
                            <div class="space-y-2">
                                <label class="block text-sm font-medium text-gray-300">
                                    📧 Dirección de correo electrónico
                                </label>
                                <input type="email" id="email" value="${user.email}" 
                                       class="w-full px-4 py-3 bg-[#001d3d] border border-[#003566] rounded-xl text-gray-100 focus:outline-none focus:border-[#ffc300] focus:ring-2 focus:ring-[#ffc300] focus:ring-opacity-50 transition-all duration-200 placeholder-gray-400"
                                       placeholder="tu@ejemplo.com">
                            </div>
                            
                            <div class="border-t border-[#003566] pt-6">
                                <h3 class="text-lg font-semibold text-[#ffc300] mb-4">🔒 Cambiar Contraseña</h3>
                                
                                <div class="space-y-4">
                                    <div class="space-y-2">
                                        <label class="block text-sm font-medium text-gray-300">
                                            Contraseña actual
                                        </label>
                                        <input type="password" id="current-password" 
                                               class="w-full px-4 py-3 bg-[#001d3d] border border-[#003566] rounded-xl text-gray-100 focus:outline-none focus:border-[#ffc300] focus:ring-2 focus:ring-[#ffc300] focus:ring-opacity-50 transition-all duration-200 placeholder-gray-400"
                                               placeholder="Ingresa tu contraseña actual">
                                    </div>
                                    
                                    <div class="space-y-2">
                                        <label class="block text-sm font-medium text-gray-300">
                                            Nueva contraseña
                                        </label>
                                        <input type="password" id="new-password" 
                                               class="w-full px-4 py-3 bg-[#001d3d] border border-[#003566] rounded-xl text-gray-100 focus:outline-none focus:border-[#ffc300] focus:ring-2 focus:ring-[#ffc300] focus:ring-opacity-50 transition-all duration-200 placeholder-gray-400"
                                               placeholder="Ingresa tu nueva contraseña">
                                    </div>
                                </div>
                            </div>
                        </form>
                        
                        <div class="flex flex-col sm:flex-row gap-4 mt-8">
                            <button id="save-profile-btn" class="flex-1 py-3 px-6 bg-gradient-to-r from-[#ffc300] to-[#ffd60a] text-[#000814] font-bold rounded-xl hover:from-[#ffd60a] hover:to-[#ffc300] transition-all duration-300 transform hover:scale-105 active:scale-95 shadow-lg">
                                💾 Guardar Cambios
                            </button>
                            <button id="delete-account-btn" class="px-6 py-3 border-2 border-red-500 text-red-400 font-semibold rounded-xl hover:bg-red-500 hover:text-white transition-all duration-300 transform hover:scale-105 active:scale-95">
                                🗑️ Eliminar Cuenta
                            </button>
                        </div>
                    </div>

                    <!-- Game Settings -->
                    <div class="bg-white bg-opacity-5 backdrop-filter backdrop-blur-xl rounded-3xl p-8 border border-[#003566] shadow-2xl">
                        <div class="flex items-center gap-4 mb-8">
                            <div class="w-16 h-16 bg-gradient-to-r from-[#003566] to-[#001d3d] rounded-full flex items-center justify-center border-2 border-[#ffc300]">
                                <span class="text-2xl">🎮</span>
                            </div>
                            <div>
                                <h2 class="text-2xl font-display font-bold text-[#ffc300]">
                                    Configuración del Juego
                                </h2>
                                <p class="text-gray-300">Personaliza tu experiencia de juego</p>
                            </div>
                        </div>
                        
                        <form id="game-settings-form" class="space-y-6">
                            <!-- Language Setting -->
                            <div class="p-6 bg-[#001d3d] rounded-xl border border-[#003566] hover:border-[#ffc300] transition-all duration-300">
                                <div class="flex items-center justify-between">
                                    <div class="flex items-center gap-4">
                                        <div class="w-12 h-12 bg-gradient-to-r from-[#ffc300] to-[#ffd60a] rounded-lg flex items-center justify-center">
                                            <span class="text-lg">🌐</span>
                                        </div>
                                        <div>
                                            <div class="font-semibold text-gray-100">Idioma de la Interfaz</div>
                                            <div class="text-sm text-gray-400">Selecciona tu idioma preferido</div>
                                        </div>
                                    </div>
                                    <select id="language" class="bg-[#003566] text-gray-100 px-4 py-2 rounded-lg border border-[#ffc300] focus:outline-none focus:ring-2 focus:ring-[#ffc300] focus:ring-opacity-50 transition-all duration-200">
                                        <option value="es" ${settings.language === 'es' ? 'selected' : ''}>🇪🇸 Español</option>
                                        <option value="en" ${settings.language === 'en' ? 'selected' : ''}>🇺🇸 English</option>
                                        <option value="gl" ${settings.language === 'gl' ? 'selected' : ''}>🏴󠁥󠁳󠁧󠁡󠁿 Galego</option>
                                        <option value="zh" ${settings.language === 'zh' ? 'selected' : ''}>🇨🇳 中文</option>
                                    </select>
                                </div>
                            </div>
                            
                            <!-- Notifications -->
                            <div class="p-6 bg-[#001d3d] rounded-xl border border-[#003566] hover:border-[#ffc300] transition-all duration-300">
                                <div class="flex items-center justify-between">
                                    <div class="flex items-center gap-4">
                                        <div class="w-12 h-12 bg-gradient-to-r from-[#ffc300] to-[#ffd60a] rounded-lg flex items-center justify-center">
                                            <span class="text-lg">🔔</span>
                                        </div>
                                        <div>
                                            <div class="font-semibold text-gray-100">Notificaciones</div>
                                            <div class="text-sm text-gray-400">Recibir notificaciones de partidas</div>
                                        </div>
                                    </div>
                                    <label class="relative inline-flex items-center cursor-pointer">
                                        <input type="checkbox" id="notifications" ${settings.notifications === 'true' ? 'checked' : ''} class="sr-only peer">
                                        <div class="w-14 h-8 bg-gray-600 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-[#ffc300] peer-focus:ring-opacity-50 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:rounded-full after:h-7 after:w-7 after:transition-all peer-checked:bg-[#ffc300] shadow-lg"></div>
                                    </label>
                                </div>
                            </div>
                            
                            <!-- Sound Effects -->
                            <div class="p-6 bg-[#001d3d] rounded-xl border border-[#003566] hover:border-[#ffc300] transition-all duration-300">
                                <div class="flex items-center justify-between">
                                    <div class="flex items-center gap-4">
                                        <div class="w-12 h-12 bg-gradient-to-r from-[#ffc300] to-[#ffd60a] rounded-lg flex items-center justify-center">
                                            <span class="text-lg">🔊</span>
                                        </div>
                                        <div>
                                            <div class="font-semibold text-gray-100">Efectos de Sonido</div>
                                            <div class="text-sm text-gray-400">Activar sonidos del juego</div>
                                        </div>
                                    </div>
                                    <label class="relative inline-flex items-center cursor-pointer">
                                        <input type="checkbox" id="sound-effects" ${settings.sound_effects === 'true' ? 'checked' : ''} class="sr-only peer">
                                        <div class="w-14 h-8 bg-gray-600 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-[#ffc300] peer-focus:ring-opacity-50 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:rounded-full after:h-7 after:w-7 after:transition-all peer-checked:bg-[#ffc300] shadow-lg"></div>
                                    </label>
                                </div>
                            </div>
                            
                            <!-- Game Difficulty -->
                            <div class="p-6 bg-[#001d3d] rounded-xl border border-[#003566] hover:border-[#ffc300] transition-all duration-300">
                                <div class="flex items-center justify-between">
                                    <div class="flex items-center gap-4">
                                        <div class="w-12 h-12 bg-gradient-to-r from-[#ffc300] to-[#ffd60a] rounded-lg flex items-center justify-center">
                                            <span class="text-lg">🎯</span>
                                        </div>
                                        <div>
                                            <div class="font-semibold text-gray-100">Dificultad por Defecto</div>
                                            <div class="text-sm text-gray-400">Nivel predeterminado contra IA</div>
                                        </div>
                                    </div>
                                    <select id="game-difficulty" class="bg-[#003566] text-gray-100 px-4 py-2 rounded-lg border border-[#ffc300] focus:outline-none focus:ring-2 focus:ring-[#ffc300] focus:ring-opacity-50 transition-all duration-200">
                                        <option value="easy" ${settings.game_difficulty === 'easy' ? 'selected' : ''}>🟢 Fácil</option>
                                        <option value="normal" ${settings.game_difficulty === 'normal' ? 'selected' : ''}>🟡 Normal</option>
                                        <option value="hard" ${settings.game_difficulty === 'hard' ? 'selected' : ''}>🔴 Difícil</option>
                                    </select>
                                </div>
                            </div>
                        </form>
                        
                        <button id="save-game-settings-btn" class="w-full mt-8 py-3 px-6 bg-gradient-to-r from-[#003566] to-[#001d3d] text-[#ffc300] font-bold rounded-xl border-2 border-[#ffc300] hover:bg-[#ffc300] hover:text-[#000814] transition-all duration-300 transform hover:scale-105 active:scale-95 shadow-lg">
                            🎮 Guardar Configuración del Juego
                        </button>
                    </div>
                </div>

                <!-- Additional Info Section -->
                <div class="mt-12 bg-white bg-opacity-5 backdrop-filter backdrop-blur-xl rounded-3xl p-8 border border-[#003566] shadow-2xl">
                    <div class="text-center">
                        <h3 class="text-2xl font-display font-bold text-[#ffc300] mb-4">
                            ℹ️ Información Adicional
                        </h3>
                        <div class="grid grid-cols-1 md:grid-cols-3 gap-6 text-gray-300">
                            <div class="p-4 bg-[#001d3d] rounded-xl border border-[#003566]">
                                <div class="text-2xl mb-2">🎲</div>
                                <div class="font-semibold">Partidas Jugadas</div>
                                <div class="text-sm text-gray-400">Visualiza tus estadísticas en tu perfil</div>
                            </div>
                            <div class="p-4 bg-[#001d3d] rounded-xl border border-[#003566]">
                                <div class="text-2xl mb-2">🏆</div>
                                <div class="font-semibold">Ranking Global</div>
                                <div class="text-sm text-gray-400">Compite por el primer lugar</div>
                            </div>
                            <div class="p-4 bg-[#001d3d] rounded-xl border border-[#003566]">
                                <div class="text-2xl mb-2">🔒</div>
                                <div class="font-semibold">Seguridad</div>
                                <div class="text-sm text-gray-400">Tus datos están protegidos</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </main>
    `;

    if (pageContent) {
        pageContent.innerHTML = settingsHtml;
        setupEventListeners();
    } else {
        console.error('Elemento con id "page-content" no encontrado para renderizar la página de configuración.');
    }
}

function setupEventListeners(): void {
    // Botón para guardar perfil
    const saveProfileBtn = document.getElementById('save-profile-btn') as HTMLButtonElement;
    saveProfileBtn?.addEventListener('click', async (event) => {
        event.preventDefault();
        
        const username = (document.getElementById('username') as HTMLInputElement).value;
        const email = (document.getElementById('email') as HTMLInputElement).value;
        const currentPassword = (document.getElementById('current-password') as HTMLInputElement).value;
        const newPassword = (document.getElementById('new-password') as HTMLInputElement).value;

        const profileData: any = { username, email };
        
        if (currentPassword && newPassword) {
            profileData.currentPassword = currentPassword;
            profileData.newPassword = newPassword;
        }

        saveProfileBtn.disabled = true;
        saveProfileBtn.innerHTML = '⏳ Guardando...';

        const result = await updateUserProfile(profileData);
        
        if (result.success) {
            alert('✅ Perfil actualizado exitosamente');
            // Limpiar campos de contraseña
            (document.getElementById('current-password') as HTMLInputElement).value = '';
            (document.getElementById('new-password') as HTMLInputElement).value = '';
        } else {
            alert(`❌ Error: ${result.message}`);
        }

        saveProfileBtn.disabled = false;
        saveProfileBtn.innerHTML = '💾 Guardar Cambios';
    });

    // Botón para eliminar cuenta
    const deleteAccountBtn = document.getElementById('delete-account-btn') as HTMLButtonElement;
    deleteAccountBtn?.addEventListener('click', async (event) => {
        event.preventDefault();
        
        const password = prompt('🔒 Ingresa tu contraseña para confirmar la eliminación de tu cuenta:');
        
        if (!password) return;
        
        if (confirm('⚠️ ¿Estás seguro de que quieres eliminar tu cuenta? Esta acción no se puede deshacer.')) {
            deleteAccountBtn.disabled = true;
            deleteAccountBtn.innerHTML = '⏳ Eliminando...';

            const result = await deleteUserAccount(password);
            
            if (result.success) {
                alert('✅ Cuenta eliminada exitosamente');
                localStorage.removeItem('jwt');
                navigateTo('/login');
            } else {
                alert(`❌ Error: ${result.message}`);
                deleteAccountBtn.disabled = false;
                deleteAccountBtn.innerHTML = '🗑️ Eliminar Cuenta';
            }
        }
    });

    // Botón para guardar configuraciones del juego
    const saveGameSettingsBtn = document.getElementById('save-game-settings-btn') as HTMLButtonElement;
    saveGameSettingsBtn?.addEventListener('click', async (event) => {
        event.preventDefault();
        
        const language = (document.getElementById('language') as HTMLSelectElement).value;
        const notifications = (document.getElementById('notifications') as HTMLInputElement).checked ? 'true' : 'false';
        const soundEffects = (document.getElementById('sound-effects') as HTMLInputElement).checked ? 'true' : 'false';
        const gameDifficulty = (document.getElementById('game-difficulty') as HTMLSelectElement).value;

        const gameSettings: UserSettings = {
            language,
            notifications,
            sound_effects: soundEffects,
            game_difficulty: gameDifficulty
        };

        saveGameSettingsBtn.disabled = true;
        saveGameSettingsBtn.innerHTML = '⏳ Guardando...';

        const success = await updateUserSettings(gameSettings);
        
        if (success) {
            alert('✅ Configuraciones del juego guardadas exitosamente');
            
            // Aplicar configuraciones localmente
            setSetting('language', language);
            setSetting('notifications', notifications);
            setSetting('sound_effects', soundEffects);
            setSetting('game_difficulty', gameDifficulty);
            
            // Cambiar idioma si es necesario
            if (language) {
                localStorage.setItem('language', language);
                window.dispatchEvent(new CustomEvent('languageChanged', { detail: language }));
            }
            
        } else {
            alert('❌ Error al guardar las configuraciones del juego');
        }

        saveGameSettingsBtn.disabled = false;
        saveGameSettingsBtn.innerHTML = '🎮 Guardar Configuración del Juego';
    });
}
[1;30m----------------------------------------[0m

[1;34m=== ./frontend/src/pages/gameSelector.ts ===[0m
import { navigateTo } from '../router';

export function renderGameSelector(): void {
  const content = document.getElementById('page-content');

  if (!content) {
    console.error('No se encontró el contenedor principal para renderizar el selector de partidas.');
    return;
  }

  content.innerHTML = `
    <div class="w-full max-w-4xl mx-auto p-8">
      <h1 class="text-4xl font-bold mb-8 text-center">🎮 Seleccionar Partida</h1>
      
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
        <!-- Lista de partidas disponibles -->
        <div class="bg-gray-800 rounded-lg p-6">
          <h2 class="text-2xl font-bold mb-4 text-center">Partidas Disponibles</h2>
          <div id="games-list" class="space-y-2 mb-4">
            <p class="text-center text-gray-400">🔄 Cargando partidas...</p>
          </div>
          <button id="refresh-games" class="w-full bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600 transition">
            🔄 Actualizar Lista
          </button>
        </div>
        
        <!-- Unirse por ID -->
        <div class="bg-gray-800 rounded-lg p-6">
          <h2 class="text-2xl font-bold mb-4 text-center">Unirse por ID</h2>
          <div class="space-y-4">
            <div>
              <label for="game-id-input" class="block text-sm font-medium mb-2">ID de la Partida:</label>
              <input 
                id="game-id-input" 
                type="text" 
                placeholder="Ingresa el ID de la partida"
                class="w-full px-3 py-2 bg-gray-700 text-white rounded border border-gray-600 focus:border-blue-500 focus:outline-none"
              >
            </div>
            <button id="join-by-id" class="w-full bg-green-500 text-white py-2 px-4 rounded hover:bg-green-600 transition">
              🔗 Unirse a la Partida
            </button>
          </div>
        </div>
      </div>
      
      <div class="text-center mt-8">
        <button id="back-to-online" class="bg-gray-500 text-white font-semibold py-2 px-4 rounded hover:bg-gray-600 transition">
          ← Volver al Menú Online
        </button>
      </div>
    </div>
  `;

  // Event listeners
  document.getElementById('refresh-games')?.addEventListener('click', loadAvailableGames);
  document.getElementById('join-by-id')?.addEventListener('click', joinGameById);
  document.getElementById('back-to-online')?.addEventListener('click', () => navigateTo('/game-online'));
  
  // Enter key en el input para unirse
  document.getElementById('game-id-input')?.addEventListener('keypress', (e) => {
    if (e.key === 'Enter') {
      joinGameById();
    }
  });

  // Cargar partidas al renderizar
  loadAvailableGames();
  
  // Auto-actualizar cada 5 segundos
  const autoRefresh = setInterval(loadAvailableGames, 5000);
  
  // Limpiar intervalo cuando se cambie de página
  window.addEventListener('beforeunload', () => clearInterval(autoRefresh));
}

async function loadAvailableGames(): Promise<void> {
  const gamesList = document.getElementById('games-list');
  if (!gamesList) return;

  try {
    gamesList.innerHTML = '<p class="text-center text-gray-400">🔄 Cargando partidas...</p>';
    
    const response = await fetch('/api/games');
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    
    const data = await response.json();
    const availableGames = data.games.filter((g: any) => g.jugadoresConectados < g.capacidadMaxima);
    
    if (availableGames.length === 0) {
      gamesList.innerHTML = `
        <div class="text-center py-8">
          <p class="text-gray-400 mb-2">😔 No hay partidas disponibles</p>
          <p class="text-sm text-gray-500">Crea una nueva partida para comenzar</p>
        </div>
      `;
      return;
    }
    
    gamesList.innerHTML = availableGames.map((game: any) => `
      <div class="bg-gray-700 rounded-lg p-4 hover:bg-gray-600 transition">
        <div class="flex justify-between items-center">
          <div>
            <h3 class="font-bold text-lg">${game.nombre}</h3>
            <p class="text-sm text-gray-300">ID: ${game.id}</p>
            <p class="text-sm text-gray-300">
              Jugadores: ${game.jugadoresConectados}/${game.capacidadMaxima}
            </p>
            <p class="text-sm text-gray-300">
              Modo: ${game.gameMode === 'pve' ? '🤖 vs IA' : '👥 Multijugador'}
            </p>
            <p class="text-sm text-gray-300">
              Estado: ${game.enJuego ? '🎮 En Juego' : '⏳ Esperando'}
            </p>
          </div>
          <button 
            onclick="joinGame('${game.id}')" 
            class="bg-yellow-500 text-white px-4 py-2 rounded hover:bg-yellow-600 transition"
          >
            🔗 Unirse
          </button>
        </div>
      </div>
    `).join('');
    
    // Agregar función global para unirse
    (window as any).joinGame = (gameId: string) => {
      console.log('🔗 Uniéndose a partida:', gameId);
      navigateTo(`/game-online?gameId=${gameId}`);
    };
    
  } catch (error) {
    console.error('❌ Error cargando partidas:', error);
    gamesList.innerHTML = `
      <div class="text-center py-8">
        <p class="text-red-400 mb-2">❌ Error cargando partidas</p>
        <p class="text-sm text-gray-500">${error instanceof Error ? error.message : 'Error desconocido'}</p>
      </div>
    `;
  }
}

async function joinGameById(): Promise<void> {
  const input = document.getElementById('game-id-input') as HTMLInputElement;
  const gameId = input?.value.trim();
  
  if (!gameId) {
    alert('❌ Por favor ingresa un ID de partida válido');
    return;
  }
  
  try {
    // Verificar que la partida existe
    const response = await fetch(`/api/games/${gameId}`);
    if (!response.ok) {
      if (response.status === 404) {
        alert('❌ No se encontró una partida con ese ID');
        return;
      }
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    
    const game = await response.json();
    
    if (game.jugadoresConectados >= game.capacidadMaxima) {
      alert('❌ La partida está llena');
      return;
    }
    
    console.log('🔗 Uniéndose a partida por ID:', gameId);
    navigateTo(`/game-online?gameId=${gameId}`);
    
  } catch (error) {
    console.error('❌ Error verificando partida:', error);
    alert(`❌ Error: ${error instanceof Error ? error.message : 'Error desconocido'}`);
  }
}
[1;30m----------------------------------------[0m

[1;34m=== ./frontend/src/pages/profile.ts ===[0m
// src/pages/profile.ts

import { navigateTo } from '../router';
import { getTranslation } from '../i18n';
import { getCurrentUser } from '../auth';

interface User {
  id: number;
  username: string;
  email: string;
  avatar_url?: string;
}

interface UserStats {
  totalGames: number;
  wins: number;
  losses: number;
  winRate: number;
  elo: number;
  ranking: number;
  matchHistory: Array<{
    id: number;
    result: 'win' | 'loss';
    opponent: string;
    score: string;
    date: string;
  }>;
}

async function getUserStats(): Promise<UserStats | null> {
  const token = localStorage.getItem('jwt');
  if (!token) return null;

  try {
    const response = await fetch('http://localhost:9000/api/auth/profile/stats', {
      method: 'GET',
      headers: {
        'Authorization': `Bearer ${token}`,
        'Content-Type': 'application/json'
      }
    });

    if (!response.ok) return null;
    return await response.json();
  } catch {
    return null;
  }
}

export async function renderProfilePage(): Promise<void> {
  const maybeUser = getCurrentUser();
  if (!maybeUser) {
    navigateTo('/login');
    return;
  }
  const user: User = maybeUser;
  if (!user) {
    navigateTo('/login');
    return;
  }

  const pageContent = document.getElementById('page-content') as HTMLElement;
  if (pageContent) {
    pageContent.innerHTML = `
      <main class="flex-grow w-full p-4 sm:p-8 flex flex-col items-center gap-8 text-gray-100">
        <div class="max-w-6xl w-full">
          <div class="bg-white bg-opacity-5 backdrop-filter backdrop-blur-xl rounded-3xl p-6 sm:p-8 border border-[#003566] shadow-2xl mb-8">
            <div class="flex items-center justify-center">
              <div class="text-[#ffc300] text-xl">Cargando estadísticas...</div>
            </div>
          </div>
        </div>
      </main>
    `;
  }

  const stats = await getUserStats();
  const defaultStats: UserStats = {
    totalGames: 0, wins: 0, losses: 0, winRate: 0, elo: 1000, ranking: 999, matchHistory: []
  };
  const userStats = stats || defaultStats;

  const profileHtml = `
    <main class="flex-grow w-full p-4 sm:p-8 flex flex-col items-center gap-8 text-gray-100">
      <div class="max-w-6xl w-full">
        <div class="bg-white bg-opacity-5 backdrop-filter backdrop-blur-xl rounded-3xl p-6 sm:p-8 border border-[#003566] shadow-2xl mb-8">
          <div class="flex flex-col lg:flex-row items-center gap-8">
            ${
              user.avatar_url
                ? `<img src="http://localhost:9000${user.avatar_url}" alt="Avatar" class="w-32 h-32 rounded-full object-cover border-2 border-[#ffc300]" />`
                : `<div class="w-32 h-32 rounded-full bg-gradient-to-r from-[#ffc300] to-[#ffd60a] flex items-center justify-center text-[#000814] text-4xl font-bold">
                    ${user.username.charAt(0).toUpperCase()}
                  </div>`
            }
            <div class="text-center lg:text-left flex-grow">
              <h1 class="text-3xl sm:text-4xl font-display font-extrabold text-[#ffc300] mb-2">
                ${user.username}
              </h1>
              <p class="text-gray-300 mb-4">${user.email}</p>
              <div class="flex flex-wrap gap-4 justify-center lg:justify-start">
                <span class="px-4 py-2 bg-[#001d3d] rounded-full text-sm border border-[#003566]">Ranking: #${userStats.ranking}</span>
                <span class="px-4 py-2 bg-[#001d3d] rounded-full text-sm border border-[#003566]">ELO: ${userStats.elo}</span>
                <span class="px-4 py-2 bg-[#001d3d] rounded-full text-sm border border-[#003566]">Partidas: ${userStats.totalGames}</span>
              </div>
            </div>
            <div class="flex flex-col gap-3">
              <button id="edit-profile" class="px-6 py-3 bg-gradient-to-r from-[#ffc300] to-[#ffd60a] text-[#000814] font-bold rounded-xl hover:from-[#ffd60a] hover:to-[#ffc300] transition-all duration-300">
                ${getTranslation('profile', 'editProfileButton')}
              </button>
              <button id="upload-avatar-btn" class="px-6 py-3 border-2 border-[#003566] text-[#ffc300] font-semibold rounded-xl hover:bg-[#001d3d] hover:text-white transition-all duration-300">
                ${getTranslation('profile', 'uploadAvatarButton')}
              </button>
              <input type="file" id="avatar-input" accept="image/*" style="display:none" />
            </div>
          </div>
        </div>

        <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
          <div class="bg-white bg-opacity-5 backdrop-filter backdrop-blur-xl rounded-3xl p-6 border border-[#003566] shadow-2xl">
            <h2 class="text-2xl font-display font-bold text-[#ffc300] mb-6">
              ${getTranslation('profile', 'statsTitle')}
            </h2>
            <div class="grid grid-cols-2 gap-4">
              <div class="text-center p-4 bg-[#001d3d] rounded-xl border border-[#003566]">
                <div class="text-2xl font-bold text-[#ffc300]">${userStats.wins}</div>
                <div class="text-sm text-gray-300">${getTranslation('profile', 'totalWins')}</div>
              </div>
              <div class="text-center p-4 bg-[#001d3d] rounded-xl border border-[#003566]">
                <div class="text-2xl font-bold text-red-400">${userStats.losses}</div>
                <div class="text-sm text-gray-300">${getTranslation('profile', 'totalLosses')}</div>
              </div>
              <div class="text-center p-4 bg-[#001d3d] rounded-xl border border-[#003566]">
                <div class="text-2xl font-bold text-green-400">${userStats.winRate}%</div>
                <div class="text-sm text-gray-300">${getTranslation('profile', 'winRate')}</div>
              </div>
              <div class="text-center p-4 bg-[#001d3d] rounded-xl border border-[#003566]">
                <div class="text-2xl font-bold text-[#ffd60a]">${userStats.elo}</div>
                <div class="text-sm text-gray-300">${getTranslation('profile', 'eloRating')}</div>
              </div>
            </div>
          </div>

          <div class="bg-white bg-opacity-5 backdrop-filter backdrop-blur-xl rounded-3xl p-6 border border-[#003566] shadow-2xl">
            <div class="flex justify-between items-center mb-6">
              <h2 class="text-2xl font-display font-bold text-[#ffc300]">
                ${getTranslation('profile', 'matchHistoryTitle')}
              </h2>
              <button id="download-history"
                class="text-sm text-blue-400 hover:underline">
                Descargar historial
              </button>
            </div>
            <div class="space-y-3 max-h-64 overflow-y-auto custom-scrollbar">
              ${userStats.matchHistory.length > 0 ? userStats.matchHistory.map(match => `
                <div class="flex items-center justify-between p-3 bg-[#001d3d] rounded-xl border border-[#003566]">
                  <div class="flex items-center gap-3">
                    <div class="w-2 h-2 ${match.result === 'win' ? 'bg-green-400' : 'bg-red-400'} rounded-full"></div>
                    <span class="${match.result === 'win' ? 'text-green-400' : 'text-red-400'} font-semibold">
                      ${match.result === 'win' ? getTranslation('profile', 'matchWin') : getTranslation('profile', 'matchLoss')}
                    </span>
                    <span class="text-gray-300">vs ${match.opponent}</span>
                  </div>
                  <span class="text-[#ffc300] font-bold">${match.score}</span>
                </div>
              `).join('') : `
                <div class="text-center p-4 text-gray-400">No hay partidas jugadas aún</div>
              `}
            </div>
          </div>
        </div>
      </div>
    </main>
    <style>
      .custom-scrollbar::-webkit-scrollbar { width: 8px; }
      .custom-scrollbar::-webkit-scrollbar-track { background: #001d3d; border-radius: 10px; }
      .custom-scrollbar::-webkit-scrollbar-thumb { background: #003566; border-radius: 10px; }
      .custom-scrollbar::-webkit-scrollbar-thumb:hover { background: #004b80; }
    </style>
  `;

  if (pageContent) {
    pageContent.innerHTML = profileHtml;

    // Avatar
    const avatarInput = document.getElementById('avatar-input') as HTMLInputElement;
    const uploadBtn = document.getElementById('upload-avatar-btn');
    if (uploadBtn && avatarInput) {
      uploadBtn.addEventListener('click', () => avatarInput.click());
      avatarInput.addEventListener('change', async () => {
        const file = avatarInput.files?.[0];
        if (!file) return;

        const formData = new FormData();
        formData.append('file', file);

        const token = localStorage.getItem('jwt');
        const res = await fetch('http://localhost:9000/api/auth/profile/avatar', {
          method: 'POST',
          headers: { Authorization: `Bearer ${token}` },
          body: formData
        });

        if (res.ok) {
          const data = await res.json();
          const user: User | null = getCurrentUser();
          if (user) {
            user.avatar_url = data.avatar_url;
            localStorage.setItem('user', JSON.stringify(user));
            renderProfilePage(); // Recarga perfil para que se vea
          }
          alert('✅ Avatar subido correctamente');
        } else {
          alert('❌ Error al subir avatar');
        }
      });
    }

    // Botón editar perfil
    const editProfile = document.getElementById('edit-profile');
    if (editProfile) {
      editProfile.addEventListener('click', () => navigateTo('/settings'));
    }
  
    // Descargar historial
    const downloadBtn = document.getElementById('download-history') as HTMLButtonElement;
    if (downloadBtn) {
      downloadBtn.addEventListener('click', async () => {
        const token = localStorage.getItem('jwt');
        if (!token) {
          alert('Debes iniciar sesión para descargar el historial');
          return;
        }

        downloadBtn.textContent = 'Descargando...';
        downloadBtn.disabled = true;

        try {
          const response = await fetch('http://localhost:9000/api/auth/profile/download-historial', {
            headers: { Authorization: `Bearer ${token}` }
          });

          if (!response.ok) {
            throw new Error('No se pudo descargar el historial');
          }

          const blob = await response.blob();
          const url = window.URL.createObjectURL(blob);

          const link = document.createElement('a');
          link.href = url;
          link.download = 'historial_partidas.txt';
          document.body.appendChild(link);
          link.click();
          document.body.removeChild(link);
          window.URL.revokeObjectURL(url);

          downloadBtn.textContent = '✔ Descargado';
        } catch (err) {
          console.error(err);
          alert('❌ Error al descargar el historial');
          downloadBtn.textContent = 'Descargar historial';
        } finally {
          setTimeout(() => {
            downloadBtn.textContent = 'Descargar historial';
            downloadBtn.disabled = false;
          }, 2000);
        }
      });
    }
  }
}
[1;30m----------------------------------------[0m

[1;34m=== ./frontend/src/pages/gameObserver.ts ===[0m
import { navigateTo } from '../router';

export function renderGameObserver(): void {
  const content = document.getElementById('page-content');

  if (!content) {
    console.error('No se encontró el contenedor principal para renderizar el observador de juego.');
    return;
  }

  content.innerHTML = `
    <div class="w-full max-w-4xl mx-auto p-8">
      <h1 class="text-3xl font-bold text-center mb-8">Observar Partidas</h1>
      
      <div class="bg-gray-800 rounded-lg p-6 mb-6">
        <h2 class="text-xl font-bold mb-4">Partidas Disponibles</h2>
        <div id="games-list" class="space-y-2">
          <!-- Lista de partidas se cargará aquí -->
        </div>
      </div>
      
      <div id="game-viewer" class="bg-black border-2 border-gray-400 rounded-lg p-4 mb-6 hidden">
        <canvas id="observerCanvas" width="600" height="400" class="w-full h-auto bg-black"></canvas>
        <div class="text-center mt-4">
          <div class="grid grid-cols-2 gap-4">
            <div class="text-left">
              <p class="text-lg font-bold">Jugador 1: <span id="obs-score1">0</span></p>
            </div>
            <div class="text-right">
              <p class="text-lg font-bold">Jugador 2: <span id="obs-score2">0</span></p>
            </div>
          </div>
        </div>
      </div>
      
      <div class="text-center">
        <button id="refresh-games" class="bg-green-500 text-white font-semibold py-2 px-4 rounded mr-4">
          Actualizar Lista
        </button>
        <button id="back-to-play" class="bg-blue-500 text-white font-semibold py-2 px-4 rounded">
          Volver a Selección
        </button>
      </div>
    </div>
  `;

  // Inicializar observador
  initGameObserver();

  document.getElementById('back-to-play')?.addEventListener('click', () => navigateTo('/play'));
}

function initGameObserver(): void {
  let socket: WebSocket | null = null;
  let currentGameId: string | null = null;
  
  const canvas = document.getElementById('observerCanvas') as HTMLCanvasElement;
  const ctx = canvas.getContext('2d');
  
  if (!ctx) {
    console.error('No se pudo obtener el contexto del canvas.');
    return;
  }

  async function loadGames(): Promise<void> {
    try {
      const response = await fetch('http://localhost:8002/api/games');
      const data = await response.json();
      
      const gamesList = document.getElementById('games-list');
      if (!gamesList) return;
      
      gamesList.innerHTML = '';
      
      if (data.games && data.games.length > 0) {
        data.games.forEach((game: any) => {
          const gameElement = document.createElement('div');
          gameElement.className = 'bg-gray-700 p-4 rounded cursor-pointer hover:bg-gray-600';
          gameElement.innerHTML = `
            <h3 class="font-bold">${game.nombre}</h3>
            <p class="text-sm text-gray-300">Jugadores: ${game.jugadoresConectados}/${game.capacidadMaxima}</p>
            <p class="text-sm text-gray-300">Estado: ${game.enJuego ? 'En juego' : 'Esperando'}</p>
            <p class="text-sm text-gray-300">Modo: ${game.gameMode}</p>
            <p class="text-sm text-gray-300">Puntuación: ${game.puntuacion.jugador1} - ${game.puntuacion.jugador2}</p>
          `;
          
          gameElement.addEventListener('click', () => observeGame(game.id));
          gamesList.appendChild(gameElement);
        });
      } else {
        gamesList.innerHTML = '<p class="text-gray-400">No hay partidas disponibles</p>';
      }
    } catch (error) {
      console.error('Error al cargar partidas:', error);
    }
  }

  function observeGame(gameId: string): void {
    if (socket) {
      socket.close();
    }

    currentGameId = gameId;
    
    // Mostrar el canvas del observador
    const gameViewer = document.getElementById('game-viewer');
    if (gameViewer) {
      gameViewer.classList.remove('hidden');
    }

    // Conectar al WebSocket del observador
    socket = new WebSocket(`ws://localhost:8002/observar`);
    
    socket.onopen = () => {
      console.log('Conectado al WebSocket del observador');
      if (socket) {
        socket.send(JSON.stringify({
          tipo: 'seleccionar_partida',
          partidaId: gameId
        }));
      }
    };

    socket.onmessage = (event) => {
      const data = JSON.parse(event.data);
      
      if (data.tipo === 'estado_partida_observada') {
        drawGame(data.juego);
      } else if (data.tipo === 'error') {
        console.error('Error del observador:', data.mensaje);
      }
    };

    socket.onclose = () => {
      console.log('Desconectado del WebSocket del observador');
    };

    socket.onerror = (error) => {
      console.error('Error en WebSocket del observador:', error);
    };
  }

  function drawGame(gameState: any): void {
    if (!ctx) return;

    // Limpiar canvas
    ctx.fillStyle = 'black';
    ctx.fillRect(0, 0, canvas.width, canvas.height);
    
    // Dibujar línea central
    ctx.strokeStyle = 'white';
    ctx.setLineDash([5, 5]);
    ctx.beginPath();
    ctx.moveTo(canvas.width / 2, 0);
    ctx.lineTo(canvas.width / 2, canvas.height);
    ctx.stroke();
    
    // Dibujar palas
    ctx.fillStyle = 'white';
    ctx.fillRect(gameState.palas.jugador1.x, gameState.palas.jugador1.y, gameState.palaAncho, gameState.palaAlto);
    ctx.fillRect(gameState.palas.jugador2.x, gameState.palas.jugador2.y, gameState.palaAncho, gameState.palaAlto);
    
    // Dibujar pelota
    ctx.beginPath();
    ctx.arc(gameState.pelota.x, gameState.pelota.y, gameState.pelota.radio, 0, Math.PI * 2);
    ctx.fill();
    
    // Actualizar puntuación
    const score1 = document.getElementById('obs-score1');
    const score2 = document.getElementById('obs-score2');
    if (score1) score1.textContent = gameState.puntuacion.jugador1.toString();
    if (score2) score2.textContent = gameState.puntuacion.jugador2.toString();
  }

  // Event listeners
  document.getElementById('refresh-games')?.addEventListener('click', loadGames);

  // Cargar partidas inicialmente
  loadGames();
}
[1;30m----------------------------------------[0m

[1;34m=== ./frontend/src/pages/login.ts ===[0m
// src/pages/login.ts

import { navigateTo } from '../router';
import { getTranslation, setLanguage, getCurrentLanguage } from '../i18n';

export function renderLoginPage(): void {
    const loginHtml = `
       <div
        class="min-h-screen flex justify-center items-center p-4 sm:p-8 bg-[#000814] font-inter text-gray-100 antialiased relative overflow-hidden"
       >
        <div class="absolute inset-0 z-0 opacity-20 login-bg-pattern"></div>
        <div class="absolute inset-0 z-0 bg-gradient-to-br from-[#000814] via-[#001d3d] to-[#000814] opacity-30 animate-pulse-subtle"></div>

        <div class="absolute top-4 right-4 sm:top-8 sm:right-8 z-50">
            <div class="relative inline-block text-left">
                <button
                    type="button"
                    id="language-dropdown-button"
                    class="inline-flex justify-center items-center gap-x-1.5 rounded-full bg-white bg-opacity-10 px-4 py-2 text-sm font-semibold text-gray-100 shadow-sm ring-1 ring-inset ring-[#003566] hover:bg-opacity-20 transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-[#ffc300] focus:ring-opacity-75"
                >
                    <span data-i18n="common.language">${getTranslation('common', 'language')}</span>
                    <svg class="-mr-1 h-5 w-5 text-gray-300" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                        <path fill-rule="evenodd" d="M5.23 7.21a.75.75 0 011.06.02L10 10.94l3.71-3.71a.75.75 0 111.06 1.06l-4.25 4.25a.75.75 0 01-1.06 0L5.21 8.27a.75.75 0 01.02-1.06z" clip-rule="evenodd" />
                    </svg>
                </button>

                <div id="language-dropdown-menu" class="absolute right-0 z-10 mt-2 w-48 origin-top-right rounded-md bg-[#001d3d] shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none hidden" role="menu" aria-orientation="vertical" aria-labelledby="language-dropdown-button" tabindex="-1">
                    <div class="py-1" role="none">
                        <a href="#" class="text-gray-300 block px-4 py-2 text-sm hover:bg-[#002c53]" role="menuitem" tabindex="-1" id="lang-es" data-lang="es" data-i18n="common.castellano">${getTranslation('common', 'castellano')}</a>
                        <a href="#" class="text-gray-300 block px-4 py-2 text-sm hover:bg-[#002c53]" role="menuitem" tabindex="-1" id="lang-en" data-lang="en" data-i18n="common.english">${getTranslation('common', 'english')}</a>
                        <a href="#" class="text-gray-300 block px-4 py-2 text-sm hover:bg-[#002c53]" role="menuitem" tabindex="-1" id="lang-gl" data-lang="gl" data-i18n="common.galego">${getTranslation('common', 'galego')}</a>
                        <a href="#" class="text-gray-300 block px-4 py-2 text-sm hover:bg-[#002c53]" role="menuitem" tabindex="-1" id="lang-zh" data-lang="zh" data-i18n="common.chinese">${getTranslation('common', 'chinese')}</a>
                    </div>
                </div>
            </div>
        </div>

        <div class="relative bg-white bg-opacity-5 backdrop-filter backdrop-blur-xl rounded-3xl shadow-2xl p-6 sm:p-8 md:p-10 lg:p-12 w-full max-w-md mx-auto border border-[#003566] transform transition-all duration-500 ease-in-out z-10">
          <div class="text-center mb-8">
            <h1 class="text-4xl sm:text-5xl font-display font-extrabold text-[#ffc300] mb-2 drop-shadow-md" data-i18n="login.title">${getTranslation('login', 'title')}</h1>
            <h2 class="text-2xl sm:text-3xl font-display font-extrabold text-gray-100 mb-4 drop-shadow-md" data-i18n="login.welcomeBack">${getTranslation('login', 'welcomeBack')}</h2>
            <p class="text-base sm:text-lg text-gray-300" data-i18n="login.subtitle">${getTranslation('login', 'subtitle')}</p>
          </div>

          <form class="space-y-6">
            <div class="relative z-0 group">
              <input type="email" id="email" name="email" class="block py-2.5 px-0 w-full text-lg text-gray-100 bg-transparent border-0 border-b-2 border-[#003566] appearance-none focus:outline-none focus:ring-0 focus:border-[#ffc300] peer" placeholder=" " required />
              <label for="email" class="peer-focus:font-medium absolute text-lg text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 peer-focus:text-[#ffc300] peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6" data-i18n="login.emailLabel">Email</label>
            </div>

            <div class="relative z-0 group">
              <input type="password" id="password" name="password" class="block py-2.5 px-0 w-full text-lg text-gray-100 bg-transparent border-0 border-b-2 border-[#003566] appearance-none focus:outline-none focus:ring-0 focus:border-[#ffc300] peer" placeholder=" " required />
              <label for="password" class="peer-focus:font-medium absolute text-lg text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 peer-focus:text-[#ffc300] peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6" data-i18n="login.passwordLabel">${getTranslation('login', 'passwordLabel')}</label>
            </div>

            <button type="submit" id="login-button" class="w-full py-3 mt-6 rounded-xl bg-gradient-to-r from-[#ffc300] to-[#ffd60a] text-[#000814] font-bold text-xl shadow-lg hover:from-[#ffd60a] hover:to-[#ffc300] transition-all duration-300 transform hover:scale-105 active:scale-95 focus:outline-none focus:ring-2 focus:ring-[#ffc300] focus:ring-opacity-75" data-i18n="login.loginButton">${getTranslation('login', 'loginButton')}</button>
          </form>

          <p class="text-center text-gray-400 text-sm mt-6" data-i18n="login.or">${getTranslation('login', 'or')}</p>

          <!-- Botón perrsonalizado para Google -->
          <div id="google-login-button" class="flex justify-center mt-6"></div>

          <p class="text-center text-gray-300 text-base mt-6">
            <span data-i18n-html="login.createAccountSentence">${getTranslation('login', 'noAccountYet')} <a href="/register" id="create-account-link" class="text-[#ffc300] hover:underline font-semibold transition-colors duration-200 hover:text-[#ffd60a]" data-i18n="login.createAccountButton">${getTranslation('register', 'registerButton')}</a></span>
          </p>
        </div>
        <style>
            .login-bg-pattern {
                background: radial-gradient(circle at center, rgba(0, 53, 102, 0.2) 1px, transparent 1px),
                            radial-gradient(circle at center, rgba(0, 29, 61, 0.2) 1px, transparent 1px);
                background-size: 30px 30px;
            }
            .animate-pulse-subtle {
                animation: pulse-subtle 10s infinite ease-in-out;
            }
            @keyframes pulse-subtle {
                0% { opacity: 0.3; }
                50% { opacity: 0.45; }
                100% { opacity: 0.3; }
            }
            .peer:focus ~ label,
            .peer:not(:placeholder-shown) ~ label {
                color: #ffc300;
                transform: translateY(-24px) scale(0.75);
            }
        </style>
       </div>
    `;

    const appRoot = document.getElementById('app-root') as HTMLElement;
    if (appRoot) {
        appRoot.innerHTML = loginHtml;

        // Login clásico
        const loginButton = document.getElementById('login-button');
        if (loginButton) {
            loginButton.addEventListener('click', async (event) => {
                event.preventDefault();
                const email = (document.getElementById('email') as HTMLInputElement)?.value || '';
                const password = (document.getElementById('password') as HTMLInputElement)?.value || '';
                if (!email || !password) return alert('Por favor, completa todos los campos');

                try {
                    const res = await fetch('/api/auth/login', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ email, password }),
                    });
                    const data = await res.json();
                    if (res.ok && data.token) {
                        localStorage.setItem('jwt', data.token);
                        navigateTo('/home');
                    } else {
                        alert(data.message || 'Login fallido');
                    }
                } catch (e) {
                    alert('Error de conexión');
                    console.error(e);
                }
            });
        }

        // Callback global para Google
        (window as any).handleGoogleCredentialResponse = async (response: any) => {
            try {
                const res = await fetch('/api/auth/google', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ token: response.credential })
                });
                const data = await res.json();
                if (res.ok && data.token) {
                    localStorage.setItem('jwt', data.token);
                    navigateTo('/home');
                } else {
                    alert(data.message || 'Error en autenticación con Google');
                }
            } catch (error) {
                console.error('Error en autenticación con Google:', error);
                alert('Error de conexión con el servidor');
            }
        };

        // Carga el script de Google y renderiza el botón
        const googleLoginDiv = document.getElementById('google-login-button');
        const renderGoogleButton = () => {
            const googleLoginDiv = document.getElementById('google-login-button');
            if (window.google?.accounts?.id && googleLoginDiv) {
                window.google.accounts.id.initialize({
                    client_id: "58128894262-ak29ohah5ovkh31dvp2srdbm16thp961.apps.googleusercontent.com",
                    callback: (window as any).handleGoogleCredentialResponse,
                });

                // ✅ Aquí renderizas el botón oficial con estilo controlado
                window.google.accounts.id.renderButton(googleLoginDiv, {
                    theme: 'outline',
                    size: 'large',
                    width: '100%'
                });
            } else {
                setTimeout(renderGoogleButton, 100);
            }
        };

        if (!window.google) {
            const script = document.createElement('script');
            script.src = 'https://accounts.google.com/gsi/client';
            script.async = true;
            script.defer = true;
            script.onload = () => renderGoogleButton();
            document.head.appendChild(script);
        } else {
            renderGoogleButton();
        }

        // Navegación a registro
        const createAccountLink = document.getElementById('create-account-link');
        if (createAccountLink) {
            createAccountLink.addEventListener('click', (event) => {
                event.preventDefault();
                navigateTo('/register');
            });
        }

        // Selector de idioma
        const languageDropdownButton = document.getElementById('language-dropdown-button');
        const languageDropdownMenu = document.getElementById('language-dropdown-menu');
        if (languageDropdownButton && languageDropdownMenu) {
            languageDropdownButton.addEventListener('click', () => {
                languageDropdownMenu.classList.toggle('hidden');
            });

            document.addEventListener('click', (event) => {
                if (!languageDropdownButton.contains(event.target as Node) && !languageDropdownMenu.contains(event.target as Node)) {
                    languageDropdownMenu.classList.add('hidden');
                }
            });

            languageDropdownMenu.querySelectorAll('[data-lang]').forEach(item => {
                item.addEventListener('click', (event) => {
                    event.preventDefault();
                    const newLang = (event.target as HTMLElement).getAttribute('data-lang');
                    if (newLang) {
                        setLanguage(newLang);
                        renderLoginPage();
                        languageDropdownMenu.classList.add('hidden');
                    }
                });
            });
        }
    }
}
[1;30m----------------------------------------[0m

[1;34m=== ./frontend/src/pages/register.ts ===[0m
// src/pages/register.ts

import { navigateTo } from '../router';
import { getTranslation, setLanguage, getCurrentLanguage } from '../i18n';

export function renderRegister(): void {
    const registerHtml = `
        <div
            class="min-h-screen flex justify-center items-center p-4 sm:p-8 bg-[#000814] font-inter text-gray-100 antialiased relative overflow-hidden"
        >
            <div class="absolute inset-0 z-0 opacity-20 register-bg-pattern"></div>
            <div class="absolute inset-0 z-0 bg-gradient-to-br from-[#000814] via-[#001d3d] to-[#000814] opacity-30 animate-pulse-subtle"></div>

            <div class="absolute top-4 right-4 sm:top-8 sm:right-8 z-50">
                <div class="relative inline-block text-left">
                    <button
                        type="button"
                        id="language-dropdown-button"
                        class="inline-flex justify-center items-center gap-x-1.5 rounded-full bg-white bg-opacity-10 px-4 py-2 text-sm font-semibold text-gray-100 shadow-sm ring-1 ring-inset ring-[#003566] hover:bg-opacity-20 transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-[#ffc300] focus:ring-opacity-75"
                    >
                        <span data-i18n="common.language">${getTranslation('common', 'language')}</span>
                        <svg class="-mr-1 h-5 w-5 text-gray-300" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                            <path fill-rule="evenodd" d="M5.23 7.21a.75.75 0 011.06.02L10 10.94l3.71-3.71a.75.75 0 111.06 1.06l-4.25 4.25a.75.75 0 01-1.06 0L5.21 8.27a.75.75 0 01.02-1.06z" clip-rule="evenodd" />
                        </svg>
                    </button>

                    <div id="language-dropdown-menu" class="absolute right-0 z-10 mt-2 w-48 origin-top-right rounded-md bg-[#001d3d] shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none hidden" role="menu" aria-orientation="vertical" aria-labelledby="language-dropdown-button" tabindex="-1">
                    <div class="py-1" role="none">
                        <a href="#" class="text-gray-300 block px-4 py-2 text-sm hover:bg-[#002c53]" role="menuitem" tabindex="-1" id="lang-es" data-lang="es" data-i18n="common.castellano">${getTranslation('common', 'castellano')}</a>
                        <a href="#" class="text-gray-300 block px-4 py-2 text-sm hover:bg-[#002c53]" role="menuitem" tabindex="-1" id="lang-en" data-lang="en" data-i18n="common.english">${getTranslation('common', 'english')}</a>
                        <a href="#" class="text-gray-300 block px-4 py-2 text-sm hover:bg-[#002c53]" role="menuitem" tabindex="-1" id="lang-gl" data-lang="gl" data-i18n="common.galego">${getTranslation('common', 'galego')}</a>
                        <a href="#" class="text-gray-300 block px-4 py-2 text-sm hover:bg-[#002c53]" role="menuitem" tabindex="-1" id="lang-zh" data-lang="zh" data-i18n="common.chinese">${getTranslation('common', 'chinese')}</a>
                    </div>
                    </div>
                </div>
            </div>

            <div
                class="relative bg-white bg-opacity-5 backdrop-filter backdrop-blur-xl rounded-3xl shadow-2xl p-6 sm:p-8 md:p-10 lg:p-12 w-full max-w-md mx-auto border border-[#003566] transform transition-all duration-500 ease-in-out z-10"
            >
                <div class="text-center mb-8">
                    <h1 class="text-4xl sm:text-5xl font-display font-extrabold text-[#ffc300] mb-2 drop-shadow-md" data-i18n="register.title">${getTranslation('register', 'title')}</h1>
                    <h2 class="text-2xl sm:text-3xl font-display font-extrabold text-gray-100 mb-4 drop-shadow-md" data-i18n="register.joinExperience">${getTranslation('register', 'joinExperience')}</h2>
                    <p class="text-base sm:text-lg text-gray-300" data-i18n="register.subtitle">${getTranslation('register', 'subtitle')}</p>
                </div>

                <form class="space-y-6">
                    <div class="relative z-0 group">
                        <input
                            type="text"
                            id="username"
                            name="username"
                            class="block py-2.5 px-0 w-full text-lg text-gray-100 bg-transparent border-0 border-b-2 border-[#003566] appearance-none focus:outline-none focus:ring-0 focus:border-[#ffc300] peer"
                            placeholder=" "
                            required
                        />
                        <label
                            for="username"
                            class="peer-focus:font-medium absolute text-lg text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto peer-focus:text-[#ffc300] peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
                            data-i18n="register.usernameLabel"
                        >${getTranslation('register', 'usernameLabel')}</label>
                    </div>

                    <div class="relative z-0 group">
                        <input
                            type="email"
                            id="email"
                            name="email"
                            class="block py-2.5 px-0 w-full text-lg text-gray-100 bg-transparent border-0 border-b-2 border-[#003566] appearance-none focus:outline-none focus:ring-0 focus:border-[#ffc300] peer"
                            placeholder=" "
                            required
                        />
                        <label
                            for="email"
                            class="peer-focus:font-medium absolute text-lg text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto peer-focus:text-[#ffc300] peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
                            data-i18n="register.emailLabel"
                        >${getTranslation('register', 'emailLabel')}</label>
                    </div>

                    <div class="relative z-0 group">
                        <input
                            type="password"
                            id="password"
                            name="password"
                            class="block py-2.5 px-0 w-full text-lg text-gray-100 bg-transparent border-0 border-b-2 border-[#003566] appearance-none focus:outline-none focus:ring-0 focus:border-[#ffc300] peer"
                            placeholder=" "
                            required
                        />
                        <label
                            for="password"
                            class="peer-focus:font-medium absolute text-lg text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto peer-focus:text-[#ffc300] peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
                            data-i18n="register.passwordLabel"
                        >${getTranslation('register', 'passwordLabel')}</label>
                    </div>

                    <div class="relative z-0 group">
                        <input
                            type="password"
                            id="confirm-password"
                            name="confirm-password"
                            class="block py-2.5 px-0 w-full text-lg text-gray-100 bg-transparent border-0 border-b-2 border-[#003566] appearance-none focus:outline-none focus:ring-0 focus:border-[#ffc300] peer"
                            placeholder=" "
                            required
                        />
                        <label
                            for="confirm-password"
                            class="peer-focus:font-medium absolute text-lg text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto peer-focus:text-[#ffc300] peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
                            data-i18n="register.confirmPasswordLabel"
                        >${getTranslation('register', 'confirmPasswordLabel')}</label>
                    </div>

                    <button
                        type="submit"
                        id="register-button"
                        class="w-full py-3 mt-6 rounded-xl bg-gradient-to-r from-[#ffc300] to-[#ffd60a] text-[#000814] font-bold text-xl shadow-lg hover:from-[#ffd60a] hover:to-[#ffc300] transition-all duration-300 transform hover:scale-105 active:scale-95 focus:outline-none focus:ring-2 focus:ring-[#ffc300] focus:ring-opacity-75"
                        data-i18n="register.registerButton"
                    >${getTranslation('register', 'registerButton')}</button>
                </form>

                <p class="text-center text-gray-400 text-sm mt-6" data-i18n="register.or">${getTranslation('register', 'or')}</p>

                <div id="google-register-button" class="flex justify-center mt-6"></div>

                <p class="text-center text-gray-300 text-base mt-6" data-i18n-html="register.alreadyHaveAccountSentence">
                    ${getTranslation('register', 'alreadyHaveAccount')} <a href="/login" id="login-link" class="text-[#ffc300] hover:underline font-semibold transition-colors duration-200 hover:text-[#ffd60a]" data-i18n="register.loginHere">${getTranslation('register', 'loginHere')}</a>
                </p>
            </div>
            <style>
                .register-bg-pattern {
                    background: radial-gradient(circle at center, rgba(0, 53, 102, 0.2) 1px, transparent 1px),
                                radial-gradient(circle at center, rgba(0, 29, 61, 0.2) 1px, transparent 1px);
                    background-size: 30px 30px;
                }
                .animate-pulse-subtle {
                    animation: pulse-subtle 10s infinite ease-in-out;
                }
                @keyframes pulse-subtle {
                    0% { opacity: 0.3; }
                    50% { opacity: 0.45; }
                    100% { opacity: 0.3; }
                }
                .peer:focus ~ label,
                .peer:not(:placeholder-shown) ~ label {
                    color: #ffc300;
                    transform: translateY(-24px) scale(0.75);
                }
            </style>
        </div>
    `;

    const appRoot = document.getElementById('app-root') as HTMLElement;
    if (appRoot) {
        appRoot.innerHTML = registerHtml;

        // Registro normal (sin Google)
        const registerButton = document.getElementById('register-button');
        if (registerButton) {
            registerButton.addEventListener('click', async (event) => {
                event.preventDefault();
                
                const usernameInput = document.getElementById('username') as HTMLInputElement;
                const emailInput = document.getElementById('email') as HTMLInputElement;
                const passwordInput = document.getElementById('password') as HTMLInputElement;
                const confirmPasswordInput = document.getElementById('confirm-password') as HTMLInputElement;
                
                const username = usernameInput?.value || '';
                const email = emailInput?.value || '';
                const password = passwordInput?.value || '';
                const confirmPassword = confirmPasswordInput?.value || '';
                
                if (!username || !email || !password || !confirmPassword) {
                    alert('Por favor, completa todos los campos');
                    return;
                }
                
                if (password !== confirmPassword) {
                    alert('Las contraseñas no coinciden');
                    return;
                }

                try {
                    const response = await fetch('/api/auth/register', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ username, email, password }),
                    });

                    if (response.ok) {
                        alert('✅ Registro exitoso! Ahora puedes iniciar sesión');
                        navigateTo('/login');
                    } else {
                        const error = await response.json();
                        alert(`❌ Error: ${error.message}`);
                    }
                } catch (error) {
                    console.error('Error en registro:', error);
                    alert('Error de conexión');
                }
            });
        }

        const loginLink = document.getElementById('login-link');
        if (loginLink) {
            loginLink.addEventListener('click', (event) => {
                event.preventDefault();
                navigateTo('/login');
            });
        }

        // Google Sign-In callback
        (window as any).handleGoogleCredentialResponse = async (response: any) => {
            try {
                const res = await fetch('/api/auth/google', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ token: response.credential })
                });
                const data = await res.json();
                if (res.ok && data.token) {
                    localStorage.setItem('jwt', data.token);
                    navigateTo('/home');
                } else {
                    alert(data.message || 'Error en autenticación con Google');
                }
            } catch (error) {
                console.error('Error en autenticación con Google:', error);
                alert('Error de conexión con el servidor');
            }
        };

        const googleDiv = document.getElementById('google-register-button');
        const renderGoogleButton = () => {
            if (window.google?.accounts?.id && googleDiv) {
                window.google.accounts.id.initialize({
                    client_id: '58128894262-ak29ohah5ovkh31dvp2srdbm16thp961.apps.googleusercontent.com',
                    callback: (window as any).handleGoogleCredentialResponse
                });
                window.google.accounts.id.renderButton(googleDiv, {
                    theme: 'outline',
                    size: 'large',
                    width: '100%'
                });
            } else {
                setTimeout(renderGoogleButton, 100);
            }
        };

        if (!window.google) {
            const script = document.createElement('script');
            script.src = 'https://accounts.google.com/gsi/client';
            script.async = true;
            script.defer = true;
            script.onload = () => renderGoogleButton();
            document.head.appendChild(script);
        } else {
            renderGoogleButton();
        }

        const languageDropdownButton = document.getElementById('language-dropdown-button');
        const languageDropdownMenu = document.getElementById('language-dropdown-menu');
        if (languageDropdownButton && languageDropdownMenu) {
            languageDropdownButton.addEventListener('click', () => {
                languageDropdownMenu.classList.toggle('hidden');
            });

            document.addEventListener('click', (event) => {
                if (!languageDropdownButton.contains(event.target as Node) && !languageDropdownMenu.contains(event.target as Node)) {
                    languageDropdownMenu.classList.add('hidden');
                }
            });

            languageDropdownMenu.querySelectorAll('[data-lang]').forEach(item => {
                item.addEventListener('click', (event) => {
                    event.preventDefault();
                    const newLang = (event.target as HTMLElement).getAttribute('data-lang');
                    if (newLang) {
                        setLanguage(newLang);
                        renderRegister();
                        languageDropdownMenu.classList.add('hidden');
                    }
                });
            });
        }

    } else {
        console.error('Elemento con id "app-root" no encontrado para renderizar la página de registro.');
    }
}
[1;30m----------------------------------------[0m

[1;34m=== ./frontend/src/pages/gameSelection.ts ===[0m
import { navigateTo } from '../router';

export function renderGameSelection(): void {
  const content = document.getElementById('page-content');

  if (!content) {
    console.error('No se encontró el contenedor principal para renderizar el modo de selección de juego.');
    return;
  }

  content.innerHTML = `
    <div>
      <h1 class="text-3xl font-bold underline">Selecciona un Modo de Juego</h1>
      <ul>
        <li><button id="local-game" class="mt-4 bg-green-500 text-white font-semibold py-2 px-4 rounded">Juego Local</button></li>
        <li><button id="online-game" class="mt-4 bg-blue-500 text-white font-semibold py-2 px-4 rounded">Juego Online</button></li>
        <li><button id="observer-game" class="mt-4 bg-gray-500 text-white font-semibold py-2 px-4 rounded">Observar Partida</button></li>
      </ul>
    </div>
  `;

  document.getElementById('local-game')?.addEventListener('click', () => navigateTo('/game-local'));
  document.getElementById('online-game')?.addEventListener('click', () => navigateTo('/game-online'));
  document.getElementById('observer-game')?.addEventListener('click', () => navigateTo('/game-observer'));
}
[1;30m----------------------------------------[0m

[1;34m=== ./frontend/src/pages/gameAI.ts ===[0m
import { navigateTo } from '../router';

export function renderGameAI(): void {
  const content = document.getElementById('page-content');

  if (!content) {
    console.error('No se encontró el contenedor principal para renderizar el juego contra IA.');
    return;
  }

  content.innerHTML = `
    <div class="w-full max-w-4xl mx-auto p-8 text-center">
      <h1 class="text-4xl font-bold mb-8">🤖 Juego vs IA - Pong</h1>
      <p class="mb-6">Enfréntate a la inteligencia artificial en una partida de Pong.</p>
      
      <div class="space-y-4 mb-8">
        <div class="bg-gray-800 rounded-lg p-4">
          <h3 class="text-xl font-bold mb-2">Selecciona la dificultad:</h3>
          <div class="space-x-4">
            <button id="easy-ai" class="bg-green-500 text-white py-2 px-4 rounded hover:bg-green-600 transition">
              Fácil
            </button>
            <button id="medium-ai" class="bg-yellow-500 text-white py-2 px-4 rounded hover:bg-yellow-600 transition">
              Medio
            </button>
            <button id="hard-ai" class="bg-red-500 text-white py-2 px-4 rounded hover:bg-red-600 transition">
              Difícil
            </button>
          </div>
        </div>
      </div>
      
      <button id="back-to-online" class="mt-6 bg-gray-500 text-white font-semibold py-2 px-4 rounded">
        ← Volver a Juego Online
      </button>
    </div>
  `;

  document.getElementById('easy-ai')?.addEventListener('click', () => createAIGame('easy'));
  document.getElementById('medium-ai')?.addEventListener('click', () => createAIGame('medium'));
  document.getElementById('hard-ai')?.addEventListener('click', () => createAIGame('hard'));
  document.getElementById('back-to-online')?.addEventListener('click', () => navigateTo('/game-online'));
}

async function createAIGame(difficulty: string): Promise<void> {
  try {
    console.log(`🎮 Creando partida vs IA (${difficulty})...`);
    
    // Primero crear la partida
    const response = await fetch('/api/games', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ nombre: `Online vs IA (${difficulty})`, gameMode: 'pve', maxPlayers: 2 })
    });
    
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    
    const game = await response.json();
    console.log('✅ Partida creada:', game);
    
    // El backend ya agrega automáticamente la IA para partidas PvE
    // Pero vamos a asegurar que la IA esté configurada con la dificultad correcta
    await fetch(`/api/games/${game.id}/ai`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ player: 2, difficulty: difficulty })
    });
    
    // Dar un pequeño delay para que la IA se configure
    setTimeout(async () => {
      // Iniciar la partida
      const startResponse = await fetch(`/api/games/${game.id}/start`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({})
      });
      
      if (startResponse.ok) {
        console.log('🎮 Partida iniciada con IA');
        
        // Guardar gameId y tipo de juego para usar en gameOnline
        sessionStorage.setItem('pendingGameId', game.id);
        sessionStorage.setItem('gameType', 'ai');
        navigateTo('/game-online');
      } else {
        console.error('Error iniciando partida:', await startResponse.text());
        alert('Error iniciando la partida. Intenta nuevamente.');
      }
    }, 500);
    
  } catch (error) {
    console.error('❌ Error creando la partida:', error);
    alert(`❌ Error: ${error instanceof Error ? error.message : 'Error desconocido'}`);
  }
}
[1;30m----------------------------------------[0m

[1;34m=== ./frontend/src/pages/gameSelect.ts ===[0m
import { navigateTo } from '../router';

export function renderGameSelect(): void {
  const content = document.getElementById('page-content');

  if (!content) {
    console.error('No se encontró el contenedor principal para renderizar la selección de partidas.');
    return;
  }

  content.innerHTML = `
    <div class="w-full max-w-6xl mx-auto p-8">
      <h1 class="text-4xl font-bold text-center mb-8">🎮 Seleccionar Partida</h1>
      <p class="text-center mb-8 text-gray-300">Elige una partida disponible para unirte o crea una nueva</p>
      
      <div class="mb-8 flex justify-center space-x-4">
        <button id="refresh-games" class="bg-blue-500 text-white font-semibold py-2 px-6 rounded-lg hover:bg-blue-600 transition">
          🔄 Actualizar Lista
        </button>
        <button id="create-new-game" class="bg-green-500 text-white font-semibold py-2 px-6 rounded-lg hover:bg-green-600 transition">
          ➕ Crear Nueva Partida
        </button>
      </div>

      <div id="games-container" class="space-y-4">
        <div class="text-center">
          <p class="text-gray-400">🔄 Cargando partidas disponibles...</p>
        </div>
      </div>

      <div class="text-center mt-8">
        <button id="back-to-online" class="bg-gray-500 text-white font-semibold py-2 px-6 rounded-lg hover:bg-gray-600 transition">
          ← Volver al Menú Online
        </button>
      </div>
    </div>
  `;

  // Event listeners
  document.getElementById('refresh-games')?.addEventListener('click', loadAvailableGames);
  document.getElementById('create-new-game')?.addEventListener('click', createNewGame);
  document.getElementById('back-to-online')?.addEventListener('click', () => navigateTo('/game-online'));

  // Cargar partidas al inicializar
  loadAvailableGames();
}

async function loadAvailableGames(): Promise<void> {
  const gamesContainer = document.getElementById('games-container');
  if (!gamesContainer) return;

  try {
    gamesContainer.innerHTML = `
      <div class="text-center">
        <p class="text-gray-400">🔄 Cargando partidas disponibles...</p>
      </div>
    `;

    const response = await fetch('/api/games');
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }

    const data = await response.json();
    const availableGames = data.games.filter((g: any) => 
      g.jugadoresConectados < g.capacidadMaxima && !g.enJuego
    );

    if (availableGames.length === 0) {
      gamesContainer.innerHTML = `
        <div class="bg-gray-800 rounded-lg p-8 text-center">
          <h3 class="text-2xl font-bold text-gray-300 mb-4">😔 No hay partidas disponibles</h3>
          <p class="text-gray-400 mb-6">No se encontraron partidas disponibles para unirse.</p>
          <button id="create-first-game" class="bg-green-500 text-white font-semibold py-2 px-6 rounded-lg hover:bg-green-600 transition">
            🎮 Crear Primera Partida
          </button>
        </div>
      `;
      
      document.getElementById('create-first-game')?.addEventListener('click', createNewGame);
      return;
    }

    // Renderizar partidas disponibles
    gamesContainer.innerHTML = availableGames.map((game: any) => `
      <div class="bg-gray-800 rounded-lg p-6 border-2 border-gray-600 hover:border-blue-500 transition">
        <div class="flex justify-between items-center">
          <div class="flex-1">
            <h3 class="text-xl font-bold text-white mb-2">
              🎮 ${game.nombre || `Partida ${game.id.substring(0, 8)}`}
            </h3>
            <div class="grid grid-cols-2 gap-4 text-sm">
              <div>
                <span class="text-gray-400">👥 Jugadores:</span>
                <span class="text-white font-semibold">${game.jugadoresConectados}/${game.capacidadMaxima}</span>
              </div>
              <div>
                <span class="text-gray-400">🎯 Modo:</span>
                <span class="text-white font-semibold">${game.gameMode === 'pvp' ? 'PvP' : 'PvE'}</span>
              </div>
              <div>
                <span class="text-gray-400">⏱️ Estado:</span>
                <span class="text-yellow-400 font-semibold">
                  ${game.enJuego ? '🎮 En Juego' : '⏳ Esperando'}
                </span>
              </div>
              <div>
                <span class="text-gray-400">🆔 ID:</span>
                <span class="text-white font-mono text-xs">${game.id.substring(0, 8)}...</span>
              </div>
            </div>
          </div>
          <div class="ml-6">
            <button 
              class="join-game-btn bg-blue-500 text-white font-semibold py-2 px-6 rounded-lg hover:bg-blue-600 transition"
              data-game-id="${game.id}"
              ${game.jugadoresConectados >= game.capacidadMaxima ? 'disabled' : ''}
            >
              ${game.jugadoresConectados >= game.capacidadMaxima ? '🚫 Llena' : '➡️ Unirse'}
            </button>
          </div>
        </div>
      </div>
    `).join('');

    // Agregar event listeners a los botones de unirse
    document.querySelectorAll('.join-game-btn').forEach(button => {
      button.addEventListener('click', (e) => {
        const gameId = (e.target as HTMLElement).getAttribute('data-game-id');
        if (gameId) {
          joinGame(gameId);
        }
      });
    });

  } catch (error) {
    console.error('❌ Error cargando partidas:', error);
    gamesContainer.innerHTML = `
      <div class="bg-red-800 rounded-lg p-6 text-center">
        <h3 class="text-xl font-bold text-red-200 mb-2">❌ Error al cargar partidas</h3>
        <p class="text-red-300 mb-4">${error instanceof Error ? error.message : 'Error desconocido'}</p>
        <button id="retry-load" class="bg-red-600 text-white font-semibold py-2 px-4 rounded hover:bg-red-700 transition">
          🔄 Reintentar
        </button>
      </div>
    `;
    
    document.getElementById('retry-load')?.addEventListener('click', loadAvailableGames);
  }
}

async function createNewGame(): Promise<void> {
  try {
    console.log('🌐 Creando nueva partida multijugador...');
    
    const response = await fetch('/api/games', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ 
        nombre: `Partida ${new Date().toLocaleTimeString()}`, 
        gameMode: 'pvp', 
        maxPlayers: 2 
      })
    });
    
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    
    const game = await response.json();
    console.log('✅ Partida creada:', game);
    
    alert(`✅ Partida creada exitosamente!
ID: ${game.id}
Nombre: ${game.nombre || 'Sin nombre'}

Conectando al juego...`);
    
    // Guardar gameId en sessionStorage y navegar
    sessionStorage.setItem('currentGameId', game.id);
    sessionStorage.setItem('currentGameMode', 'pvp');
    navigateTo('/game-lobby');
    
  } catch (error) {
    console.error('❌ Error creando partida:', error);
    alert(`❌ Error creando partida: ${error instanceof Error ? error.message : 'Error desconocido'}`);
  }
}

async function joinGame(gameId: string): Promise<void> {
  try {
    console.log(`🔗 Uniéndose a la partida ${gameId}...`);
    
    // Verificar que la partida aún esté disponible
    const response = await fetch(`/api/games/${gameId}`);
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    
    const game = await response.json();
    
    if (game.jugadoresConectados >= game.capacidadMaxima) {
      alert('❌ La partida está llena. Intenta con otra partida.');
      loadAvailableGames(); // Recargar la lista
      return;
    }
    
    if (game.enJuego) {
      alert('❌ La partida ya está en progreso. Intenta con otra partida.');
      loadAvailableGames(); // Recargar la lista
      return;
    }
    
    console.log('✅ Uniéndose a la partida:', game);
    
    alert(`✅ Uniéndose a la partida!
ID: ${game.id}
Jugadores: ${game.jugadoresConectados}/${game.capacidadMaxima}

Conectando al juego...`);
    
    // Guardar gameId en sessionStorage y navegar
    sessionStorage.setItem('currentGameId', gameId);
    sessionStorage.setItem('currentGameMode', 'pvp');
    navigateTo('/game-lobby');
    
  } catch (error) {
    console.error('❌ Error uniéndose a la partida:', error);
    alert(`❌ Error uniéndose a la partida: ${error instanceof Error ? error.message : 'Error desconocido'}`);
  }
}
[1;30m----------------------------------------[0m

[1;34m=== ./frontend/src/pages/gameMultiplayer.ts ===[0m
import { navigateTo } from '../router';

export function renderGameMultiplayer(): void {
  const content = document.getElementById('page-content');

  if (!content) {
    console.error('No se encontró el contenedor principal para renderizar el juego multijugador.');
    return;
  }

  content.innerHTML = `
    <div class="w-full max-w-4xl mx-auto p-8 text-center">
      <h1 class="text-4xl font-bold mb-8">🌍 Juego Multijugador - Pong</h1>
      <p class="mb-6">Crea una partida multijugador y espera a que se una otro jugador.</p>
      
      <div class="space-y-4 mb-8">
        <div class="bg-gray-800 rounded-lg p-4">
          <h3 class="text-xl font-bold mb-2">Crear Partida Multijugador</h3>
          <p class="text-gray-400 mb-4">Se creará una partida y esperarás a que se una otro jugador.</p>
          <button id="create-multiplayer" class="bg-blue-500 text-white py-3 px-6 rounded-lg hover:bg-blue-600 transition font-semibold">
            🎮 Crear Partida
          </button>
        </div>
      </div>
      
      <button id="back-to-online" class="mt-6 bg-gray-500 text-white font-semibold py-2 px-4 rounded">
        ← Volver a Juego Online
      </button>
    </div>
  `;

  document.getElementById('create-multiplayer')?.addEventListener('click', createMultiplayerGame);
  document.getElementById('back-to-online')?.addEventListener('click', () => navigateTo('/game-online'));
}

async function createMultiplayerGame(): Promise<void> {
  try {
    console.log('🌐 Creando partida multijugador...');
    const response = await fetch('/api/games', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ nombre: 'Multijugador', gameMode: 'pvp', maxPlayers: 2 })
    });
    
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    
    const game = await response.json();
    console.log('✅ Partida multijugador creada:', game);
    
    // Guardar gameId y tipo de juego para usar en gameOnline
    sessionStorage.setItem('pendingGameId', game.id);
    sessionStorage.setItem('gameType', 'multiplayer');
    navigateTo('/game-online');
  } catch (error) {
    console.error('❌ Error creando partida multijugador:', error);
    alert(`❌ Error: ${error instanceof Error ? error.message : 'Error desconocido'}`);
  }
}
[1;30m----------------------------------------[0m

[1;34m=== ./frontend/src/pages/play.ts ===[0m
import { navigateTo } from '../router';

export function renderPlay(): void {
  const content = document.getElementById('page-content');

  if (!content) {
    console.error('No se encontró el contenedor principal para renderizar la página de juego.');
    return;
  }

  content.innerHTML = `
    <main class="flex-grow w-full p-4 sm:p-8 flex flex-col items-center gap-8 text-gray-100 animate__animated animate__fadeIn">
      <div class="max-w-4xl w-full">
        <h1 class="text-4xl sm:text-5xl font-display font-extrabold text-[#ffc300] drop-shadow-md text-center mb-8">
          Elige tu Modo de Juego
        </h1>
        
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
          <!-- Juego Local -->
          <div class="rounded-3xl p-6 bg-white bg-opacity-5 backdrop-filter backdrop-blur-xl border border-[#003566] shadow-2xl hover:shadow-custom-deep hover:scale-[1.01] transition-all duration-500">
            <div class="text-center mb-4">
              <div class="text-4xl mb-4">🎮</div>
              <h3 class="text-xl font-display font-bold text-[#ffc300] mb-3">Juego Local</h3>
              <p class="text-sm text-gray-300 mb-4">Juega contra un amigo en la misma computadora</p>
              <ul class="text-xs text-gray-400 mb-4 space-y-1">
                <li>• Jugador 1: W/S</li>
                <li>• Jugador 2: ↑/↓</li>
                <li>• Partida instantánea</li>
              </ul>
            </div>
            <button id="local-game" class="w-full bg-gradient-to-r from-[#28a745] to-[#20c997] text-white py-3 px-6 rounded-xl font-semibold hover:from-[#20c997] hover:to-[#28a745] transition-all duration-300 shadow-lg transform hover:scale-105">
              Jugar Local
            </button>
          </div>
          
          <!-- Juego Online -->
          <div class="rounded-3xl p-6 bg-white bg-opacity-5 backdrop-filter backdrop-blur-xl border border-[#003566] shadow-2xl hover:shadow-custom-deep hover:scale-[1.01] transition-all duration-500">
            <div class="text-center mb-4">
              <div class="text-4xl mb-4">🌐</div>
              <h3 class="text-xl font-display font-bold text-[#ffc300] mb-3">Juego Online</h3>
              <p class="text-sm text-gray-300 mb-4">Juega contra jugadores en línea o contra la IA</p>
              <ul class="text-xs text-gray-400 mb-4 space-y-1">
                <li>• Multijugador en tiempo real</li>
                <li>• Partidas contra IA</li>
                <li>• Ranking global</li>
              </ul>
            </div>
            <button id="online-game" class="w-full bg-gradient-to-r from-[#007bff] to-[#0056b3] text-white py-3 px-6 rounded-xl font-semibold hover:from-[#0056b3] hover:to-[#007bff] transition-all duration-300 shadow-lg transform hover:scale-105">
              Jugar Online
            </button>
          </div>
          
          <!-- Observar Partidas -->
          <div class="rounded-3xl p-6 bg-white bg-opacity-5 backdrop-filter backdrop-blur-xl border border-[#003566] shadow-2xl hover:shadow-custom-deep hover:scale-[1.01] transition-all duration-500">
            <div class="text-center mb-4">
              <div class="text-4xl mb-4">👁️</div>
              <h3 class="text-xl font-display font-bold text-[#ffc300] mb-3">Observar</h3>
              <p class="text-sm text-gray-300 mb-4">Ve partidas en vivo de otros jugadores</p>
              <ul class="text-xs text-gray-400 mb-4 space-y-1">
                <li>• Partidas en tiempo real</li>
                <li>• Estadísticas en vivo</li>
                <li>• Aprender jugando</li>
              </ul>
            </div>
            <button id="observer-game" class="w-full bg-gradient-to-r from-[#6c757d] to-[#495057] text-white py-3 px-6 rounded-xl font-semibold hover:from-[#495057] hover:to-[#6c757d] transition-all duration-300 shadow-lg transform hover:scale-105">
              Observar
            </button>
          </div>
        </div>
        
        <div class="text-center">
          <button id="back-to-home" class="text-gray-400 hover:text-[#ffc300] transition-all duration-300 font-medium">
            ← Volver al Inicio
          </button>
        </div>
      </div>
    </main>
    
    <style>
      .hover\\:shadow-custom-deep:hover {
        box-shadow: 0 15px 30px rgba(0, 0, 0, 0.3), 0 0 50px rgba(255, 195, 0, 0.3);
      }
      
      .animate__animated.animate__fadeIn {
        animation-duration: 0.5s;
      }
    </style>
  `;

  document.getElementById('local-game')?.addEventListener('click', () => navigateTo('/game-local'));
  document.getElementById('online-game')?.addEventListener('click', () => navigateTo('/game-online'));
  document.getElementById('observer-game')?.addEventListener('click', () => navigateTo('/game-observer'));
  document.getElementById('back-to-home')?.addEventListener('click', () => navigateTo('/home'));
}
[1;30m----------------------------------------[0m

[1;34m=== ./frontend/src/pages/gameLobby.ts ===[0m
import { getCurrentUser } from '../auth';
import { navigateTo } from '../router';

export function renderGameLobby(): void {
  const content = document.getElementById('page-content');

  if (!content) {
    console.error('No se encontró el contenedor principal para renderizar el lobby de juego.');
    return;
  }

  // Obtener gameId del sessionStorage
  const gameId = sessionStorage.getItem('currentGameId');
  const gameMode = sessionStorage.getItem('currentGameMode') || 'pvp';
  
  if (!gameId) {
    console.error('No se encontró gameId en sessionStorage');
    navigateTo('/game-online');
    return;
  }

  const currentUser = getCurrentUser();
  const currentUserName = currentUser?.username || 'Usuario';

  content.innerHTML = `
    <div class="w-full max-w-4xl mx-auto p-8">
      <h1 class="text-3xl font-bold text-center mb-4">🎮 Buscando Oponente</h1>
      <p class="text-center mb-6 text-gray-300">ID de Partida: ${gameId}</p>
      
      <!-- Status de conexión -->
      <div id="connection-status" class="bg-gray-800 rounded-lg p-6 mb-6 text-center">
        <div class="text-yellow-400 font-bold text-xl mb-4">
          🔄 Conectando al servidor...
        </div>
        <div class="text-gray-400">
          Por favor espera mientras te conectamos al juego
        </div>
      </div>

      <!-- Información de jugadores -->
      <div id="players-info" class="bg-gray-800 rounded-lg p-6 mb-6 hidden">
        <h2 class="text-xl font-bold mb-4 text-center">👥 Jugadores en la Partida</h2>
        <div id="players-list" class="grid grid-cols-2 gap-4">
          <!-- Se llenará dinámicamente -->
        </div>
      </div>

      <!-- Tablero de juego (oculto inicialmente) -->
      <div id="game-board" class="hidden">
        <div class="bg-black border-2 border-gray-400 rounded-lg p-4 mb-6">
          <canvas id="gameCanvas" width="600" height="400" class="w-full h-auto bg-black"></canvas>
        </div>
        
        <div class="text-center mb-4">
          <div id="score-container" class="grid grid-cols-2 gap-4 mb-4">
            <div class="text-left">
              <h3 class="text-xl font-bold text-yellow-400" id="score1-title">🟡 Jugador 1</h3>
              <p class="text-2xl font-bold" id="score1">0</p>
            </div>
            <div class="text-right">
              <h3 class="text-xl font-bold text-blue-400" id="score2-title">🔵 Jugador 2</h3>
              <p class="text-2xl font-bold" id="score2">0</p>
            </div>
          </div>
          
          <div id="game-status" class="mb-4">
            <p class="text-green-500">🎮 ¡Juego iniciado! Usa W/S para mover</p>
          </div>
        </div>
      </div>

      <!-- Botones -->
      <div class="text-center">
        <button id="leave-game" class="bg-red-500 text-white font-semibold py-2 px-4 rounded hover:bg-red-600 transition">
          Salir del Juego
        </button>
      </div>
    </div>
    
    <!-- Winner Modal -->
    <div id="winner-modal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
      <div class="bg-white rounded-lg p-8 max-w-md w-full mx-4 text-center">
        <div id="winner-content" class="mb-6">
          <h2 class="text-3xl font-bold text-blue-600 mb-4">🏆 Juego Terminado</h2>
          <p id="winner-message" class="text-xl mb-4">Mensaje del ganador</p>
          <div id="final-score" class="text-lg text-gray-600 mb-4">Puntuación final</div>
        </div>
        <button id="return-to-lobby" class="bg-blue-500 text-white font-semibold py-3 px-6 rounded-lg hover:bg-blue-600 transition">
          Volver al Lobby
        </button>
      </div>
    </div>
  `;

  // Event listeners
  document.getElementById('leave-game')?.addEventListener('click', () => {
    sessionStorage.removeItem('currentGameId');
    sessionStorage.removeItem('currentGameMode');
    navigateTo('/game-online');
  });

  document.getElementById('return-to-lobby')?.addEventListener('click', () => {
    hideWinnerModal();
    sessionStorage.removeItem('currentGameId');
    sessionStorage.removeItem('currentGameMode');
    navigateTo('/game-online');
  });

  // Iniciar conexión al juego
  connectToGameLobby(gameId, gameMode);
}

function connectToGameLobby(gameId: string, gameMode: string): void {
  const statusElement = document.getElementById('connection-status');
  const playersInfo = document.getElementById('players-info');
  const gameBoard = document.getElementById('game-board');
  const canvas = document.getElementById('gameCanvas') as HTMLCanvasElement;
  const ctx = canvas?.getContext('2d');

  if (!canvas || !ctx) {
    console.error('Canvas no encontrado');
    return;
  }

  // Construir URL WebSocket con username
  const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';
  const currentUser = getCurrentUser();
  const username = encodeURIComponent(currentUser?.username || 'Usuario');
  const wsUrl = `${protocol}//${window.location.host}/pong/${gameId}?username=${username}`;

  console.log('🔗 Conectando al WebSocket:', wsUrl);
  const socket = new WebSocket(wsUrl);
  let playerNumber: number | null = null;
  let jugadoresInfo: any[] = [];

  // Función para actualizar la interfaz con información de jugadores
  function updatePlayersDisplay(): void {
    const playersList = document.getElementById('players-list');
    if (!playersList || jugadoresInfo.length === 0) return;

    const jugador1 = jugadoresInfo.find(j => j.numero === 1);
    const jugador2 = jugadoresInfo.find(j => j.numero === 2);

    let html = '';
    
    if (jugador1) {
      const isCurrentUser = jugador1.username === currentUser?.username;
      html += `
        <div class="bg-yellow-600 rounded-lg p-4 ${isCurrentUser ? 'border-2 border-white' : ''}">
          <h3 class="text-lg font-bold text-white">
            ${isCurrentUser ? '📱 Tú' : '👤 Oponente'}
          </h3>
          <p class="text-yellow-200">${jugador1.username}</p>
          <p class="text-xs text-yellow-200">Jugador 1 - Pala Amarilla</p>
        </div>
      `;
    } else {
      html += `
        <div class="bg-gray-600 rounded-lg p-4">
          <h3 class="text-lg font-bold text-white">🔍 Buscando...</h3>
          <p class="text-gray-300">Esperando jugador</p>
        </div>
      `;
    }

    if (jugador2) {
      const isCurrentUser = jugador2.username === currentUser?.username;
      html += `
        <div class="bg-blue-600 rounded-lg p-4 ${isCurrentUser ? 'border-2 border-white' : ''}">
          <h3 class="text-lg font-bold text-white">
            ${isCurrentUser ? '📱 Tú' : '👤 Oponente'}
          </h3>
          <p class="text-blue-200">${jugador2.username}</p>
          <p class="text-xs text-blue-200">Jugador 2 - Pala Azul</p>
        </div>
      `;
    } else {
      html += `
        <div class="bg-gray-600 rounded-lg p-4">
          <h3 class="text-lg font-bold text-white">🔍 Buscando...</h3>
          <p class="text-gray-300">Esperando jugador</p>
        </div>
      `;
    }

    playersList.innerHTML = html;
  }

  // Función para actualizar nombres en el marcador
  function updateScoreNames(): void {
    const score1Title = document.getElementById('score1-title');
    const score2Title = document.getElementById('score2-title');
    
    if (score1Title && score2Title && jugadoresInfo.length > 0) {
      const jugador1 = jugadoresInfo.find(j => j.numero === 1);
      const jugador2 = jugadoresInfo.find(j => j.numero === 2);
      
      if (jugador1) {
        const isCurrentUser = jugador1.username === currentUser?.username;
        score1Title.innerHTML = `🟡 ${jugador1.username}${isCurrentUser ? ' (Tú)' : ' (Oponente)'}`;
      }
      
      if (jugador2) {
        const isCurrentUser = jugador2.username === currentUser?.username;
        score2Title.innerHTML = `🔵 ${jugador2.username}${isCurrentUser ? ' (Tú)' : ' (Oponente)'}`;
      }
    }
  }

  socket.onopen = () => {
    console.log(`✅ Conectado a la partida ${gameId}`);
    if (statusElement) {
      statusElement.innerHTML = `
        <div class="text-green-400 font-bold text-xl mb-4">
          ✅ Conectado al servidor
        </div>
        <div class="text-gray-400">
          Esperando asignación de jugador...
        </div>
      `;
    }
  };

  socket.onmessage = (event) => {
    try {
      const data = JSON.parse(event.data);
      console.log('📡 Mensaje recibido:', data);
      
      if (data.tipo === 'bienvenida') {
        playerNumber = data.numero;
        jugadoresInfo = data.jugadores || [];
        console.log(`🎮 Soy el jugador ${playerNumber}`, jugadoresInfo);
        
        if (statusElement) {
          statusElement.innerHTML = `
            <div class="text-green-400 font-bold text-xl mb-4">
              ✅ Conectado como Jugador ${playerNumber}
            </div>
            <div class="text-gray-400">
              Esperando más jugadores...
            </div>
          `;
        }
        
        if (playersInfo) {
          playersInfo.classList.remove('hidden');
          updatePlayersDisplay();
        }
      }
      
      if (data.tipo === 'jugadores_actualizados') {
        jugadoresInfo = data.jugadores || [];
        console.log('👥 Jugadores actualizados:', jugadoresInfo);
        updatePlayersDisplay();
      }
      
      if (data.tipo === 'cuenta_atras') {
        if (statusElement) {
          statusElement.innerHTML = `
            <div class="text-orange-400 font-bold text-xl mb-4">
              🔢 Iniciando en ${data.valor}...
            </div>
            <div class="text-gray-400">
              ¡Prepárate para jugar!
            </div>
          `;
        }
      }
      
      if (data.tipo === 'juego_iniciado') {
        console.log('🎮 Juego iniciado!');
        
        // Mostrar tablero y ocultar status
        if (statusElement) statusElement.classList.add('hidden');
        if (gameBoard) gameBoard.classList.remove('hidden');
        
        // Actualizar nombres en el marcador
        updateScoreNames();
        
        // Dibujar canvas inicial
        drawInitialCanvas(ctx);
      }
      
      if (data.tipo === 'estado' && data.juego && ctx) {
        drawGame(ctx, data.juego);
        updateScore(data.juego);
      }
      
      if (data.tipo === 'juego_finalizado') {
        showWinnerModal(data.mensaje, data.juego);
      }
      
      if (data.tipo === 'jugador_desconectado') {
        showWinnerModal('¡Has ganado! Tu oponente se desconectó.', data.juego);
      }
      
    } catch (error) {
      console.error('Error procesando mensaje:', error);
    }
  };

  socket.onclose = () => {
    console.log('❌ Desconectado del juego');
    if (statusElement) {
      statusElement.innerHTML = `
        <div class="text-red-400 font-bold text-xl mb-4">
          ❌ Desconectado del servidor
        </div>
        <div class="text-gray-400">
          Conexión perdida. Intenta reconectar.
        </div>
      `;
    }
  };

  socket.onerror = (error) => {
    console.error('❌ Error en WebSocket:', error);
    if (statusElement) {
      statusElement.innerHTML = `
        <div class="text-red-400 font-bold text-xl mb-4">
          ❌ Error de conexión
        </div>
        <div class="text-gray-400">
          No se pudo conectar al servidor.
        </div>
      `;
    }
  };

  // Controles de teclado
  const keys = { w: false, s: false };
  
  const handleKeyDown = (e: KeyboardEvent) => {
    if (e.key.toLowerCase() === 'w' && !keys.w) {
      keys.w = true;
      e.preventDefault();
    }
    if (e.key.toLowerCase() === 's' && !keys.s) {
      keys.s = true;
      e.preventDefault();
    }
  };
  
  const handleKeyUp = (e: KeyboardEvent) => {
    if (e.key.toLowerCase() === 'w') {
      keys.w = false;
      e.preventDefault();
    }
    if (e.key.toLowerCase() === 's') {
      keys.s = false;
      e.preventDefault();
    }
  };
  
  document.addEventListener('keydown', handleKeyDown);
  document.addEventListener('keyup', handleKeyUp);
  
  // Enviar movimientos
  const moveInterval = setInterval(() => {
    if (socket.readyState === WebSocket.OPEN && playerNumber) {
      if (keys.w) {
        socket.send(JSON.stringify({ tipo: 'mover', y: -8 }));
      }
      if (keys.s) {
        socket.send(JSON.stringify({ tipo: 'mover', y: 8 }));
      }
    }
  }, 16);
  
  // Limpiar eventos al cerrar
  socket.addEventListener('close', () => {
    document.removeEventListener('keydown', handleKeyDown);
    document.removeEventListener('keyup', handleKeyUp);
    clearInterval(moveInterval);
  });
}

function drawInitialCanvas(ctx: CanvasRenderingContext2D): void {
  // Limpiar canvas
  ctx.fillStyle = 'black';
  ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);
  
  // Línea central
  ctx.strokeStyle = 'white';
  ctx.setLineDash([5, 5]);
  ctx.beginPath();
  ctx.moveTo(ctx.canvas.width / 2, 0);
  ctx.lineTo(ctx.canvas.width / 2, ctx.canvas.height);
  ctx.stroke();
  
  // Mensaje inicial
  ctx.fillStyle = 'white';
  ctx.font = '24px Arial';
  ctx.textAlign = 'center';
  ctx.fillText('¡Juego iniciado!', ctx.canvas.width / 2, ctx.canvas.height / 2);
}

function drawGame(ctx: CanvasRenderingContext2D, gameState: any): void {
  // Limpiar canvas
  ctx.fillStyle = 'black';
  ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);
  
  // Línea central
  ctx.strokeStyle = 'white';
  ctx.setLineDash([5, 5]);
  ctx.beginPath();
  ctx.moveTo(ctx.canvas.width / 2, 0);
  ctx.lineTo(ctx.canvas.width / 2, ctx.canvas.height);
  ctx.stroke();
  
  // Palas
  ctx.fillStyle = 'yellow'; // Pala jugador 1
  ctx.fillRect(gameState.palas.jugador1.x, gameState.palas.jugador1.y, gameState.palaAncho, gameState.palaAlto);
  ctx.fillStyle = 'blue'; // Pala jugador 2
  ctx.fillRect(gameState.palas.jugador2.x, gameState.palas.jugador2.y, gameState.palaAncho, gameState.palaAlto);
  
  // Pelota
  ctx.fillStyle = 'red';
  ctx.beginPath();
  ctx.arc(gameState.pelota.x, gameState.pelota.y, gameState.pelota.radio, 0, Math.PI * 2);
  ctx.fill();
}

function updateScore(gameState: any): void {
  const score1 = document.getElementById('score1');
  const score2 = document.getElementById('score2');
  if (score1) score1.textContent = gameState.puntuacion.jugador1.toString();
  if (score2) score2.textContent = gameState.puntuacion.jugador2.toString();
}

function showWinnerModal(message: string, gameState: any): void {
  const modal = document.getElementById('winner-modal');
  const winnerMessage = document.getElementById('winner-message');
  const finalScore = document.getElementById('final-score');
  
  if (modal && winnerMessage && finalScore) {
    // Extraer información del ganador del mensaje
    const isGameFinished = message.includes('¡Fin de la partida');
    const player1Score = gameState?.puntuacion?.jugador1 || 0;
    const player2Score = gameState?.puntuacion?.jugador2 || 0;
    
    let winner = '';
    let isPlayer1Winner = false;
    
    if (isGameFinished) {
      // Determinar el ganador basado en la puntuación
      isPlayer1Winner = player1Score > player2Score;
      winner = isPlayer1Winner ? 'Jugador 1' : 'Jugador 2';
    } else {
      // Para otros mensajes (como desconexión)
      winner = 'Tú';
      isPlayer1Winner = true;
    }
    
    // Crear mensaje de resultado mejorado con el mismo estilo que el modo local
    const resultMessage = `
      <div class="text-center">
        <div class="text-5xl font-bold text-yellow-600 mb-4">🏆</div>
        <div class="text-3xl font-bold ${isPlayer1Winner ? 'text-blue-700' : 'text-red-700'} mb-4">
          ${winner} Gana!
        </div>
        <div class="text-xl font-semibold text-gray-800 mb-6">Resultado Final</div>
        <div class="bg-white rounded-lg p-6 mb-6 shadow-lg border-2 border-gray-200">
          <div class="flex justify-between items-center text-xl mb-4">
            <span class="font-bold ${isPlayer1Winner ? 'text-green-600' : 'text-gray-600'}">Jugador 1</span>
            <span class="font-bold text-3xl ${isPlayer1Winner ? 'text-green-600' : 'text-gray-600'}">${player1Score}</span>
          </div>
          <div class="border-t-2 border-gray-300 my-4"></div>
          <div class="flex justify-between items-center text-xl">
            <span class="font-bold ${!isPlayer1Winner ? 'text-green-600' : 'text-gray-600'}">Jugador 2</span>
            <span class="font-bold text-3xl ${!isPlayer1Winner ? 'text-green-600' : 'text-gray-600'}">${player2Score}</span>
          </div>
        </div>
        <div class="text-lg font-semibold text-gray-700 bg-yellow-100 p-3 rounded-lg">
          🎉 ${winner} venció por ${Math.max(player1Score, player2Score)} - ${Math.min(player1Score, player2Score)}
        </div>
      </div>
    `;
    
    winnerMessage.innerHTML = resultMessage;
    finalScore.textContent = '';
    modal.classList.remove('hidden');
  }
}

function hideWinnerModal(): void {
  const modal = document.getElementById('winner-modal');
  if (modal) {
    modal.classList.add('hidden');
  }
}
[1;30m----------------------------------------[0m

[1;34m=== ./frontend/src/pages/gameLocal.ts ===[0m
import { navigateTo } from '../router';
import { getCurrentUser } from '../auth';
import { saveGameStats, createGameStats } from '../utils/gameStats';
import { PlayerDisplay, PlayerInfo } from '../components/playerDisplay';

export function renderGameLocal(): void {
  const content = document.getElementById('page-content');

  if (!content) {
    console.error('No se encontró el contenedor principal para renderizar el juego local.');
    return;
  }

  // Obtener usuario actual
  const currentUser = getCurrentUser();
  const player1Name = currentUser?.username || 'Jugador 1';
  const player2Name = 'Jugador 2'; // En juego local, el segundo jugador será siempre "Jugador 2"

  content.innerHTML = `
    <div class="w-full max-w-4xl mx-auto p-8">
      <h1 class="text-3xl font-bold text-center mb-4">🎮 Juego Local - Pong</h1>
      <p class="text-center mb-6">Juega contra otro jugador en el mismo dispositivo</p>
      
      <!-- Player Info Section -->
      <div id="player-info" class="bg-gray-800 rounded-lg p-4 mb-6">
        <div id="player-cards" class="mb-4">
          <!-- Las tarjetas se generarán dinámicamente -->
        </div>
        <div id="player-role" class="text-center text-green-400 font-bold">
          🎮 Juego Local - Dos jugadores en el mismo dispositivo
        </div>
      </div>
      
      <div class="bg-black border-2 border-gray-400 rounded-lg p-4 mb-6">
        <canvas id="pongCanvas" width="600" height="400" class="w-full h-auto bg-black"></canvas>
      </div>
      
      <div class="text-center mb-4">
        <div id="score-container" class="grid grid-cols-2 gap-4 mb-4">
          <div class="text-left">
            <h3 class="text-xl font-bold text-yellow-400" id="score1-title">🟡 ${player1Name}</h3>
            <p class="text-2xl font-bold" id="score1">0</p>
          </div>
          <div class="text-right">
            <h3 class="text-xl font-bold text-blue-400" id="score2-title">🔵 ${player2Name}</h3>
            <p class="text-2xl font-bold" id="score2">0</p>
          </div>
        </div>
        
        <div id="game-status" class="mb-4">
          <p class="text-yellow-500">🔄 Presiona 'Iniciar Juego' para comenzar</p>
        </div>
        
        <div class="space-x-4 mb-4">
          <button id="start-game" class="bg-green-500 text-white font-semibold py-2 px-4 rounded hover:bg-green-600">Iniciar Juego</button>
          <button id="pause-game" class="bg-yellow-500 text-white font-semibold py-2 px-4 rounded hover:bg-yellow-600">Pausar</button>
          <button id="reset-game" class="bg-red-500 text-white font-semibold py-2 px-4 rounded hover:bg-red-600">Reiniciar</button>
        </div>
      </div>
      
      <div class="text-center">
        <button id="back-to-play" class="bg-blue-500 text-white font-semibold py-2 px-4 rounded hover:bg-blue-600">Volver a Selección</button>
      </div>
      
      <!-- Modal para mostrar el resultado del juego -->
      <div id="game-result-modal" class="hidden fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50">
        <div class="bg-gradient-to-br from-blue-50 to-purple-50 rounded-xl p-8 max-w-lg w-full mx-4 text-center shadow-2xl border-2 border-blue-200">
          <div id="game-result-content" class="mb-6"></div>
          <div class="space-x-4">
            <button id="play-again" class="bg-gradient-to-r from-green-500 to-green-600 text-white font-bold py-3 px-6 rounded-lg hover:from-green-600 hover:to-green-700 transition-all duration-200 shadow-lg">
              🎮 Jugar de Nuevo
            </button>
            <button id="close-modal" class="bg-gradient-to-r from-gray-500 to-gray-600 text-white font-bold py-3 px-6 rounded-lg hover:from-gray-600 hover:to-gray-700 transition-all duration-200 shadow-lg">
              ❌ Cerrar
            </button>
          </div>
        </div>
      </div>
    </div>
  `;

  // Inicializar el juego local
  initLocalGame(player1Name, player2Name);

  document.getElementById('back-to-play')?.addEventListener('click', () => navigateTo('/play'));
}

function initLocalGame(player1Name: string, player2Name: string): void {
  const canvas = document.getElementById('pongCanvas') as HTMLCanvasElement;
  const ctx = canvas.getContext('2d');
  
  if (!ctx) {
    console.error('No se pudo obtener el contexto del canvas.');
    return;
  }

  // Inicializar la visualización de jugadores
  const player1: PlayerInfo = {
    numero: 1,
    username: player1Name,
    displayName: player1Name,
    esIA: false,
    isCurrentUser: true,
    controls: 'W (arriba) / S (abajo)'
  };

  const player2: PlayerInfo = {
    numero: 2,
    username: player2Name,
    displayName: player2Name,
    esIA: false,
    isCurrentUser: false,
    controls: '↑ (arriba) / ↓ (abajo)'
  };

  updatePlayerDisplay(player1, player2);

  // Estado del juego
  let gameRunning = false;
  let gameStartTime: Date | null = null;
  let animationId: number;
  const maxScore = 5; // Puntuación máxima para ganar
  
  const gameState = {
    ball: { x: 300, y: 200, vx: 5, vy: 3, radius: 10 },
    paddles: {
      left: { x: 20, y: 160, width: 15, height: 80 },
      right: { x: 565, y: 160, width: 15, height: 80 }
    },
    score: { left: 0, right: 0 },
    keys: {
      w: false, s: false,
      ArrowUp: false, ArrowDown: false
    }
  };

  // Eventos de teclado
  document.addEventListener('keydown', (e) => {
    if (e.key in gameState.keys) {
      gameState.keys[e.key as keyof typeof gameState.keys] = true;
    }
  });

  document.addEventListener('keyup', (e) => {
    if (e.key in gameState.keys) {
      gameState.keys[e.key as keyof typeof gameState.keys] = false;
    }
  });

  // Funciones del juego
  function updatePaddles(): void {
    const speed = 5;
    
    // Jugador 1 (izquierda)
    if (gameState.keys.w && gameState.paddles.left.y > 0) {
      gameState.paddles.left.y -= speed;
    }
    if (gameState.keys.s && gameState.paddles.left.y < canvas.height - gameState.paddles.left.height) {
      gameState.paddles.left.y += speed;
    }
    
    // Jugador 2 (derecha)
    if (gameState.keys.ArrowUp && gameState.paddles.right.y > 0) {
      gameState.paddles.right.y -= speed;
    }
    if (gameState.keys.ArrowDown && gameState.paddles.right.y < canvas.height - gameState.paddles.right.height) {
      gameState.paddles.right.y += speed;
    }
  }

  function updateBall(): void {
    gameState.ball.x += gameState.ball.vx;
    gameState.ball.y += gameState.ball.vy;
    
    // Rebote en paredes superior e inferior
    if (gameState.ball.y <= gameState.ball.radius || gameState.ball.y >= canvas.height - gameState.ball.radius) {
      gameState.ball.vy *= -1;
    }
    
    // Colisión con palas
    const leftPaddle = gameState.paddles.left;
    const rightPaddle = gameState.paddles.right;
    
    if (gameState.ball.x <= leftPaddle.x + leftPaddle.width &&
        gameState.ball.y >= leftPaddle.y &&
        gameState.ball.y <= leftPaddle.y + leftPaddle.height &&
        gameState.ball.vx < 0) {
      gameState.ball.vx *= -1;
    }
    
    if (gameState.ball.x >= rightPaddle.x &&
        gameState.ball.y >= rightPaddle.y &&
        gameState.ball.y <= rightPaddle.y + rightPaddle.height &&
        gameState.ball.vx > 0) {
      gameState.ball.vx *= -1;
    }
    
    // Puntuación
    if (gameState.ball.x < 0) {
      gameState.score.right++;
      resetBall();
      updateScore();
      checkGameEnd();
    } else if (gameState.ball.x > canvas.width) {
      gameState.score.left++;
      resetBall();
      updateScore();
      checkGameEnd();
    }
  }

  function checkGameEnd(): void {
    if (gameState.score.left >= maxScore || gameState.score.right >= maxScore) {
      gameRunning = false;
      if (animationId) {
        cancelAnimationFrame(animationId);
      }
      showGameResult();
    }
  }

  function resetBall(): void {
    gameState.ball.x = canvas.width / 2;
    gameState.ball.y = canvas.height / 2;
    gameState.ball.vx = Math.random() > 0.5 ? 5 : -5;
    gameState.ball.vy = (Math.random() - 0.5) * 6;
  }

  function updateScore(): void {
    const score1 = document.getElementById('score1');
    const score2 = document.getElementById('score2');
    if (score1) score1.textContent = gameState.score.left.toString();
    if (score2) score2.textContent = gameState.score.right.toString();
  }

  function draw(): void {
    if (!ctx) return;
    
    // Limpiar canvas
    ctx.fillStyle = 'black';
    ctx.fillRect(0, 0, canvas.width, canvas.height);
    
    // Dibujar línea central
    ctx.strokeStyle = 'white';
    ctx.setLineDash([5, 5]);
    ctx.beginPath();
    ctx.moveTo(canvas.width / 2, 0);
    ctx.lineTo(canvas.width / 2, canvas.height);
    ctx.stroke();
    
    // Dibujar palas
    ctx.fillStyle = 'white';
    ctx.fillRect(gameState.paddles.left.x, gameState.paddles.left.y, gameState.paddles.left.width, gameState.paddles.left.height);
    ctx.fillRect(gameState.paddles.right.x, gameState.paddles.right.y, gameState.paddles.right.width, gameState.paddles.right.height);
    
    // Dibujar pelota
    ctx.beginPath();
    ctx.arc(gameState.ball.x, gameState.ball.y, gameState.ball.radius, 0, Math.PI * 2);
    ctx.fill();
  }

  function gameLoop(): void {
    if (!gameRunning) return;
    
    updatePaddles();
    updateBall();
    draw();
    
    animationId = requestAnimationFrame(gameLoop);
  }

  function startGame(): void {
    if (!gameStartTime) {
      gameStartTime = new Date();
    }
    gameRunning = true;
    const statusElement = document.getElementById('game-status');
    if (statusElement) {
      statusElement.innerHTML = '<p class="text-green-500">🎮 ¡Juego iniciado! Usa las teclas asignadas para mover</p>';
    }
    gameLoop();
  }

  function pauseGame(): void {
    gameRunning = false;
    if (animationId) {
      cancelAnimationFrame(animationId);
    }
    const statusElement = document.getElementById('game-status');
    if (statusElement) {
      statusElement.innerHTML = '<p class="text-yellow-500">⏸️ Juego pausado</p>';
    }
  }

  function resetGame(): void {
    pauseGame();
    gameState.score.left = 0;
    gameState.score.right = 0;
    gameStartTime = null;
    resetBall();
    updateScore();
    draw();
    const statusElement = document.getElementById('game-status');
    if (statusElement) {
      statusElement.innerHTML = '<p class="text-yellow-500">🔄 Presiona \'Iniciar Juego\' para comenzar</p>';
    }
  }

  function updatePlayerDisplay(player1: PlayerInfo, player2: PlayerInfo): void {
    const playerCardsContainer = document.getElementById('player-cards');
    
    if (playerCardsContainer) {
      const playerCardsHtml = PlayerDisplay.generatePlayerCards(player1, player2, 'local');
      playerCardsContainer.innerHTML = playerCardsHtml;
    }
  }

  async function showGameResult(): Promise<void> {
    const gameEndTime = new Date();
    const winner = gameState.score.left > gameState.score.right ? player1Name : player2Name;
    const loser = gameState.score.left > gameState.score.right ? player2Name : player1Name;
    const winnerScore = Math.max(gameState.score.left, gameState.score.right);
    const loserScore = Math.min(gameState.score.left, gameState.score.right);
    const isPlayer1Winner = gameState.score.left > gameState.score.right;

    // Crear mensaje de resultado mejorado con colores vibrantes
    const resultMessage = `
      <div class="text-center">
        <div class="text-5xl font-bold text-yellow-600 mb-4">🏆</div>
        <div class="text-3xl font-bold ${isPlayer1Winner ? 'text-blue-700' : 'text-red-700'} mb-4">
          ${winner} Gana!
        </div>
        <div class="text-xl font-semibold text-gray-800 mb-6">Resultado Final</div>
        <div class="bg-white rounded-lg p-6 mb-6 shadow-lg border-2 border-gray-200">
          <div class="flex justify-between items-center text-xl mb-4">
            <span class="font-bold ${isPlayer1Winner ? 'text-green-600' : 'text-gray-600'}">${player1Name}</span>
            <span class="font-bold text-3xl ${isPlayer1Winner ? 'text-green-600' : 'text-gray-600'}">${gameState.score.left}</span>
          </div>
          <div class="border-t-2 border-gray-300 my-4"></div>
          <div class="flex justify-between items-center text-xl">
            <span class="font-bold ${!isPlayer1Winner ? 'text-green-600' : 'text-gray-600'}">${player2Name}</span>
            <span class="font-bold text-3xl ${!isPlayer1Winner ? 'text-green-600' : 'text-gray-600'}">${gameState.score.right}</span>
          </div>
        </div>
        <div class="text-lg font-semibold text-gray-700 bg-yellow-100 p-3 rounded-lg">
          🎉 ${winner} venció a ${loser} por ${winnerScore} - ${loserScore}
        </div>
      </div>
    `;

    // Mostrar modal con resultado
    const modal = document.getElementById('game-result-modal');
    const content = document.getElementById('game-result-content');
    if (modal && content) {
      content.innerHTML = resultMessage;
      modal.classList.remove('hidden');
    }

    // Guardar estadísticas en la base de datos
    if (gameStartTime) {
      const stats = createGameStats(
        player1Name,
        player2Name,
        gameState.score.left,
        gameState.score.right,
        'local',
        gameStartTime,
        gameEndTime
      );
      
      const saved = await saveGameStats(stats);
      if (saved) {
        console.log('Estadísticas guardadas exitosamente');
      } else {
        console.warn('No se pudieron guardar las estadísticas del juego');
      }
    }
  }

  // Event listeners para botones
  document.getElementById('start-game')?.addEventListener('click', startGame);
  document.getElementById('pause-game')?.addEventListener('click', pauseGame);
  document.getElementById('reset-game')?.addEventListener('click', resetGame);

  // Event listeners para modal
  document.getElementById('play-again')?.addEventListener('click', () => {
    const modal = document.getElementById('game-result-modal');
    if (modal) {
      modal.classList.add('hidden');
    }
    resetGame();
  });

  document.getElementById('close-modal')?.addEventListener('click', () => {
    const modal = document.getElementById('game-result-modal');
    if (modal) {
      modal.classList.add('hidden');
    }
  });

  // Dibujar estado inicial
  draw();
}
[1;30m----------------------------------------[0m

[1;34m=== ./frontend/src/pages/home.ts ===[0m
// src/pages/home.ts

import { navigateTo } from '../router';
import { getTranslation } from '../i18n';

export function renderHomePage(): void {
    const homeHtml = `
        <main class="flex-grow w-full p-4 sm:p-8 flex flex-col items-center gap-8 text-gray-100 animate__animated animate__fadeIn">
          <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 max-w-7xl w-full animate__animated animate__fadeInUp">
              <div
                  id="welcome-card"
                  class="rounded-3xl p-6 sm:p-8 lg:p-10 bg-white bg-opacity-5 backdrop-filter backdrop-blur-xl border border-[#003566] shadow-2xl text-center transition-all duration-500 ease-in-out transform hover:scale-[1.01] hover:shadow-custom-deep flex flex-col justify-between"
              >
                  <div>
                      <h2 class="text-4xl sm:text-5xl lg:text-6xl font-display font-extrabold mb-6 text-[#ffc300] drop-shadow-md leading-tight">
                          ${getTranslation('home', 'welcomeTitle')} <span class="text-[#ffd60a]">Transcendence</span>!
                      </h2>
                      <p class="text-base sm:text-lg md:text-xl text-gray-300 mb-8">
                          ${getTranslation('home', 'welcomeSubtitle')}
                      </p>
                  </div>
                  <div class="flex flex-col sm:flex-row justify-center space-y-4 sm:space-y-0 sm:space-x-6 pt-6 pb-6 mt-auto">
                      <button id="play-button"
                          class="bg-gradient-to-r from-[#ffc300] to-[#ffd60a] text-[#000814] py-4 px-10 rounded-xl font-bold text-xl sm:text-2xl hover:from-[#ffd60a] hover:to-[#ffc300] transition-all duration-300 shadow-lg transform hover:scale-105 active:scale-95 focus:outline-none focus:ring-2 focus:ring-[#ffc300] focus:ring-opacity-75"
                      >
                          ${getTranslation('home', 'playNowButton')}
                      </button>
                      <button id="tournaments-button"
                          type="button"
                          class="border-2 border-[#003566] text-[#ffc300] py-4 px-10 rounded-xl font-semibold text-xl sm:text-2xl hover:bg-[#001d3d] hover:text-white transition-all duration-300 shadow transform hover:scale-105 active:scale-95 focus:outline-none focus:ring-2 focus:ring-[#003566] focus:ring-opacity-75"
                      >
                          ${getTranslation('home', 'viewTournamentsButton')}
                      </button>
                  </div>
              </div>

              <div
                  id="live-matches-box"
                  class="rounded-3xl p-4 sm:p-6 bg-white bg-opacity-5 backdrop-filter backdrop-blur-xl border border-[#003566] shadow-2xl flex flex-col transition-all duration-500 ease-in-out hover:scale-[1.01] hover:shadow-custom-deep"
              >
                  <h3 class="text-2xl sm:text-3xl font-display font-extrabold text-[#ffc300] drop-shadow-md mb-6 text-center">
                      ${getTranslation('home', 'liveMatchesTitle')}
                  </h3>
                  <p class="text-base sm:text-lg text-gray-300 mb-6 text-center">
                      ${getTranslation('home', 'liveMatchesSubtitle')}
                  </p>
                  <div class="flex-grow space-y-4 overflow-y-auto max-h-96 pr-2 custom-scrollbar">
                      <a href="/match/1" class="block p-4 rounded-xl bg-[#001d3d] bg-opacity-50 text-gray-100 hover:bg-opacity-70 transition-all duration-200 shadow-md hover:shadow-lg cursor-pointer group border border-[#003566]">
                          <div class="flex justify-between items-center">
                              <span class="font-semibold text-base sm:text-lg">
                                  DragonSlayer <span class="text-[#ffc300]">${getTranslation('home', 'vs')}</span> PongMaster
                              </span>
                              <span class="text-xl sm:text-2xl font-bold text-[#ffd60a]">2 - 1</span>
                          </div>
                          <p class="text-sm text-gray-400 mt-1">${getTranslation('home', 'inProgressRound')} 3</p>
                      </a>

                      <a href="/match/2" class="block p-4 rounded-xl bg-[#001d3d] bg-opacity-50 text-gray-100 hover:bg-opacity-70 transition-all duration-200 shadow-md hover:shadow-lg cursor-pointer group border border-[#003566]">
                          <div class="flex justify-between items-center">
                              <span class="font-semibold text-base sm:text-lg">
                                  FirePhoenix <span class="text-[#ffc300]">${getTranslation('home', 'vs')}</span> IceWarrior
                              </span>
                              <span class="text-xl sm:text-2xl font-bold text-[#ffd60a]">5 - 3</span>
                          </div>
                          <p class="text-sm text-gray-400 mt-1">${getTranslation('home', 'tournamentSemifinal')}</p>
                      </a>

                      <a href="/match/3" class="block p-4 rounded-xl bg-[#001d3d] bg-opacity-50 text-gray-100 hover:bg-opacity-70 transition-all duration-200 shadow-md hover:shadow-lg cursor-pointer group border border-[#003566]">
                          <div class="flex justify-between items-center">
                              <span class="font-semibold text-base sm:text-lg">
                                  CodeNinja <span class="text-[#ffc300]">${getTranslation('home', 'vs')}</span> ByteHunter
                              </span>
                              <span class="text-xl sm:text-2xl font-bold text-[#ffd60a]">1 - 0</span>
                          </div>
                          <p class="text-sm text-gray-400 mt-1">${getTranslation('home', 'quickMatch')}</p>
                      </a>

                      <a href="/match/4" class="block p-4 rounded-xl bg-[#001d3d] bg-opacity-50 text-gray-100 hover:bg-opacity-70 transition-all duration-200 shadow-md hover:shadow-lg cursor-pointer group border border-[#003566]">
                          <div class="flex justify-between items-center">
                              <span class="font-semibold text-base sm:text-lg">
                                  ThunderStrike <span class="text-[#ffc300]">${getTranslation('home', 'vs')}</span> LightningBolt
                              </span>
                              <span class="text-xl sm:text-2xl font-bold text-[#ffd60a]">0 - 0</span>
                          </div>
                          <p class="text-sm text-gray-400 mt-1">${getTranslation('home', 'preparingToStart')}</p>
                      </a>
                      
                      <a href="/match/5" class="block p-4 rounded-xl bg-[#001d3d] bg-opacity-50 text-gray-100 hover:bg-opacity-70 transition-all duration-200 shadow-md hover:shadow-lg cursor-pointer group border border-[#003566]">
                          <div class="flex justify-between items-center">
                              <span class="font-semibold text-base sm:text-lg">
                                  ShadowAssassin <span class="text-[#ffc300]">${getTranslation('home', 'vs')}</span> BladeMaster
                              </span>
                              <span class="text-xl sm:text-2xl font-bold text-[#ffd60a]">4 - 4</span>
                          </div>
                          <p class="text-sm text-gray-400 mt-1">${getTranslation('home', 'matchPoint')}</p>
                      </a>
                      
                      <a href="/match/6" class="block p-4 rounded-xl bg-[#001d3d] bg-opacity-50 text-gray-100 hover:bg-opacity-70 transition-all duration-200 shadow-md hover:shadow-lg cursor-pointer group border border-[#003566]">
                          <div class="flex justify-between items-center">
                              <span class="font-semibold text-base sm:text-lg">
                                  PixelHero <span class="text-[#ffc300]">${getTranslation('home', 'vs')}</span> RetroGamer
                              </span>
                              <span class="text-xl sm:text-2xl font-bold text-[#ffd60a]">3 - 2</span>
                          </div>
                          <p class="text-sm text-gray-400 mt-1">${getTranslation('home', 'quickMatch')}</p>
                      </a>
                  </div>
              </div>
          </div>

          <section class="w-full max-w-7xl mt-16 grid grid-cols-1 md:grid-cols-2 gap-8 mx-auto animate__animated animate__fadeInUp animate__delay-1s">
              <a href="/profile" class="block rounded-3xl p-4 sm:p-6 bg-white bg-opacity-5 backdrop-filter backdrop-blur-xl border border-[#003566] shadow-2xl hover:shadow-custom-deep hover:scale-[1.01] transition-all duration-500">
                  <h3 class="text-xl sm:text-2xl font-display font-bold text-[#ffc300] mb-3">
                      ${getTranslation('home', 'yourProfileTitle')}
                  </h3>
                  <p class="text-sm sm:text-base text-gray-300">
                      ${getTranslation('home', 'yourProfileSubtitle')}
                  </p>
              </a>
              <a href="/ranking" class="block rounded-3xl p-4 sm:p-6 bg-white bg-opacity-5 backdrop-filter backdrop-blur-xl border border-[#003566] shadow-2xl hover:shadow-custom-deep hover:scale-[1.01] transition-all duration-500">
                  <h3 class="text-xl sm:text-2xl font-display font-bold text-[#ffc300] mb-3">
                      ${getTranslation('home', 'globalRankingTitle')}
                  </h3>
                  <p class="text-sm sm:text-base text-gray-300">
                      ${getTranslation('home', 'globalRankingSubtitle')}
                  </p>
              </a>
          </section>
        </main>
        <style>
            /* Custom Scrollbar for Match History */
            .custom-scrollbar::-webkit-scrollbar {
                width: 8px;
            }

            .custom-scrollbar::-webkit-scrollbar-track {
                background: #001d3d; /* Darker track */
                border-radius: 10px;
            }

            .custom-scrollbar::-webkit-scrollbar-thumb {
                background: #003566; /* Match border color */
                border-radius: 10px;
            }

            .custom-scrollbar::-webkit-scrollbar-thumb:hover {
                background: #004b80; /* Slightly lighter on hover */
            }

            .animate__animated.animate__fadeIn {
                animation-duration: 0.5s;
            }

            .animate__animated.animate__fadeInUp {
                animation-duration: 0.8s;
            }

            .animate__animated.animate__delay-1s {
                animation-delay: 0.5s; /* Adjusted delay for better flow */
            }

            /* Custom Shadow for Hover Effect (deeper glow) */
            .hover\\:shadow-custom-deep:hover {
                box-shadow: 0 15px 30px rgba(0, 0, 0, 0.3), 0 0 50px rgba(255, 195, 0, 0.3); /* Deeper, yellowish glow */
            }
        </style>
    `;

    const pageContent = document.getElementById('page-content') as HTMLElement;
    if (pageContent) {
        pageContent.innerHTML = homeHtml;

        // Listener para el botón "Jugar Ahora"
        const playButton = document.getElementById('play-button');
        if (playButton) {
            playButton.addEventListener('click', (event) => {
                event.preventDefault();
                navigateTo('/play');
            });
        }

        // Listener para el botón "Ver Torneos"
        const tournamentsButton = document.getElementById('tournaments-button');
        if (tournamentsButton) {
            tournamentsButton.addEventListener('click', (event) => {
                event.preventDefault();
                navigateTo('/play'); // Asumiendo que Ver Torneos también navega a la página de juego
            });
        }

        // Listeners para las tarjetas de "Tu Perfil" y "Ranking Global"
        const profileCardLink = document.querySelector('section a[href="/profile"]');
        if (profileCardLink) {
            profileCardLink.addEventListener('click', (event) => {
                event.preventDefault();
                navigateTo('/profile');
            });
        }

        const rankingsCardLink = document.querySelector('section a[href="/ranking"]');
        if (rankingsCardLink) {
            rankingsCardLink.addEventListener('click', (event) => {
                event.preventDefault();
                navigateTo('/ranking');
            });
        }

        // Event delegation para los enlaces de partidos en vivo
        document.querySelectorAll('#live-matches-box a').forEach(link => {
            link.addEventListener('click', (event) => {
                const href = link.getAttribute('href');
                if (href && href.startsWith('/match/')) {
                    event.preventDefault();
                    console.log(`Navegando a partida: ${href}`);
                    // En lugar de navegar, solo mostramos información del match
                    alert(`Esta es una funcionalidad de demostración. Partida: ${href}`);
                }
            });
        });

    } else {
        console.error('Elemento con id "page-content" no encontrado para renderizar la página de inicio.');
    }
}
[1;30m----------------------------------------[0m

[1;34m=== ./frontend/src/input.css ===[0m
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Importar temas */
[1;30m----------------------------------------[0m

[1;34m=== ./frontend/src/types/google.d.ts ===[0m
declare global {
  interface Window {
    google?: {
      accounts: {
        id: {
          initialize: (config: any) => void;
          renderButton: (element: HTMLElement, config: any) => void;
        };
      };
    };
  }
}

export {};
[1;30m----------------------------------------[0m

[1;34m=== ./frontend/src/main.ts ===[0m
// src/main.ts

import { navigateTo } from './router';

// Función para inicializar la aplicación
function initializeApp(): void {
    console.log('🚀 Inicializando Transcendence...');
    
    // Inicializar router
    navigateTo(window.location.pathname);
    
    console.log('✅ Transcendence inicializado correctamente');
}

// Esperar a que el DOM esté cargado
document.addEventListener('DOMContentLoaded', initializeApp);
[1;30m----------------------------------------[0m

[1;34m=== ./frontend/nginx.conf ===[0m

server {
    listen 8080; # Nginx within frontend container listens on 8080
    server_name localhost;

    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ /index.html;
    }

    location /api/auth/ {
        proxy_pass http://api-gateway:8000/api/auth/; # Redirect to API Gateway
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/games {
        proxy_pass http://game-service:8000/api/games; # Direct to game-service for game API
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/game/ {
        proxy_pass http://game-service:8000/api/game/; # Direct to game-service for game API
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # WebSocket proxy for game connections
    location /pong/ {
        proxy_pass http://game-service:8000/pong/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # WebSocket proxy for observer connections
    location /observar {
        proxy_pass http://game-service:8000/observar;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
[1;30m----------------------------------------[0m

[1;34m=== ./frontend/package.json ===[0m
{
	"name": "transcendance-frontend",
	"version": "1.0.0",
	"description": "Frontend-only de Transcendance Pong con datos hardcodeados",
	"scripts": {
	  "start": "webpack serve --config webpack.config.js --mode development",
	  "build": "webpack --config webpack.config.js --mode production",
	  "dev": "webpack serve --config webpack.config.js --mode development",
	  "test": "echo \"Error: no test specified\" && exit 1"
	},
	"keywords": ["pong", "frontend", "typescript", "tailwind"],
	"author": "transcendance",
	"license": "MIT",
	"devDependencies": {
  	  "@types/node": "^20.x.x",
	  "autoprefixer": "^10.4.19",
	  "clean-webpack-plugin": "^4.0.0",
	  "css-loader": "^7.1.2",
	  "html-webpack-plugin": "^5.6.0",
	  "postcss": "^8.4.38",
	  "postcss-loader": "^8.1.1",
	  "style-loader": "^4.0.0",
	  "tailwindcss": "^3.4.4",
	  "ts-loader": "^9.5.1",
	  "typescript": "^5.4.5",
	  "webpack": "^5.91.0",
	  "webpack-cli": "^5.1.4",
	  "webpack-dev-server": "^5.0.4"
	}
}
[1;30m----------------------------------------[0m

[1;34m=== ./frontend/webpack.config.js ===[0m
const path = require('path');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const { CleanWebpackPlugin } = require('clean-webpack-plugin');
const webpack = require('webpack');

module.exports = {
  mode: 'development',
  entry: './src/main.ts',
  output: {
    filename: 'bundle.[contenthash].js',
    path: path.resolve(__dirname, 'dist'),
    publicPath: '/'
  },
  resolve: {
    extensions: ['.ts', '.js'],
  },
  module: {
    rules: [
      {
        test: /\.ts$/,
        use: 'ts-loader',
        exclude: /node_modules/,
      },
    ],
  },
  plugins: [
    new CleanWebpackPlugin(),
    new HtmlWebpackPlugin({
      template: './index.html',
      filename: 'index.html',
    }),
    new webpack.DefinePlugin({
      'process.env.VITE_GOOGLE_CLIENT_ID': JSON.stringify(process.env.VITE_GOOGLE_CLIENT_ID || ''),
    }),
  ],
  devServer: {
    static: {
      directory: path.join(__dirname, 'dist'),
    },
    compress: true,
    port: 8080,
    open: true,
    historyApiFallback: true, // Esto es CRUCIAL para SPAs
  },
};
[1;30m----------------------------------------[0m

[1;34m=== ./frontend/index.html ===[0m
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, viewport-fit=cover" />
    <meta name="format-detection" content="telephone=no" />
    <meta name="mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
    <meta name="description" content="Transcendence - A modern Pong game experience with online multiplayer, AI, and multiple game modes" />
    <meta name="keywords" content="pong, game, multiplayer, online, transcendence, paddle, ball" />
    <meta name="theme-color" content="#000814" />
    <title>Transcendence</title>
    <script src="https://accounts.google.com/gsi/client" async defer></script>
    <link rel="icon" href="data:image/svg+xml,%3csvg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22%3e%3ctext y=%22.9em%22 font-size=%2290%22%3e🏓%3c/text%3e%3c/svg%3e">
    
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&family=Montserrat:wght@400;500;600;700;800;900&display=swap" rel="stylesheet" />
    
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
      tailwind.config = {
        theme: {
          extend: {
            colors: {
              'primary-bg': '#000814',
              'secondary-bg': '#001d3d', 
              'tertiary-bg': '#003566',
              'accent': '#ffc300',
              'accent-light': '#ffd60a',
              'text-primary': '#ffd60a',
              'text-secondary': '#003566'
            },
            fontFamily: {
              'inter': ['Inter', 'system-ui', 'sans-serif'],
              'display': ['Montserrat', 'Inter', 'system-ui', 'sans-serif']
            },
            animation: {
              'spin-slow': 'spin 1s linear infinite',
              'fade-in': 'fadeIn 0.5s ease-in-out',
              'slide-up': 'slideUp 0.3s ease-out'
            },
            keyframes: {
              fadeIn: {
                '0%': { opacity: '0', transform: 'translateY(10px)' },
                '100%': { opacity: '1', transform: 'translateY(0)' }
              },
              slideUp: {
                '0%': { opacity: '0', transform: 'translateY(20px)' },
                '100%': { opacity: '1', transform: 'translateY(0)' }
              }
            },
            screens: {
              'xs': '320px',
              'sm': '640px', 
              'md': '768px',
              'lg': '1024px',
              'xl': '1280px',
              '2xl': '1536px'
            }
          }
        }
      }
    </script>
    
    <style>
      /* Essential browser fixes that can't be done with Tailwind */
      html, body {
        overflow-x: hidden;
        scroll-behavior: smooth;
        /* Safari viewport fixes */
        min-height: 100vh;
        min-height: -webkit-fill-available;
      }
      
      body {
        -webkit-overflow-scrolling: touch;
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', sans-serif;
        /* Safari rendering improvements */
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
        /* Safari fix for viewport height */
        min-height: 100vh;
        min-height: -webkit-fill-available;
      }
      
      /* Prevent text selection on interactive elements */
      button, .no-select {
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
        -webkit-tap-highlight-color: transparent;
      }
      
      /* Loading spinner animation */
      @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
      }
      
      .loading-spinner {
        animation: spin 1s linear infinite;
      }
      
      /* Webkit scrollbar styling */
      ::-webkit-scrollbar {
        width: 8px;
      }
      
      ::-webkit-scrollbar-track {
        background: #000814;
      }
      
      ::-webkit-scrollbar-thumb {
        background: #003566;
        border-radius: 4px;
      }
      
      ::-webkit-scrollbar-thumb:hover {
        background: #ffc300;
      }
      
      /* Safari-specific game container fixes */
      .game-container {
        /* Safari viewport fix */
        height: 100vh;
        height: -webkit-fill-available;
        /* Safari touch optimization */
        -webkit-user-select: none;
        -webkit-touch-callout: none;
        -webkit-tap-highlight-color: transparent;
      }
      
      /* Safari canvas optimization */
      canvas {
        -webkit-transform: translateZ(0);
        transform: translateZ(0);
        -webkit-backface-visibility: hidden;
        backface-visibility: hidden;
        /* Safari touch events */
        touch-action: none;
      }
      
      /* Safari button fixes */
      button {
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        border: none;
        outline: none;
        -webkit-tap-highlight-color: transparent;
      }
      
      /* Safari input fixes */
      input, textarea {
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        border-radius: 0;
      }
      
      /* Safari safe area support */
      @supports (padding: max(0px)) {
        .safe-area-top {
          padding-top: max(1rem, env(safe-area-inset-top));
        }
        
        .safe-area-bottom {
          padding-bottom: max(1rem, env(safe-area-inset-bottom));
        }
        
        .safe-area-left {
          padding-left: max(1rem, env(safe-area-inset-left));
        }
        
        .safe-area-right {
          padding-right: max(1rem, env(safe-area-inset-right));
        }
      }
    </style>
  </head>
  <body
    class="min-h-screen bg-gradient-to-br from-[#000814] via-[#001d3d] to-[#003566] font-inter text-gray-100 antialiased leading-relaxed"
  >
    <div id="app-root" class="flex flex-col min-h-screen relative z-10 w-full max-w-full overflow-x-hidden"></div>
    
    <!-- Loading indicator for better UX -->
    <div id="global-loading" class="fixed inset-0 bg-[#000814] bg-opacity-90 flex items-center justify-center z-50" style="display: none;">
      <div class="text-center">
        <div class="border-4 border-[#ffc300]/30 border-t-[#ffc300] rounded-full w-10 h-10 animate-spin mx-auto mb-4"></div>
        <p class="text-[#ffc300] text-lg font-semibold">Loading...</p>
      </div>
    </div>
  </body>
</html>
[1;30m----------------------------------------[0m

[1;34m=== ./frontend/Dockerfile ===[0m
# Build stage
FROM node:20-alpine AS builder
WORKDIR /app
COPY package*.json ./
RUN npm install && npm install --save-dev @types/node && npm install --save-dev @types/google.accounts
COPY . .
RUN npm run build

# Production stage
FROM nginx:alpine
COPY nginx.conf /etc/nginx/conf.d/default.conf
COPY --from=builder /app/dist/ /usr/share/nginx/html/
EXPOSE 8080
CMD ["nginx", "-g", "daemon off;"]
[1;30m----------------------------------------[0m

[1;34m=== ./api-gateway/tsconfig.json ===[0m
{
  "compilerOptions": {
    "target": "es2021",
    "module": "commonjs",
    "outDir": "./dist",
    "strict": true,
    "esModuleInterop": true,
    "skipLibCheck": true,
    "forceConsistentCasingInFileNames": true
  },
  "include": ["src/**/*.ts"],
  "exclude": ["node_modules"]
}
[1;30m----------------------------------------[0m

[1;34m=== ./api-gateway/src/server.ts ===[0m
import Fastify from 'fastify';
import httpProxy from '@fastify/http-proxy';
import fastifyCors from '@fastify/cors'; // 🟡 <-- CORS IMPORTADO
import Redis from 'ioredis';
import dotenv from 'dotenv';
dotenv.config();

// -- Redis connection setup from env --
const redisHost = process.env.REDIS_HOST || 'redis';
const redisPort = Number(process.env.REDIS_PORT) || 6379;
const redisPassword = process.env.REDIS_PASSWORD || '';
let redis = new Redis({ host: redisHost, port: redisPort, password: redisPassword });

// -- fastify instance --
const fastify = Fastify({ logger: true });

(async () => {
  // 🟡 REGISTRA CORS ANTES DE LOS PROXIES
  await fastify.register(fastifyCors, {
    origin: 'http://localhost:9001',
    credentials: true
  });

  // -- Proxies to backend services --
  const serviceConfigs = [
    { env: 'AUTH_SERVICE_URL', prefix: '/api/auth', rewritePrefix: '/auth', fallback: 'http://auth-service:8000' },
    { env: 'GAME_SERVICE_URL', prefix: '/api/game', rewritePrefix: '/game', fallback: 'http://game-service:8000' },
    { env: 'CHAT_SERVICE_URL', prefix: '/api/chat', rewritePrefix: '/chat', fallback: 'http://chat-service:8000' },
  ];

  for (const svc of serviceConfigs) {
    const upstream = process.env[svc.env] || svc.fallback;
    fastify.register(httpProxy, {
      upstream,
      prefix: svc.prefix,
      rewritePrefix: svc.rewritePrefix,
      httpMethods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'], // Añade OPTIONS por si acaso
    });
  }

  // -- Health check --
  fastify.get('/health', async (request, reply) => {
    try {
      await redis.ping();
      reply.send({ status: 'ok', redis: 'connected' });
    } catch (err: any) {
      reply.status(500).send({ status: 'fail', error: err?.message || String(err) });
    }
  });

  // -- Enqueue jobs --
  fastify.post('/queue/job', async (request, reply) => {
    try {
      const job = request.body;
      await redis.lpush('job-queue', JSON.stringify(job));
      reply.send({ queued: true });
    } catch (err: any) {
      reply.status(500).send({ error: 'Failed to queue job', detail: err?.message || String(err) });
    }
  });

  // -- Start server --
  try {
    await redis.ping();
    fastify.log.info('Redis connection successfully established from .env or environment variables');
    
    await fastify.listen({ port: 8000, host: '0.0.0.0' });
    fastify.log.info('API Gateway listening on port 8000');
  } catch (err) {
    fastify.log.error(err);
    process.exit(1);
  }
})();
[1;30m----------------------------------------[0m

[1;34m=== ./api-gateway/package.json ===[0m
{
  "name": "api-gateway",
  "version": "1.0.0",
  "description": "Microservicio para api-gateway",
  "main": "dist/server.js",
  "scripts": {
    "build": "tsc",
    "start": "node dist/server.js",
    "dev": "ts-node-dev src/server.ts",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "fastify": "^4.x.x",
    "@fastify/http-proxy": "^9.x.x",
    "jsonwebtoken": "^9.x.x",
    "dotenv": "^16.x.x",
    "ioredis": "^5.x.x",
    "axios": "^1.x.x",
    "@fastify/cors": "^9.0.0"
  },
  "devDependencies": {
    "@types/node": "^20.x.x",
    "@types/jsonwebtoken": "^9.0.0",
    "ts-node": "^10.x.x",
    "ts-node-dev": "^2.x.x",
    "typescript": "^5.x.x",
    "@types/ioredis": "^5.x.x"
  }

}
[1;30m----------------------------------------[0m

[1;34m=== ./api-gateway/Dockerfile ===[0m
FROM node:20-alpine
WORKDIR /app
COPY package*.json ./
RUN npm install
COPY . .
RUN npm run build
EXPOSE 8000
CMD ["npm", "start"]
[1;30m----------------------------------------[0m

[1;34m=== ./docker-compose.yml ===[0m
services:
  # Servicio de Autenticación y Perfiles de Usuario
  auth-service:
    build: ./auth-service
    image: auth-service
    container_name: auth-service
    ports:
      - "8001:8000" # Mapea el puerto 8000 interno a 8001 en el host
    environment:
      DB_SERVICE_URL: "http://db-service:8005"
      VAULT_ADDR: "http://vault:8200"
      REDIS_HOST: "${REDIS_HOST}"
      REDIS_PORT: "${REDIS_PORT}"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
      JWT_SECRET: "${JWT_SECRET}"
    depends_on:
      - db-service
      - vault
    volumes:
      - db_data:/app/data
    networks:
      - transcendence_net
    restart: on-failure

  # Servicio de Juego (Pong)
  game-service:
    build: ./game-service
    image: game-service
    container_name: game-service
    ports:
      - "8002:8000" # Mapea el puerto 8000 interno a 8002 en el host
    environment:
      DB_SERVICE_URL: "http://db-service:8005"
      VAULT_ADDR: "http://vault:8200"
      REDIS_HOST: "${REDIS_HOST}"
      REDIS_PORT: "${REDIS_PORT}"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
      JWT_SECRET: "${JWT_SECRET}"
    depends_on:
      - db-service
      - auth-service
      - vault
      - redis
    networks:
      - transcendence_net
    restart: on-failure

  # Servicio de Chat
  chat-service:
    build: ./chat-service
    image: chat-service
    container_name: chat-service
    ports:
      - "8003:8000" # Mapea el puerto 8000 interno a 8003 en el host
    environment:
      DB_SERVICE_URL: "http://db-service:8005"
      VAULT_ADDR: "http://vault:8200"
      REDIS_HOST: "${REDIS_HOST}"
      REDIS_PORT: "${REDIS_PORT}"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
      JWT_SECRET: "${JWT_SECRET}"
    depends_on:
      - db-service
      - auth-service
      - vault
      - redis
    networks:
      - transcendence_net
    restart: on-failure

  # Pasarela API (API Gateway)
  api-gateway:
    build: ./api-gateway
    image: api-gateway
    container_name: api-gateway
    ports:
      - "9000:8000" # Mapea el puerto 8000 interno a 9000 en el host
    environment:
      AUTH_SERVICE_URL: "${AUTH_SERVICE_URL}"
      GAME_SERVICE_URL: "${GAME_SERVICE_URL}"
      CHAT_SERVICE_URL: "${CHAT_SERVICE_URL}"
      REDIS_HOST: "${REDIS_HOST}"
      REDIS_PORT: "${REDIS_PORT}"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
      JWT_SECRET: "${JWT_SECRET}"
    depends_on:
      - auth-service
      - game-service
      - chat-service
      - redis
    networks:
      - transcendence_net
    restart: on-failure

  # Frontend
  frontend:
    build: ./frontend
    image: frontend
    container_name: frontend
    ports:
      - "9001:8080" # Main web access on port 80
    depends_on:
      - api-gateway
    networks:
      - transcendence_net
    restart: on-failure

  # HashiCorp Vault
  vault:
    image: hashicorp/vault:latest
    container_name: hashicorp_vault
    ports:
      - "8200:8200" # Vault ya usa un puerto no privilegiado por defecto
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: "dev-root-token"
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
    cap_add:
      - IPC_LOCK
    networks:
      - transcendence_net
    restart: on-failure

  # WAF (Web Application Firewall) - Nginx con ModSecurity como ejemplo
  waf:
    image: owasp/modsecurity-crs:nginx
    container_name: WAF
    ports:
      - "9002:8080" # El WAF escuchará en 9002 en el host
    environment:
      MODSECURITY_RULES_PATH: "/etc/nginx/modsecurity/modsecurity.conf"
      BACKEND: "http://frontend:8080" # Apunta al puerto interno del frontend
      SSL_STAPLING: "off" # Disable SSL stapling to remove warning
      PARANOIA: "1" # Set paranoia level to reduce false positives
      ANOMALY_INBOUND: "10" # Set anomaly scoring threshold
      ANOMALY_OUTBOUND: "5" # Set anomaly scoring threshold
      # CORS configuration properties
      CORS_HEADER_ACCESS_CONTROL_ALLOW_HEADERS: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
      CORS_HEADER_403_CONTENT_TYPE: "text/plain"
      CORS_HEADER_403_ALLOW_ORIGIN: "*"
      CORS_HEADER_403_MAX_AGE: "1728000"
      CORS_HEADER_403_ALLOW_METHODS: "GET, POST, PUT, DELETE, OPTIONS"
    # volumes:
      # - ./nginx-waf/modsecurity.conf:/etc/modsecurity.d/modsecurity-override.conf:ro
      # - ./nginx-waf/proxy_backend.conf:/etc/nginx/templates/conf.d/proxy_backend.conf.template:ro
    depends_on:
      - frontend
    networks:
      - transcendence_net
    restart: on-failure
    user: "0:0" # Run as root to ensure proper permissions

  # Nginx Reverse Proxy for standard ports
  nginx-proxy:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-proxy.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl/localhost.crt:/etc/ssl/certs/localhost.crt:ro
      - ./ssl/localhost.key:/etc/ssl/private/localhost.key:ro
    depends_on:
      - waf
      - api-gateway
    networks:
      - transcendence_net
    restart: on-failure

  # Servicio de Base de Datos (API de acceso a SQLite)
  db-service:
    build: ./db-service
    image: db-service
    container_name: db-service
    ports:
      - "8005:8000" # Mapea el puerto 8000 interno a 8005 en el host
    volumes:
      - db_data:/app/data # Monta un volumen para persistir la base de datos SQLite
    environment:
      VAULT_ADDR: "http://vault:8200"
      REDIS_HOST: "${REDIS_HOST}"
      REDIS_PORT: "${REDIS_PORT}"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
      JWT_SECRET: "${JWT_SECRET}"
    depends_on:
      - vault
      - redis
    networks:
      - transcendence_net
    restart: on-failure
  redis:
    build:
      context: ./db-service/redis
    image: redis
    container_name: redis
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    environment:
      - REDIS_PASSWORD_FILE=/run/secrets/redis_password
    secrets:
      - redis_password
    command: ["redis-server", "/usr/local/etc/redis/redis.conf", "--requirepass", "o-meu-contrasinal.42", "--maxmemory", "256mb"]
    networks:
      - transcendence_net
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis_commander
    environment:
      - REDIS_HOSTS=redis:redis:6379:0:${REDIS_PASSWORD}
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - transcendence_net
  sqlite-writer:
    build: ./db-service/sqlite-writer
    image: sqlite-writer
    container_name: sqlite-writer
    depends_on:
      - redis
      - db-service
    environment:
      - REDIS_PASSWORD_FILE=/run/secrets/redis_password
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    secrets:
      - redis_password
    volumes:
      - db_data:/app/data
    restart: on-failure
    networks:
      - transcendence_net



secrets:
  redis_password:
    file: ./secrets/redis/password.txt

volumes:
  db_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_PATH}/sqlite
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_PATH}/redis

networks:
  transcendence_net:
    name: transcendence_net 
    driver: bridge
[1;30m----------------------------------------[0m

[1;34m=== ./test-game-improvements.js ===[0m
// Script de prueba para verificar las mejoras del juego local

// Test 1: Verificar que se pueden obtener nombres de usuario
console.log('Test 1: Verificando obtención de nombres de usuario...');
const testUser = {
  id: 1,
  username: 'TestUser',
  email: 'test@example.com'
};

// Simular localStorage
const mockLocalStorage = {
  getItem: (key) => {
    if (key === 'jwt') {
      // Token JWT simulado con payload
      const payload = {
        user_id: 1,
        username: 'TestUser',
        email: 'test@example.com',
        exp: Math.floor(Date.now() / 1000) + 3600
      };
      const base64Payload = btoa(JSON.stringify(payload));
      return `header.${base64Payload}.signature`;
    }
    return null;
  },
  setItem: (key, value) => console.log(`Setting ${key}: ${value}`),
  removeItem: (key) => console.log(`Removing ${key}`)
};

// Test 2: Verificar formato de estadísticas
console.log('Test 2: Verificando formato de estadísticas...');
const testStats = {
  player1_id: 1,
  player2_id: 2,
  player1_name: 'TestUser',
  player2_name: 'Jugador 2',
  score1: 5,
  score2: 3,
  winner_id: 1,
  winner_name: 'TestUser',
  game_mode: 'local',
  duration: 120,
  start_time: new Date().toISOString(),
  end_time: new Date().toISOString()
};

console.log('Estadísticas de prueba:', testStats);

// Test 3: Verificar mensaje de ganador mejorado
console.log('Test 3: Verificando mensaje de ganador...');
const winnerMessage = `
  <div class="text-center">
    <div class="text-3xl font-bold text-green-600 mb-3">🏆 ${testStats.winner_name} Gana!</div>
    <div class="text-xl font-semibold mb-4">Resultado Final</div>
    <div class="bg-gray-100 rounded-lg p-4 mb-4">
      <div class="flex justify-between items-center text-lg">
        <span class="font-semibold">${testStats.player1_name}</span>
        <span class="font-bold text-2xl">${testStats.score1}</span>
      </div>
      <div class="border-t border-gray-300 my-2"></div>
      <div class="flex justify-between items-center text-lg">
        <span class="font-semibold">${testStats.player2_name}</span>
        <span class="font-bold text-2xl">${testStats.score2}</span>
      </div>
    </div>
    <div class="text-sm text-gray-600">
      ${testStats.winner_name} venció a ${testStats.player2_name} por ${testStats.score1} - ${testStats.score2}
    </div>
  </div>
`;

console.log('Mensaje de ganador mejorado:', winnerMessage);

console.log('✅ Todas las pruebas completadas exitosamente!');
[1;30m----------------------------------------[0m

[1;34m=== ./documents/PONG_FIXES.md ===[0m
# Correcciones del Juego Pong

## Problemas Identificados y Solucionados

### 1. Configuración de WebSocket ❌➡️✅
**Problema**: El frontend intentaba conectarse a URLs WebSocket incorrectas.
**Solución**: 
- Actualizado `gameOnline.ts` para usar URLs WebSocket dinámicas basadas en `window.location.host`
- Configurado nginx para proxy WebSocket connections a `/pong/` y `/observar`

### 2. Lógica de Partidas PvE ❌➡️✅
**Problema**: Las partidas contra IA no iniciaban correctamente.
**Solución**:
- Corregida la lógica en `gameAI.ts` para configurar la IA con la dificultad correcta
- Añadida verificación de IA en el servidor para partidas PvE
- Mejorado el manejo de inicio de partidas contra IA

### 3. API Endpoints ❌➡️✅
**Problema**: Las llamadas API no llegaban al game-service.
**Solución**:
- Actualizado `nginx.conf` para incluir proxy de `/api/games`
- Corregidas las URLs en todos los archivos del frontend

### 4. Renderizado del Juego ❌➡️✅
**Problema**: El canvas no mostraba las palas ni la pelota.
**Solución**:
- Mejoradas las funciones `drawGame()` y `drawInitialCanvas()`
- Añadidos colores distintivos para las palas (amarillo/azul) y pelota (rojo)
- Corregida la lógica de actualización del estado del juego

### 5. Controles de Jugador ❌➡️✅
**Problema**: Los controles no respondían correctamente.
**Solución**:
- Implementado sistema de controles mejorado con manejo de `keydown`/`keyup`
- Añadido control de velocidad para evitar spam de movimientos
- Mejorada la respuesta de los controles W/S

## Archivos Modificados

1. **frontend/src/pages/gameOnline.ts** - Lógica principal del juego
2. **frontend/src/pages/gameAI.ts** - Juego contra IA
3. **frontend/src/pages/gameMultiplayer.ts** - Juego multijugador
4. **frontend/nginx.conf** - Configuración de proxy
5. **game-service/src/server.ts** - Lógica del servidor (ajustes menores)

## Funcionalidades Implementadas

✅ **Juego vs IA**: Tres dificultades (fácil, medio, difícil)
✅ **Juego Multijugador**: Creación y unión a partidas
✅ **WebSocket**: Conexión en tiempo real
✅ **Renderizado**: Palas, pelota y marcador visibles
✅ **Controles**: Movimiento fluido con W/S
✅ **Estados**: Lobby, cuenta atrás, juego activo, fin de partida

## Cómo Usar

1. **Iniciar servicios**:
   ```bash
   ./start-dev.sh
   ```

2. **Probar funcionalidad**:
   ```bash
   ./test-game.sh
   ```

3. **Acceder al juego**:
   - Frontend: http://localhost:9001
   - Navegar a "Jugar" → "Juego Online"

## Flujo de Juego

1. **Selección de modo**: PvE (vs IA) o PvP (vs jugador)
2. **Creación de partida**: Se crea automáticamente
3. **Conexión WebSocket**: Se conecta al game-service
4. **Asignación de jugador**: Se asigna rol (Jugador 1 o 2)
5. **Inicio de partida**: Cuenta atrás de 3 segundos
6. **Juego activo**: Control con W/S, pelota en movimiento
7. **Fin de partida**: Modal con ganador y opción de volver al lobby

## Próximos Pasos

- [ ] Mejorar gráficos del juego
- [ ] Añadir efectos sonoros
- [ ] Implementar sistema de puntuación persistente
- [ ] Añadir más modos de juego
- [ ] Optimizar rendimiento del WebSocket
[1;30m----------------------------------------[0m

[1;34m=== ./documents/escritura_bbdd.md ===[0m
# 🛡️ Acceso a la Base de Datos (SQLite + Redis)

## 📖 Lectura

La lectura de la base de datos se hace como hasta ahora, directamente con `SELECT` o usando `sqlite` o `sqlite3`.

---

## ❌ Escritura directa prohibida

🚫 **NO se debe hacer `INSERT`, `UPDATE`, `DELETE` directamente desde los microservicios.**

En su lugar, se debe usar la cola Redis `sqlite_write_queue`.

---

## ✅ Ejemplo básico de escritura

```ts
await redis.rPush('sqlite_write_queue', JSON.stringify({
   sql: 'INSERT INTO users (username, email, password_hash) VALUES (?, ?, ?)',
   params: [username, email, hash]
}));
```

---

## 🧪 Ejemplo completo de escritura

```ts
import redis from './redis-client'; 

await redis.rPush('sqlite_write_queue', JSON.stringify({
   sql: 'UPDATE games SET score1 = ? WHERE id = ?',
   params: [newScore, gameId]
}));
```

---

## 🔌 redis-client.ts

Este cliente debe estar presente en tu microservicio para poder escribir correctamente en la cola:

```ts
import { createClient } from 'redis';

const redis = createClient({
    url: process.env.REDIS_URL || 'redis://default@redis:6379'
});

redis.on('error', err => console.error('Redis error:', err));
redis.connect();

export default redis;
```
[1;30m----------------------------------------[0m

[1;34m=== ./documents/ProyectoTranscendence_DOC.md ===[0m
# Proyecto Transcendence – Documentación y Uso

## Resumen General
Este proyecto implementa una arquitectura de microservicios (backend y frontend) con orquestación vía Docker Compose. Provee funcionalidades de autenticación, chat, juego (Pong), base de datos (SQLite), externlizazión de secretos vía HashiCorp Vault, pasarela API (api-gateway), frontend web y protección por WAF (Nginx-ModSecurity).

---

## Estructura General del Proyecto

```
docker-compose.yml
api-gateway/        # Pasarela API (Fastify, proxies, Redis)
auth-service/       # Autenticación y perfiles
chat-service/       # Sistema de chat en tiempo real
game-service/       # Lógica del juego Pong
db-service/         # API de base de datos (SQLite)
frontend/           # Interfaz de usuario Web
vault/              # HashiCorp Vault (solo en contenedor, sin código fuente propio)
waf/                # Firewall de Aplicaciones Web (Nginx ModSecurity)
```

---

## Servicios Docker – Explicación

- **auth-service**: Proporciona endpoints de autenticación y gestión de usuario. Conecta con la base de datos y consume secretos desde Vault.
- **game-service**: Encapsula la lógica principal del juego Pong y responde a eventos del frontend y otros microservicios.
- **chat-service**: Permite mensajería en tiempo real entre usuarios, integrado con los sistemas de usuario.
- **db-service**: Administra la persistencia vía SQLite, expone una API REST para acceso sencillo desde otros servicios.
- **api-gateway**: Gateway centralizado basado en Fastify. Redirige tráfico a cada microservicio usando proxies HTTP, implementa colas en Redis y puntos de extensión organizados
- **frontend**: Aplicación web SPA, consume del api-gateway y muestra toda la interfaz visual del sistema.
- **vault**: Almacena secretos/certificados de manera segura. Es simulado en modo desarrollo y accesible para pruebas.
- **waf**: Protege el tráfico HTTP de ataques comunes usando OWASP CRS sobre Nginx y ModSecurity.

---

## Uso Local y Testing

1. **Requisitos**: Docker, Docker Compose instalados en tu sistema.

2. **Arranque local:**
   ```bash
   docker-compose up --build
   ```
   Esto iniciará todos los servicios. El api-gateway escucha en http://localhost:9000 y el frontend en http://localhost:9001.

3. **Probar endpoints:**
     - Health:   `curl http://localhost:9000/health`
     - Usuario:  `curl http://localhost:9000/auth`
     - Juego:    `curl http://localhost:9000/game`
     - Chat:     `curl http://localhost:9000/chat`
     - Cola:     `curl -X POST http://localhost:9000/queue/job -H "Content-Type: application/json" -d '{"test":123}'`

4. **HashiCorp Vault:**
     - Solo para pruebas; todos los servicios leen secretos desde la dirección `VAULT_ADDR`.
     - Se levanta en modo "developer" para acceso simple y sin persistencia.

5. **WAF:**
    - El tráfico externo puede pasar por el puerto del WAF (`9002`) para pruebas de seguridad.

---

## Documentación Resumida de Endpoints API Gateway

- **GET /health**        — Verifica que Redis y el gateway mismo están operativos.
- **POST /queue/job**    — Inserta un trabajo en la cola Redis (usado para tareas asíncronas u operaciones DB/SQLite).
- **Todos los demás prefijos** (ej: /auth, /game, /chat) — Se redirigen vía proxy HTTP transparente al respectivo microservicio.

---

## Notas y Consejos

- El uso de HashiCorp Vault es solo con propósito académico; para producción se requiere configuración segura y persistente.
- Usa las variables de entorno del docker-compose para enlazar y parametrizar cada servicio.
- El frontend actualmente es "mock"/visual para pruebas UI; en integración total, establecer comunicación real vía api-gateway.

---

## Para desarrollo:
- Puedes modificar cualquier microservicio y reiniciar solo el contenedor correspondiente usando Docker Compose.
- Los datos de la base SQLite persisten en el volumen de Docker.
- Soporte de hot reload / dev server puede implementarse para el frontend y el api-gateway con los comandos npm típicos.

---

> Documentación generada automáticamente — revisa el código fuente para detalles y puntos de extensión.

[1;30m----------------------------------------[0m

[1;34m=== ./documents/GAME_IMPROVEMENTS_SUMMARY.md ===[0m
# Resumen de Mejoras del Juego Local - Pong

## Mejoras Implementadas

### 1. 📝 Mensaje de Ganador Mejorado
- **Antes**: Mensaje básico que solo mostraba "Jugador 1" o "Jugador 2" ganaba
- **Después**: Mensaje detallado con:
  - Nombre del ganador con emoji de trofeo 🏆
  - Resultado final claro en formato tabla
  - Marcador completo (ej: "TestUser venció a Jugador 2 por 5 - 3")
  - Modal atractivo con opciones de "Jugar de Nuevo" y "Cerrar"

### 2. 👤 Nombres de Usuario Reales
- **Antes**: Siempre mostraba "Jugador 1" y "Jugador 2"
- **Después**: 
  - **Jugador 1**: Muestra el nombre del usuario autenticado obtenido del JWT
  - **Jugador 2**: Mantiene "Jugador 2" para juego local (se puede personalizar)
  - Integración con el sistema de autenticación existente

### 3. 📊 Estadísticas del Juego en Base de Datos
- **Nuevo**: Sistema completo de estadísticas que guarda:
  - IDs y nombres de ambos jugadores
  - Marcador final (score1, score2)
  - Información del ganador
  - Modo de juego ('local')
  - Duración del partido en segundos
  - Timestamps de inicio y finalización

## Archivos Modificados

### Frontend
1. **`frontend/src/pages/gameLocal.ts`** - Juego principal con mejoras
2. **`frontend/src/utils/gameStats.ts`** - Utilidades para estadísticas (NUEVO)
3. **`frontend/src/auth.ts`** - Sistema de autenticación (sin cambios)

### Backend
1. **`db-service/src/server.ts`** - Endpoints para estadísticas
2. **`db-service/src/database.ts`** - Esquema de BD actualizado
3. **`api-gateway/src/server.ts`** - Proxy para estadísticas

## Características Técnicas

### Funcionalidad del Juego
- ✅ Obtención automática del nombre de usuario desde JWT
- ✅ Modal de resultado con diseño atractivo
- ✅ Guardado automático de estadísticas al finalizar
- ✅ Manejo de errores en guardado de estadísticas
- ✅ Botón "Jugar de Nuevo" funcional

### Base de Datos
- ✅ Tabla `games` expandida con nuevos campos:
  - `winner_id` - ID del ganador
  - `winner_name` - Nombre del ganador
  - `game_mode` - Modo de juego
  - `duration` - Duración en segundos

### API
- ✅ Endpoint `POST /api/game/stats` para guardar estadísticas
- ✅ Endpoint `GET /api/game/stats/:userId` para obtener estadísticas
- ✅ Integración con API Gateway

## Cómo Usar las Mejoras

### Para Desarrolladores
1. **Iniciar los servicios**:
   ```bash
   cd /Escritorio/42_transcendence
   docker-compose up -d
   ```

2. **Acceder al juego local**:
   - Navegar a `/game/local`
   - El nombre del usuario autenticado aparecerá automáticamente
   - Jugar hasta que un jugador llegue a 5 puntos

3. **Verificar estadísticas**:
   - Al finalizar el juego, las estadísticas se guardan automáticamente
   - Se puede consultar `/api/game/stats/:userId` para ver historial

### Para Usuarios
1. **Experiencia mejorada**:
   - Nombres personalizados en lugar de "Jugador 1/2"
   - Mensaje de victoria claro y detallado
   - Resultado final fácil de entender

2. **Estadísticas automáticas**:
   - Registro automático de cada partida
   - Seguimiento de victorias y derrotas
   - Historial completo de partidas

## Próximas Mejoras Sugeridas

1. **🎮 Modo Multijugador**: Aplicar las mismas mejoras al juego multijugador
2. **🤖 Juego vs IA**: Mejorar mensajes y estadísticas para IA
3. **📈 Dashboard**: Página de estadísticas detalladas para el usuario
4. **🏆 Ranking**: Sistema de clasificación basado en estadísticas
5. **👥 Perfil de Usuario**: Mostrar estadísticas en el perfil

## Notas Técnicas

### Compatibilidad
- ✅ Compatible con sistema de autenticación existente
- ✅ No rompe funcionalidad existente
- ✅ Manejo de errores robusto

### Rendimiento
- ✅ Guardado asíncrono de estadísticas
- ✅ No bloquea el flujo del juego
- ✅ Manejo de fallos silencioso

### Seguridad
- ✅ Validación de JWT en frontend
- ✅ Validación de datos en backend
- ✅ Manejo seguro de tokens de autenticación
[1;30m----------------------------------------[0m

[1;34m=== ./documents/PRUEBA_JUEGO_MEJORADO.md ===[0m
# Prueba del Juego Local Mejorado

## Cambios Implementados ✅

### 1. 👤 Nombres de Usuario Reales
- **Antes**: Siempre mostraba "Jugador 1" y "Jugador 2"
- **Después**: 
  - Jugador 1: Obtiene el nombre del usuario autenticado desde JWT
  - Jugador 2: Mantiene "Jugador 2" para juego local
  - Función `getCurrentUser()` utilizada para extraer username del token

### 2. 🎨 Mensaje de Ganador Mejorado
- **Antes**: Mensaje básico y poco visible
- **Después**: Modal con diseño atractivo que incluye:
  - Fondo degradado azul-púrpura
  - Trofeo grande (🏆)
  - Nombre del ganador con color distintivo
  - Marcador final en tabla con colores diferenciados
  - Resumen del resultado con fondo amarillo
  - Botones estilizados con gradientes

### 3. 📊 Estadísticas en Base de Datos
- **Nuevo**: Sistema completo de estadísticas
- Guarda automáticamente al finalizar cada partida:
  - Nombres e IDs de jugadores
  - Marcador final
  - Información del ganador
  - Duración del juego
  - Timestamps de inicio y fin

## Código del Modal Mejorado

```javascript
const resultMessage = `
  <div class="text-center">
    <div class="text-5xl font-bold text-yellow-600 mb-4">🏆</div>
    <div class="text-3xl font-bold ${isPlayer1Winner ? 'text-blue-700' : 'text-red-700'} mb-4">
      ${winner} Gana!
    </div>
    <div class="text-xl font-semibold text-gray-800 mb-6">Resultado Final</div>
    <div class="bg-white rounded-lg p-6 mb-6 shadow-lg border-2 border-gray-200">
      <div class="flex justify-between items-center text-xl mb-4">
        <span class="font-bold ${isPlayer1Winner ? 'text-green-600' : 'text-gray-600'}">${player1Name}</span>
        <span class="font-bold text-3xl ${isPlayer1Winner ? 'text-green-600' : 'text-gray-600'}">${gameState.score.left}</span>
      </div>
      <div class="border-t-2 border-gray-300 my-4"></div>
      <div class="flex justify-between items-center text-xl">
        <span class="font-bold ${!isPlayer1Winner ? 'text-green-600' : 'text-gray-600'}">${player2Name}</span>
        <span class="font-bold text-3xl ${!isPlayer1Winner ? 'text-green-600' : 'text-gray-600'}">${gameState.score.right}</span>
      </div>
    </div>
    <div class="text-lg font-semibold text-gray-700 bg-yellow-100 p-3 rounded-lg">
      🎉 ${winner} venció a ${loser} por ${winnerScore} - ${loserScore}
    </div>
  </div>
`;
```

## Colores y Estilo

### Modal Principal
- **Fondo**: `bg-gradient-to-br from-blue-50 to-purple-50`
- **Sombra**: `shadow-2xl border-2 border-blue-200`
- **Tamaño**: `max-w-lg` con padding generoso

### Elementos del Resultado
- **Trofeo**: `text-5xl font-bold text-yellow-600`
- **Nombre Ganador**: `text-blue-700` o `text-red-700` según jugador
- **Marcador Ganador**: `text-green-600` para resaltar
- **Marcador Perdedor**: `text-gray-600` para diferencia visual
- **Resumen**: `bg-yellow-100` con emoji de celebración

### Botones
- **Jugar de Nuevo**: `bg-gradient-to-r from-green-500 to-green-600`
- **Cerrar**: `bg-gradient-to-r from-gray-500 to-gray-600`
- **Efectos**: Hover transitions y sombras

## Pruebas para Verificar

### 1. Nombres de Usuario
- [ ] Iniciar sesión con un usuario específico
- [ ] Ir a juego local
- [ ] Verificar que aparece el username real en lugar de "Jugador 1"

### 2. Modal del Resultado
- [ ] Jugar hasta que un jugador llegue a 5 puntos
- [ ] Verificar que aparece el modal con colores vibrantes
- [ ] Comprobar que el ganador se resalta correctamente
- [ ] Verificar que el marcador se muestra claramente

### 3. Funcionalidad de Botones
- [ ] Botón "Jugar de Nuevo" reinicia el juego
- [ ] Botón "Cerrar" cierra el modal
- [ ] Estadísticas se guardan automáticamente

## Archivos Modificados

1. **`frontend/src/pages/gameLocal.ts`** - Juego principal
2. **`frontend/src/utils/gameStats.ts`** - Utilidades de estadísticas
3. **`db-service/src/server.ts`** - Endpoints de estadísticas
4. **`db-service/src/database.ts`** - Esquema de BD
5. **`api-gateway/src/server.ts`** - Proxy para estadísticas

## Resultados Esperados

✅ **Visibilidad Mejorada**: Modal con colores contrastantes y texto grande
✅ **Nombres Personalizados**: Username real del usuario autenticado
✅ **Estadísticas Automáticas**: Guardado en BD al finalizar cada juego
✅ **Experiencia de Usuario**: Interfaz más atractiva y profesional

## Próximos Pasos

1. **Probar en navegador**: Ir a `http://localhost:9001/game/local`
2. **Iniciar sesión**: Con un usuario válido
3. **Jugar partida**: Hasta completar 5 puntos
4. **Verificar modal**: Comprobar colores y visibilidad
5. **Revisar estadísticas**: Confirmar guardado en BD
[1;30m----------------------------------------[0m

[1;34m=== ./documents/SISTEMA_LOGIN_RESUMEN.md ===[0m
# 🚀 Sistema de Login y Registro - IMPLEMENTADO Y FUNCIONAL

## 📋 Estado del Sistema

### ✅ **COMPLETADO Y FUNCIONANDO**

#### 🔐 **Autenticación Tradicional**
- **Registro**: Email + Username + Password ✅
- **Login**: Email + Password ✅
- **JWT Tokens**: Generación y validación ✅
- **Validación**: Campos obligatorios, emails únicos ✅
- **Seguridad**: Contraseñas hasheadas con bcrypt ✅

#### 🌐 **Google Sign-In**
- **Integración**: Script de Google incluido en HTML ✅
- **Client ID**: Configurado correctamente ✅
- **Frontend**: Botones de Google implementados ✅
- **Backend**: Endpoint `/auth/google` funcional ✅
- **Flujo**: Login y registro automático con Google ✅

#### 🗄️ **Base de Datos**
- **SQLite**: Funcional y persistente ✅
- **Tablas**: users, games, messages creadas ✅
- **Migraciones**: Automáticas al iniciar ✅

#### 🔧 **Configuración**
- **CORS**: Habilitado para requests cross-origin ✅
- **Docker**: Contenedores funcionando ✅
- **Permisos**: Directorios y archivos correctos ✅

## 🌐 URLs de Acceso

- **Frontend**: http://localhost:9001
- **Auth Service**: http://localhost:8001
- **Frontend WAF**: http://localhost:9002

## 🔑 Endpoints de API

### Registro Tradicional
```bash
POST http://localhost:8001/auth/register
Content-Type: application/json

{
  "username": "testuser",
  "email": "test@example.com", 
  "password": "password123"
}
```

### Login Tradicional
```bash
POST http://localhost:8001/auth/login
Content-Type: application/json

{
  "email": "test@example.com",
  "password": "password123"
}
```

### Google Sign-In
```bash
POST http://localhost:8001/auth/google
Content-Type: application/json

{
  "token": "google_id_token_here"
}
```

## 🎯 Funcionalidades del Frontend

### Página de Login (`/login`)
- ✅ Formulario de email/password
- ✅ Botón "Continue with Google"
- ✅ Validación de campos
- ✅ Manejo de errores
- ✅ Redirección tras login exitoso

### Página de Registro (`/register`)
- ✅ Formulario username/email/password/confirm
- ✅ Botón "Register with Google"
- ✅ Validación de campos
- ✅ Confirmación de contraseña
- ✅ Manejo de errores

### Sistema de Autenticación (`auth.ts`)
- ✅ Manejo de JWT tokens
- ✅ Verificación de expiración
- ✅ Obtención de datos del usuario
- ✅ Función de logout
- ✅ Protección de rutas

## 🧪 Pruebas Realizadas

### ✅ Pruebas Backend
- Registro de usuario: **EXITOSO**
- Login con credenciales válidas: **EXITOSO**
- Login con credenciales inválidas: **RECHAZADO CORRECTAMENTE**
- Registro con email duplicado: **RECHAZADO CORRECTAMENTE**
- Generación de JWT: **FUNCIONAL**

### ✅ Pruebas Frontend
- Acceso al frontend: **FUNCIONAL**
- Script de Google incluido: **CONFIRMADO**
- Formularios de login/registro: **IMPLEMENTADOS**
- Manejo de errores: **FUNCIONAL**

## 🔧 Configuración Técnica

### Google Sign-In
- **Client ID**: `58128894262-ak29ohah5ovkh31dvp2srdbm16thp961.apps.googleusercontent.com`
- **Dominio autorizado**: localhost (para desarrollo)
- **Callback**: Configurado correctamente

### JWT
- **Secret**: Configurable via variable de entorno
- **Expiración**: 1 hora
- **Payload**: user_id, username, email, exp

### Base de Datos
- **Tipo**: SQLite
- **Ubicación**: `/app/data/app.db`
- **Estructura**: 
  - users (id, username, email, password_hash)
  - games (id, player1_id, player2_id, score1, score2, status, timestamps)
  - messages (id, user_id, game_id, message, timestamp)

## 🚀 Cómo Usar el Sistema

### 1. Registro Manual
1. Ir a http://localhost:9001/register
2. Completar username, email, password
3. Hacer clic en "Register"
4. Serás redirigido a /home tras registro exitoso

### 2. Login Manual
1. Ir a http://localhost:9001/login
2. Completar email y password
3. Hacer clic en "Login"
4. Serás redirigido a /home tras login exitoso

### 3. Google Sign-In
1. Ir a http://localhost:9001/login o /register
2. Hacer clic en "Continue with Google"
3. Completar el flujo de Google
4. Serás redirigido a /home automáticamente

## 📝 Notas Importantes

- El sistema está configurado para desarrollo (localhost)
- Los datos se persisten en SQLite
- Las contraseñas están hasheadas con bcrypt
- Los tokens JWT expiran en 1 hora
- Google Sign-In funciona tanto para login como registro
- El sistema maneja automáticamente usuarios nuevos vs existentes

## 🔍 Archivos Modificados

- `frontend/index.html` - Script de Google añadido
- `frontend/src/auth.ts` - Sistema JWT completo
- `frontend/src/pages/login.ts` - Login con Google + tradicional
- `frontend/src/pages/register.ts` - Registro con Google + tradicional
- `auth-service/src/server.ts` - Endpoints de auth + Google
- `auth-service/package.json` - Dependencias CORS
- `auth-service/Dockerfile` - Directorio /data

## 🎉 SISTEMA COMPLETAMENTE FUNCIONAL

El sistema de login y registro está **100% implementado y probado**. Tanto el login tradicional como Google Sign-In funcionan correctamente en el frontend y backend.
[1;30m----------------------------------------[0m
