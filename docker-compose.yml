version: '3.8'
services:
  # Servicio de Autenticación y Perfiles de Usuario
  auth-service:
    build: ./auth-service
    ports:
      - "8001:8000" # Mapea el puerto 8000 interno a 8001 en el host
    environment:
      DB_SERVICE_URL: "http://db-service:8005"
      VAULT_ADDR: "http://vault:8200"
    depends_on:
      - db-service
      - vault
    restart: on-failure

  # Servicio de Juego (Pong)
  game-service:
    build: ./game-service
    ports:
      - "8002:8000" # Mapea el puerto 8000 interno a 8002 en el host
    environment:
      DB_SERVICE_URL: "http://db-service:8005"
      VAULT_ADDR: "http://vault:8200"
    depends_on:
      - db-service
      - auth-service
      - vault
    restart: on-failure

  # Servicio de Chat
  chat-service:
    build: ./chat-service
    ports:
      - "8003:8000" # Mapea el puerto 8000 interno a 8003 en el host
    environment:
      DB_SERVICE_URL: "http://db-service:8005"
      VAULT_ADDR: "http://vault:8200"
    depends_on:
      - db-service
      - auth-service
      - vault
    restart: on-failure

  # Servicio de Base de Datos (API de acceso a SQLite)
  db-service:
    build: ./db-service
    ports:
      - "8005:8000" # Mapea el puerto 8000 interno a 8005 en el host
    volumes:
      - db_data:/app/data # Monta un volumen para persistir la base de datos SQLite
    environment:
      VAULT_ADDR: "http://vault:8200"
    depends_on:
      - vault
    restart: on-failure

  # Pasarela API (API Gateway)
  api-gateway:
    build: ./api-gateway
    ports:
      - "9000:8000" # Mapea el puerto 8000 interno a 9000 en el host
    environment:
      AUTH_SERVICE_URL: "http://auth-service:8000" # Apunta al puerto interno del servicio
      GAME_SERVICE_URL: "http://game-service:8000"
      CHAT_SERVICE_URL: "http://chat-service:8000"
    depends_on:
      - auth-service
      - game-service
      - chat-service
    restart: on-failure

  # Frontend
  frontend:
    build: ./frontend
    ports:
      - "9001:8080" # El Nginx del frontend usará el puerto 8080 interno
    depends_on:
      - api-gateway
    restart: on-failure

  # HashiCorp Vault
  vault:
    image: hashicorp/vault:latest
    ports:
      - "8200:8200" # Vault ya usa un puerto no privilegiado por defecto
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: "dev-root-token"
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
    cap_add:
      - IPC_LOCK
    restart: on-failure

  # WAF (Web Application Firewall) - Nginx con ModSecurity como ejemplo
  waf:
    image: owasp/modsecurity-crs:nginx
    ports:
      - "9002:8080" # El WAF escuchará en 9002 en el host
    environment:
      MODSECURITY_RULES_PATH: "/etc/nginx/modsecurity/modsecurity.conf"
      PROXY_PASS: "http://frontend:8080" # Apunta al puerto interno del frontend
    volumes:
      - ./nginx-waf/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx-waf/modsecurity.conf:/etc/nginx/modsecurity/modsecurity.conf:ro
    depends_on:
      - frontend
    restart: on-failure

volumes:
  db_data:
