[1;32m=== ESTRUCTURA DE DIRECTORIOS ===[0m
.
├── src
│   ├── controllers
│   │   ├── friends.controller.ts
│   │   └── games.controller.ts
│   ├── routes
│   │   ├── friends.routes.ts
│   │   └── games.routes.ts
│   ├── services
│   │   ├── friends.services.ts
│   │   └── games.services.ts
│   ├── utils
│   │   └── auth-middleware.ts
│   ├── database.ts
│   ├── redis-client.ts
│   └── server.ts
├── Dockerfile
├── auth.txt
├── package-lock.json
├── package.json
├── print_tree.sh
└── tsconfig.json

6 directories, 16 files

[1;32m=== CONTENIDO DE ARCHIVOS DE TEXTO ===[0m

[1;34m=== ./auth.txt ===[0m
[1;30m----------------------------------------[0m

[1;34m=== ./tsconfig.json ===[0m
{
  "compilerOptions": {
    "target": "es2021",
    "module": "CommonJS",
    "outDir": "./dist",
    "strict": true,
    "esModuleInterop": true,
    "skipLibCheck": true,
    "forceConsistentCasingInFileNames": true
  },
  "include": ["src/**/*.ts"],
  "exclude": ["node_modules"]
}
[1;30m----------------------------------------[0m

[1;34m=== ./print_tree.sh ===[0m
#!/bin/bash

# Función para detectar si un archivo es de texto
is_text_file() {
  file -b --mime-encoding "$1" | grep -q -v 'binary'
}

# Mostrar estructura de directorios (excluyendo .git, node_modules, styles y pages)
echo -e "\033[1;32m=== ESTRUCTURA DE DIRECTORIOS ===\033[0m"
tree -a -I '.git|node_modules' --dirsfirst

# Mostrar contenido de archivos de texto, ignorando .git, node_modules, styles y pages
echo -e "\n\033[1;32m=== CONTENIDO DE ARCHIVOS DE TEXTO ===\033[0m"
find . -type f \
  ! -path '*/.git/*' \
  ! -path '*/print-tree.sh' \
  ! -path '*/README.md' \
  ! -path '*/node_modules/*' \
  | while read -r file; do
    if is_text_file "$file"; then
      echo -e "\n\033[1;34m=== $file ===\033[0m"
      cat "$file"
      echo -e "\033[1;30m----------------------------------------\033[0m"
    else
      echo -e "\n\033[1;31m=== $file (archivo binario, omitido) ===\033[0m"
    fi
done



  # ! -path '*/.api-gateway/src/*' \
  # ! -path '*/.api-gateway/package.json' \
  # ! -path '*/.api-gateway/tsconfig.json' \
  # ! -path '*/.chat-service/src/*' \
  # ! -path '*/.chat-service/package.json' \
  # ! -path '*/.chat-service/tsconfig.json' \
  # ! -path '*/frontend/src/*' \
  # ! -path '*/frontend/package.json' \
  # ! -path '*/frontend/tailwind.config.js' \
  # ! -path '*/frontend/tsconfig.json' \
  # ! -path '*/frontend/webpack.config.js' \
  # ! -path '*/game-service/tsconfig.json' \
  # ! -path '*/game-service/package.json' \
  # ! -path '*/game-service/src/*' \[1;30m----------------------------------------[0m

[1;34m=== ./src/database.ts ===[0m
import sqlite3 from 'sqlite3';
import { open, Database } from 'sqlite'; // Importar Database de sqlite
import path from 'path';

// Asegúrate de que el directorio 'data' exista en la raíz del proyecto para la persistencia.
// Docker montará un volumen aquí.
const DB_PATH = path.join(__dirname, '../data/app.db');

export async function openDb(): Promise<Database> { // Especificar tipo de retorno
    return open({
        filename: DB_PATH,
        driver: sqlite3.Database
    });
}

export async function initializeDb() {
    const db = await openDb();
    try {
        await db.exec(`
            CREATE TABLE IF NOT EXISTS users ( id INTEGER PRIMARY KEY AUTOINCREMENT, username TEXT UNIQUE NOT NULL, email TEXT UNIQUE NOT NULL, password_hash TEXT, google_id TEXT UNIQUE, intra_id TEXT UNIQUE, is_active BOOLEAN DEFAULT 1, is_admin BOOLEAN DEFAULT 0, last_login DATETIME, created_at DATETIME DEFAULT CURRENT_TIMESTAMP);
            CREATE TABLE IF NOT EXISTS user_profiles ( user_id INTEGER PRIMARY KEY, avatar_url TEXT, language TEXT DEFAULT 'es', notifications TEXT DEFAULT 'true', sound TEXT DEFAULT 'true', difficulty TEXT DEFAULT 'normal', FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE);
            CREATE TABLE IF NOT EXISTS sessions ( id INTEGER PRIMARY KEY AUTOINCREMENT, user_id INTEGER NOT NULL, session_token TEXT UNIQUE NOT NULL, expires_at DATETIME NOT NULL, created_at DATETIME DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE);
            CREATE TABLE IF NOT EXISTS friendships ( id INTEGER PRIMARY KEY AUTOINCREMENT, requester_id INTEGER NOT NULL, approver_id INTEGER, status TEXT DEFAULT 'pending', created_at DATETIME DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (requester_id) REFERENCES users(id) ON DELETE CASCADE, FOREIGN KEY (approver_id) REFERENCES users(id) ON DELETE CASCADE);
            CREATE TABLE IF NOT EXISTS chat_messages ( id INTEGER PRIMARY KEY AUTOINCREMENT, sender_id INTEGER NOT NULL, receiver_id INTEGER, message TEXT NOT NULL, sent_at DATETIME DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (sender_id) REFERENCES users(id) ON DELETE CASCADE, FOREIGN KEY (receiver_id) REFERENCES users(id) ON DELETE CASCADE);
            CREATE TABLE IF NOT EXISTS tournaments ( id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT NOT NULL, created_by INTEGER, status TEXT DEFAULT 'upcoming', created_at DATETIME DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (created_by) REFERENCES users(id) ON DELETE SET NULL);
            CREATE TABLE IF NOT EXISTS games ( id INTEGER PRIMARY KEY AUTOINCREMENT, tournament_id INTEGER, match TEXT, status TEXT DEFAULT 'pending', started_at DATETIME, finished_at DATETIME, FOREIGN KEY (tournament_id) REFERENCES tournaments(id) ON DELETE SET NULL);
            CREATE TABLE IF NOT EXISTS participants ( id INTEGER PRIMARY KEY AUTOINCREMENT, game_id INTEGER NOT NULL, user_id INTEGER, is_bot BOOLEAN DEFAULT 0, is_winner BOOLEAN DEFAULT 0, team_name TEXT NOT NULL, FOREIGN KEY (game_id) REFERENCES games(id) ON DELETE CASCADE, FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE SET NULL);
            CREATE TABLE IF NOT EXISTS scores (id INTEGER PRIMARY KEY AUTOINCREMENT, game_id INTEGER NOT NULL, scorer_id INTEGER, team_name TEXT NOT NULL, point_number INTEGER NOT NULL, timestamp DATETIME DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (game_id) REFERENCES games(id) ON DELETE CASCADE,  FOREIGN KEY (scorer_id) REFERENCES users(id) ON DELETE SET NULL);
            
            INSERT OR IGNORE INTO users (id, username, email, password_hash, created_at) VALUES (1, 'Manu', 'ardeiro@outlook.com', '$2b$12$U.2UHoDtA3/oeQHQIrznVuBokjoVRTfdv2zM7Qv7E3H0AldZ1Qhbe', datetime('now', '-1 days'));
            INSERT OR IGNORE INTO users (id, username, email, password_hash, created_at) VALUES (2, 'Ardeiro', 'ardeiro@gmail.com', '$2b$12$/1r9td3OkeutXq16OoALGuUeEO/nCCX4AwLvFJ2ZYZNWEuzkMyzEG', datetime('now', '-2 days'));
            INSERT OR IGNORE INTO users (id, username, email, password_hash, created_at) VALUES (3, 'HAL7000', 'manuel.ardeiro@gmail.com', '$2b$12$RagfU1ULf9zvoZBRqcQ5XOb.EgZybLX2mfr9W3gaKYiWiTUzi5sC6', datetime('now', '-3 days'));
            INSERT OR IGNORE INTO users (id, username, email, password_hash, created_at) VALUES (4, 'Verdu', 'jorge.verdu.ruiz@gmail.com', '$2b$12$fmkXJsqahw1S9bM8fQ6G3uhnDCfrLZlUwvKlKmr5SASA7AbX6kQZq', datetime('now', '-4 days'));
            INSERT OR IGNORE INTO users (id, username, email, password_hash, created_at) VALUES (5, 'David', 'david.aparicio247@hotmail.com', '$2b$12$iASlBV76WELxwwjOUmWeM.FjqHuDhkWQEEbTBBNRZb4B6/tEfyCmC', datetime('now', '-5 days'));
            INSERT OR IGNORE INTO users (id, username, email, password_hash, created_at) VALUES (6, 'ManuFern', 'manufern@student.42madrid.com', '$2b$12$1Mqudh5FrajQHKxtBOG26O/dL47xnZrbbQ8HjcipegON1NQdMFXou', datetime('now', '-6 days'));
            INSERT OR IGNORE INTO users (id, username, email, password_hash, created_at) VALUES (7, 'Diego', 'diegorubiomorato@gmail.com', '$2b$12$SC.8HYivrjOrLQQscZz7SuBNY4vodoHRh.cWXQ0htB/vBBJxblJPa', datetime('now', '-7 days'));

            INSERT OR IGNORE INTO user_profiles (user_id, avatar_url, language, notifications, sound, difficulty) VALUES (1, NULL, 'es', 'true', 'true', 'normal');
            INSERT OR IGNORE INTO user_profiles (user_id, avatar_url, language, notifications, sound, difficulty) VALUES (2, NULL, 'gl', 'true', 'true', 'normal');
            INSERT OR IGNORE INTO user_profiles (user_id, avatar_url, language, notifications, sound, difficulty) VALUES (3, NULL, 'en', 'true', 'true', 'normal');
            INSERT OR IGNORE INTO user_profiles (user_id, avatar_url, language, notifications, sound, difficulty) VALUES (4, NULL, 'es', 'true', 'true', 'normal');
            INSERT OR IGNORE INTO user_profiles (user_id, avatar_url, language, notifications, sound, difficulty) VALUES (5, NULL, 'en', 'true', 'true', 'normal');
            INSERT OR IGNORE INTO user_profiles (user_id, avatar_url, language, notifications, sound, difficulty) VALUES (6, NULL, 'es', 'true', 'true', 'normal');
            INSERT OR IGNORE INTO user_profiles (user_id, avatar_url, language, notifications, sound, difficulty) VALUES (7, NULL, 'en', 'true', 'true', 'normal');

            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (1, 1, 2, 'pending', datetime('now', '-1 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (2, 1, 4, 'accepted', datetime('now', '-2 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (3, 1, 6, 'accepted', datetime('now', '-3 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (4, 2, 3, 'accepted', datetime('now', '-4 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (5, 2, 4, 'accepted', datetime('now', '-5 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (6, 2, 5, 'pending', datetime('now', '-6 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (7, 7, 2, 'pending', datetime('now', '-7 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (8, 3, 1, 'accepted', datetime('now', '-8 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (9, 3, 4, 'accepted', datetime('now', '-9 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (10, 3, 6, 'pending', datetime('now', '-9 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (10, 5, 4, 'accepted', datetime('now', '-10 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (11, 4, 7, 'accepted', datetime('now', '-11 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (12, 5, 6, 'accepted', datetime('now', '-12 hours'));
            INSERT OR IGNORE INTO friendships (id, requester_id, approver_id, status, created_at) VALUES (13, 6, 7, 'accepted', datetime('now', '-13 hours'));

            INSERT OR IGNORE INTO tournaments (id, name, created_by, status, created_at) VALUES (1, 'Torneo Relámpago', 1, 'finished', datetime('now', '-1 days'));
            INSERT OR IGNORE INTO games (id, tournament_id, match, status, started_at, finished_at) VALUES (1, 1, '1/2(1)', 'finished', datetime('now', '-1 days', '15:00:00'), datetime('now', '-1 days', '15:00:00', '+7 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (1, 1, 2, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (2, 1, 3, 0, 0, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (1, 1, 2, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (2, 1, 3, 'Team B', 3);
            INSERT OR IGNORE INTO games (id, tournament_id, match, status, started_at, finished_at) VALUES (2, 1, '1/2(2)', 'finished', datetime('now', '-1 days', '15:08:00'), datetime('now', '-1 days', '15:08:00', '+9 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (3, 2, 4, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (4, 2, 5, 0, 0, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (3, 2, 4, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (4, 2, 5, 'Team B', 2);
            INSERT OR IGNORE INTO games (id, tournament_id, match, status, started_at, finished_at) VALUES (3, 1, 'Final', 'finished', datetime('now', '-1 days', '15:18:00'), datetime('now', '-1 days', '15:18:00', '+11 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (5, 3, 2, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (6, 3, 4, 0, 0, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (5, 3, 2, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (6, 3, 4, 'Team B', 4);

            INSERT OR IGNORE INTO tournaments (id, name, created_by, status, created_at) VALUES (2, 'Copa Velocidad', 3, 'finished', datetime('now', '-2 days'));
            INSERT OR IGNORE INTO games (id, tournament_id, match, status, started_at, finished_at) VALUES (4, 2, '1/2(1)', 'finished', datetime('now', '-2 days', '16:00:00'), datetime('now', '-2 days', '16:00:00', '+5 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (7, 4, 1, 0, 0, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (8, 4, 5, 0, 1, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (7, 4, 1, 'Team A', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (8, 4, 5, 'Team B', 5);
            INSERT OR IGNORE INTO games (id, tournament_id, match, status, started_at, finished_at) VALUES (5, 2, '1/2(2)', 'finished', datetime('now', '-2 days', '16:06:00'), datetime('now', '-2 days', '16:06:00', '+12 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (9, 5, 6, 0, 0, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (10, 5, 7, 0, 1, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (9, 5, 6, 'Team A', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (10, 5, 7, 'Team B', 5);
            INSERT OR IGNORE INTO games (id, tournament_id, match, status, started_at, finished_at) VALUES (6, 2, 'Final', 'finished', datetime('now', '-2 days', '16:19:00'), datetime('now', '-2 days', '16:19:00', '+8 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (11, 6, 5, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (12, 6, 7, 0, 0, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (11, 6, 5, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (12, 6, 7, 'Team B', 3);

            INSERT OR IGNORE INTO tournaments (id, name, created_by, status, created_at) VALUES (3, 'Torneo Express', 2, 'finished', datetime('now', '-3 days'));
            INSERT OR IGNORE INTO games (id, tournament_id, match, status, started_at, finished_at) VALUES (7, 3, '1/2(1)', 'finished', datetime('now', '-3 days', '17:30:00'), datetime('now', '-3 days', '17:30:00', '+4 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (13, 7, 3, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (14, 7, 4, 0, 0, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (13, 7, 3, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (14, 7, 4, 'Team B', 1);
            INSERT OR IGNORE INTO games (id, tournament_id, match, status, started_at, finished_at) VALUES (8, 3, '1/2(2)', 'finished', datetime('now', '-3 days', '17:35:00'), datetime('now', '-3 days', '17:35:00', '+14 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (15, 8, 1, 0, 0, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (16, 8, 7, 0, 1, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (15, 8, 1, 'Team A', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (16, 8, 7, 'Team B', 5);
            INSERT OR IGNORE INTO games (id, tournament_id, match, status, started_at, finished_at) VALUES (9, 3, 'Final', 'finished', datetime('now', '-3 days', '17:50:00'), datetime('now', '-3 days', '17:50:00', '+9 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (17, 9, 3, 0, 0, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (18, 9, 7, 0, 1, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (17, 9, 3, 'Team A', 4);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (18, 9, 7, 'Team B', 5);

            INSERT OR IGNORE INTO tournaments (id, name, created_by, status, created_at) VALUES (4, 'Desafío Rápido', 5, 'finished', datetime('now', '-4 days'));
            INSERT OR IGNORE INTO games (id, tournament_id, match, status, started_at, finished_at) VALUES (10, 4, '1/2(1)', 'finished', datetime('now', '-4 days', '18:00:00'), datetime('now', '-4 days', '18:00:00', '+6 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (19, 10, 2, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (20, 10, 6, 0, 0, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (19, 10, 2, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (20, 10, 6, 'Team B', 2);
            INSERT OR IGNORE INTO games (id, tournament_id, match, status, started_at, finished_at) VALUES (11, 4, '1/2(2)', 'finished', datetime('now', '-4 days', '18:07:00'), datetime('now', '-4 days', '18:07:00', '+11 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (21, 11, 4, 0, 0, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (22, 11, 5, 0, 1, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (21, 11, 4, 'Team A', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (22, 11, 5, 'Team B', 5);
            INSERT OR IGNORE INTO games (id, tournament_id, match, status, started_at, finished_at) VALUES (12, 4, 'Final', 'finished', datetime('now', '-4 days', '18:19:00'), datetime('now', '-4 days', '18:19:00', '+7 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (23, 12, 2, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (24, 12, 5, 0, 0, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (23, 12, 2, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (24, 12, 5, 'Team B', 4);

            INSERT OR IGNORE INTO tournaments (id, name, created_by, status, created_at) VALUES (5, 'Torneo Flash', 7, 'finished', datetime('now', '-5 days'));
            INSERT OR IGNORE INTO games (id, tournament_id, match, status, started_at, finished_at) VALUES (13, 5, '1/2(1)', 'finished', datetime('now', '-5 days', '19:00:00'), datetime('now', '-5 days', '19:00:00', '+10 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (25, 13, 1, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (26, 13, 3, 0, 0, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (25, 13, 1, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (26, 13, 3, 'Team B', 2);
            INSERT OR IGNORE INTO games (id, tournament_id, match, status, started_at, finished_at) VALUES (14, 5, '1/2(2)', 'finished', datetime('now', '-5 days', '19:11:00'), datetime('now', '-5 days', '19:11:00', '+5 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (27, 14, 6, 0, 0, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (28, 14, 7, 0, 1, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (27, 14, 6, 'Team A', 1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (28, 14, 7, 'Team B', 5);
            INSERT OR IGNORE INTO games (id, tournament_id, match, status, started_at, finished_at) VALUES (15, 5, 'Final', 'finished', datetime('now', '-5 days', '19:17:00'), datetime('now', '-5 days', '19:17:00', '+12 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (29, 15, 1, 0, 0, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (30, 15, 7, 0, 1, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (29, 15, 1, 'Team A', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (30, 15, 7, 'Team B', 5);
            
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (16, 'finished', datetime('now', '-10 hours'), datetime('now', '-10 hours', '+8 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (31, 16, 1, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (32, 16, 2, 0, 0, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (31, 16, 1, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (32, 16, 2, 'Team B', 3);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (17, 'finished', datetime('now', '-15 hours'), datetime('now', '-15 hours', '+12 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (33, 17, 3, 0, 0, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (34, 17, 4, 0, 1, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (33, 17, 3, 'Team A', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (34, 17, 4, 'Team B', 5);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (18, 'finished', datetime('now', '-20 hours'), datetime('now', '-20 hours', '+6 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (35, 18, 5, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (36, 18, 6, 0, 0, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (35, 18, 5, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (36, 18, 6, 'Team B', 4);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (19, 'finished', datetime('now', '-25 hours'), datetime('now', '-25 hours', '+14 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (37, 19, 7, 0, 0, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (38, 19, 1, 0, 1, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (37, 19, 7, 'Team A', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (38, 19, 1, 'Team B', 5);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (20, 'finished', datetime('now', '-30 hours'), datetime('now', '-30 hours', '+7 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (39, 20, 2, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (40, 20, 3, 0, 0, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (39, 20, 2, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (40, 20, 3, 'Team B', 2);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (21, 'finished', datetime('now', '-35 hours'), datetime('now', '-35 hours', '+9 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (41, 21, 4, 0, 0, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (42, 21, 5, 0, 1, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (41, 21, 4, 'Team A', 4);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (42, 21, 5, 'Team B', 5);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (22, 'finished', datetime('now', '-40 hours'), datetime('now', '-40 hours', '+11 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (43, 22, 6, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (44, 22, 7, 0, 0, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (43, 22, 6, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (44, 22, 7, 'Team B', 3);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (23, 'finished', datetime('now', '-45 hours'), datetime('now', '-45 hours', '+5 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (45, 23, 1, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (46, 23, 3, 0, 0, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (45, 23, 1, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (46, 23, 3, 'Team B', 0);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (24, 'finished', datetime('now', '-50 hours'), datetime('now', '-50 hours', '+13 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (47, 24, 2, 0, 0, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (48, 24, 4, 0, 1, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (47, 24, 2, 'Team A', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (48, 24, 4, 'Team B', 5);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (25, 'finished', datetime('now', '-55 hours'), datetime('now', '-55 hours', '+8 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (49, 25, 5, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (50, 25, 6, 0, 0, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (49, 25, 5, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (50, 25, 6, 'Team B', 4);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (26, 'finished', datetime('now', '-60 hours'), datetime('now', '-60 hours', '+10 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (51, 26, 7, 0, 0, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (52, 26, 1, 0, 1, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (51, 26, 7, 'Team A', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (52, 26, 1, 'Team B', 5);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (27, 'finished', datetime('now', '-65 hours'), datetime('now', '-65 hours', '+7 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (53, 27, 3, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (54, 27, 5, 0, 0, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (53, 27, 3, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (54, 27, 5, 'Team B', 2);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (28, 'finished', datetime('now', '-70 hours'), datetime('now', '-70 hours', '+14 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (55, 28, 2, 0, 0, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (56, 28, 6, 0, 1, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (55, 28, 2, 'Team A', 4);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (56, 28, 6, 'Team B', 5);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (29, 'finished', datetime('now', '-75 hours'), datetime('now', '-75 hours', '+6 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (57, 29, 4, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (58, 29, 7, 0, 0, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (57, 29, 4, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (58, 29, 7, 'Team B', 1);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (30, 'finished', datetime('now', '-80 hours'), datetime('now', '-80 hours', '+9 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (59, 30, 1, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (60, 30, 5, 0, 0, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (59, 30, 1, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (60, 30, 5, 'Team B', 3);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (31, 'finished', datetime('now', '-85 hours'), datetime('now', '-85 hours', '+11 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (61, 31, 6, 0, 0, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (62, 31, 2, 0, 1, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (61, 31, 6, 'Team A', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (62, 31, 2, 'Team B', 5);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (32, 'finished', datetime('now', '-90 hours'), datetime('now', '-90 hours', '+5 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (63, 32, 3, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (64, 32, 7, 0, 0, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (63, 32, 3, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (64, 32, 7, 'Team B', 0);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (33, 'finished', datetime('now', '-95 hours'), datetime('now', '-95 hours', '+13 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (65, 33, 4, 0, 0, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (66, 33, 1, 0, 1, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (65, 33, 4, 'Team A', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (66, 33, 1, 'Team B', 5);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (34, 'finished', datetime('now', '-100 hours'), datetime('now', '-100 hours', '+8 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (67, 34, 5, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (68, 34, 3, 0, 0, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (67, 34, 5, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (68, 34, 3, 'Team B', 2);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (35, 'finished', datetime('now', '-105 hours'), datetime('now', '-105 hours', '+12 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (69, 35, 6, 0, 0, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (70, 35, 7, 0, 1, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (69, 35, 6, 'Team A', 4);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (70, 35, 7, 'Team B', 5);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (36, 'finished', datetime('now', '-110 hours'), datetime('now', '-110 hours', '+6 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (71, 36, 1, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (72, 36, 4, 0, 0, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (71, 36, 1, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (72, 36, 4, 'Team B', 1);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (37, 'finished', datetime('now', '-115 hours'), datetime('now', '-115 hours', '+9 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (73, 37, 2, 0, 0, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (74, 37, 5, 0, 1, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (73, 37, 2, 'Team A', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (74, 37, 5, 'Team B', 5);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (38, 'finished', datetime('now', '-120 hours'), datetime('now', '-120 hours', '+11 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (75, 38, 3, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (76, 38, 6, 0, 0, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (75, 38, 3, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (76, 38, 6, 'Team B', 4);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (39, 'finished', datetime('now', '-125 hours'), datetime('now', '-125 hours', '+5 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (77, 39, 7, 0, 0, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (78, 39, 1, 0, 1, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (77, 39, 7, 'Team A', 0);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (78, 39, 1, 'Team B', 5);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (40, 'finished', datetime('now', '-130 hours'), datetime('now', '-130 hours', '+13 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (79, 40, 4, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (80, 40, 2, 0, 0, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (79, 40, 4, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (80, 40, 2, 'Team B', 3);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (41, 'finished', datetime('now', '-135 hours'), datetime('now', '-135 hours', '+8 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (81, 41, 5, 0, 0, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (82, 41, 6, 0, 1, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (81, 41, 5, 'Team A', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (82, 41, 6, 'Team B', 5);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (42, 'finished', datetime('now', '-140 hours'), datetime('now', '-140 hours', '+10 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (83, 42, 7, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (84, 42, 3, 0, 0, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (83, 42, 7, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (84, 42, 3, 'Team B', 4);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (43, 'finished', datetime('now', '-145 hours'), datetime('now', '-145 hours', '+7 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (85, 43, 1, 0, 0, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (86, 43, 2, 0, 1, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (85, 43, 1, 'Team A', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (86, 43, 2, 'Team B', 5);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (44, 'finished', datetime('now', '-150 hours'), datetime('now', '-150 hours', '+14 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (87, 44, 3, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (88, 44, 4, 0, 0, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (87, 44, 3, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (88, 44, 4, 'Team B', 2);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (45, 'finished', datetime('now', '-155 hours'), datetime('now', '-155 hours', '+6 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (89, 45, 5, 0, 0, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (90, 45, 6, 0, 1, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (89, 45, 5, 'Team A', 1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (90, 45, 6, 'Team B', 5);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (46, 'finished', datetime('now', '-160 hours'), datetime('now', '-160 hours', '+9 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (91, 46, 7, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (92, 46, 1, 0, 0, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (91, 46, 7, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (92, 46, 1, 'Team B', 3);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (47, 'finished', datetime('now', '-165 hours'), datetime('now', '-165 hours', '+11 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (93, 47, 2, 0, 0, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (94, 47, 3, 0, 1, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (93, 47, 2, 'Team A', 4);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (94, 47, 3, 'Team B', 5);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (48, 'finished', datetime('now', '-170 hours'), datetime('now', '-170 hours', '+5 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (95, 48, 4, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (96, 48, 5, 0, 0, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (95, 48, 4, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (96, 48, 5, 'Team B', 0);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (49, 'finished', datetime('now', '-175 hours'), datetime('now', '-175 hours', '+13 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (97, 49, 6, 0, 0, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (98, 49, 7, 0, 1, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (97, 49, 6, 'Team A', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (98, 49, 7, 'Team B', 5);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (50, 'finished', datetime('now', '-180 hours'), datetime('now', '-180 hours', '+8 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (99, 50, 1, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (100, 50, 5, 0, 0, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (99, 50, 1, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (100, 50, 5, 'Team B', 2);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (51, 'finished', datetime('now', '-185 hours'), datetime('now', '-185 hours', '+12 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (101, 51, 2, 0, 0, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (102, 51, 6, 0, 1, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (101, 51, 2, 'Team A', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (102, 51, 6, 'Team B', 5);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (52, 'finished', datetime('now', '-190 hours'), datetime('now', '-190 hours', '+6 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (103, 52, 3, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (104, 52, 7, 0, 0, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (103, 52, 3, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (104, 52, 7, 'Team B', 1);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (53, 'finished', datetime('now', '-195 hours'), datetime('now', '-195 hours', '+9 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (105, 53, 4, 0, 0, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (106, 53, 1, 0, 1, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (105, 53, 4, 'Team A', 4);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (106, 53, 1, 'Team B', 5);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (54, 'finished', datetime('now', '-200 hours'), datetime('now', '-200 hours', '+11 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (107, 54, 5, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (108, 54, 2, 0, 0, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (107, 54, 5, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (108, 54, 2, 'Team B', 3);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (55, 'finished', datetime('now', '-205 hours'), datetime('now', '-205 hours', '+5 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (109, 55, 6, 0, 0, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (110, 55, 3, 0, 1, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (109, 55, 6, 'Team A', 0);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (110, 55, 3, 'Team B', 5);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (56, 'finished', datetime('now', '-210 hours'), datetime('now', '-210 hours', '+13 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (111, 56, 7, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (112, 56, 4, 0, 0, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (111, 56, 7, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (112, 56, 4, 'Team B', 2);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (57, 'finished', datetime('now', '-215 hours'), datetime('now', '-215 hours', '+8 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (113, 57, 1, 0, 0, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (114, 57, 5, 0, 1, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (113, 57, 1, 'Team A', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (114, 57, 5, 'Team B', 5);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (58, 'finished', datetime('now', '-220 hours'), datetime('now', '-220 hours', '+10 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (115, 58, 2, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (116, 58, 6, 0, 0, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (115, 58, 2, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (116, 58, 6, 'Team B', 4);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (59, 'finished', datetime('now', '-225 hours'), datetime('now', '-225 hours', '+7 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (117, 59, 3, 0, 0, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (118, 59, 7, 0, 1, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (117, 59, 3, 'Team A', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (118, 59, 7, 'Team B', 5);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (60, 'finished', datetime('now', '-230 hours'), datetime('now', '-230 hours', '+14 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (119, 60, 4, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (120, 60, 1, 0, 0, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (119, 60, 4, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (120, 60, 1, 'Team B', 3);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (61, 'finished', datetime('now', '-235 hours'), datetime('now', '-235 hours', '+6 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (121, 61, 5, 0, 0, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (122, 61, 2, 0, 1, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (121, 61, 5, 'Team A', 1);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (122, 61, 2, 'Team B', 5);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (62, 'finished', datetime('now', '-240 hours'), datetime('now', '-240 hours', '+9 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (123, 62, 6, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (124, 62, 3, 0, 0, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (123, 62, 6, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (124, 62, 3, 'Team B', 2);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (63, 'finished', datetime('now', '-245 hours'), datetime('now', '-245 hours', '+11 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (125, 63, 7, 0, 0, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (126, 63, 4, 0, 1, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (125, 63, 7, 'Team A', 4);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (126, 63, 4, 'Team B', 5);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (64, 'finished', datetime('now', '-250 hours'), datetime('now', '-250 hours', '+5 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (127, 64, 1, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (128, 64, 5, 0, 0, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (127, 64, 1, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (128, 64, 5, 'Team B', 0);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (65, 'finished', datetime('now', '-255 hours'), datetime('now', '-255 hours', '+13 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (129, 65, 2, 0, 0, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (130, 65, 6, 0, 1, 'Team B');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (129, 65, 2, 'Team A', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (130, 65, 6, 'Team B', 5);

            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (66, 'finished', datetime('now', '-12 hours'), datetime('now', '-12 hours', '+4 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (131, 66, 1, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (132, 66, NULL, 1, 0, 'Easy Bot');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (131, 66, 1, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (132, 66, NULL, 'Easy Bot', 1);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (67, 'finished', datetime('now', '-18 hours'), datetime('now', '-18 hours', '+9 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (133, 67, 2, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (134, 67, NULL, 1, 0, 'Medium Bot');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (133, 67, 2, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (134, 67, NULL, 'Medium Bot', 3);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (68, 'finished', datetime('now', '-24 hours'), datetime('now', '-24 hours', '+14 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (135, 68, 3, 0, 0, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (136, 68, NULL, 1, 1, 'Hard Bot');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (135, 68, 3, 'Team A', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (136, 68, NULL, 'Hard Bot', 5);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (69, 'finished', datetime('now', '-30 hours'), datetime('now', '-30 hours', '+7 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (137, 69, 4, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (138, 69, NULL, 1, 0, 'Easy Bot');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (137, 69, 4, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (138, 69, NULL, 'Easy Bot', 0);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (70, 'finished', datetime('now', '-36 hours'), datetime('now', '-36 hours', '+11 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (139, 70, 5, 0, 0, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (140, 70, NULL, 1, 1, 'Medium Bot');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (139, 70, 5, 'Team A', 4);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (140, 70, NULL, 'Medium Bot', 5);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (71, 'finished', datetime('now', '-42 hours'), datetime('now', '-42 hours', '+6 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (141, 71, 6, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (142, 71, NULL, 1, 0, 'Hard Bot');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (141, 71, 6, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (142, 71, NULL, 'Hard Bot', 3);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (72, 'finished', datetime('now', '-48 hours'), datetime('now', '-48 hours', '+13 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (143, 72, 7, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (144, 72, NULL, 1, 0, 'Easy Bot');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (143, 72, 7, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (144, 72, NULL, 'Easy Bot', 2);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (73, 'finished', datetime('now', '-54 hours'), datetime('now', '-54 hours', '+8 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (145, 73, 1, 0, 0, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (146, 73, NULL, 1, 1, 'Medium Bot');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (145, 73, 1, 'Team A', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (146, 73, NULL, 'Medium Bot', 5);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (74, 'finished', datetime('now', '-60 hours'), datetime('now', '-60 hours', '+12 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (147, 74, 2, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (148, 74, NULL, 1, 0, 'Hard Bot');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (147, 74, 2, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (148, 74, NULL, 'Hard Bot', 4);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (75, 'finished', datetime('now', '-66 hours'), datetime('now', '-66 hours', '+5 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (149, 75, 3, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (150, 75, NULL, 1, 0, 'Easy Bot');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (149, 75, 3, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (150, 75, NULL, 'Easy Bot', 1);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (76, 'finished', datetime('now', '-72 hours'), datetime('now', '-72 hours', '+10 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (151, 76, 4, 0, 0, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (152, 76, NULL, 1, 1, 'Medium Bot');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (151, 76, 4, 'Team A', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (152, 76, NULL, 'Medium Bot', 5);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (77, 'finished', datetime('now', '-78 hours'), datetime('now', '-78 hours', '+14 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (153, 77, 5, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (154, 77, NULL, 1, 0, 'Hard Bot');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (153, 77, 5, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (154, 77, NULL, 'Hard Bot', 3);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (78, 'finished', datetime('now', '-84 hours'), datetime('now', '-84 hours', '+7 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (155, 78, 6, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (156, 78, NULL, 1, 0, 'Easy Bot');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (155, 78, 6, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (156, 78, NULL, 'Easy Bot', 0);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (79, 'finished', datetime('now', '-90 hours'), datetime('now', '-90 hours', '+11 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (157, 79, 7, 0, 0, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (158, 79, NULL, 1, 1, 'Medium Bot');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (157, 79, 7, 'Team A', 4);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (158, 79, NULL, 'Medium Bot', 5);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (80, 'finished', datetime('now', '-96 hours'), datetime('now', '-96 hours', '+6 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (159, 80, 1, 0, 0, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (160, 80, NULL, 1, 1, 'Hard Bot');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (159, 80, 1, 'Team A', 2);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (160, 80, NULL, 'Hard Bot', 5);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (81, 'finished', datetime('now', '-102 hours'), datetime('now', '-102 hours', '+13 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (161, 81, 2, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (162, 81, NULL, 1, 0, 'Easy Bot');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (161, 81, 2, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (162, 81, NULL, 'Easy Bot', 1);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (82, 'finished', datetime('now', '-108 hours'), datetime('now', '-108 hours', '+8 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (163, 82, 3, 0, 0, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (164, 82, NULL, 1, 1, 'Medium Bot');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (163, 82, 3, 'Team A', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (164, 82, NULL, 'Medium Bot', 5);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (83, 'finished', datetime('now', '-114 hours'), datetime('now', '-114 hours', '+12 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (165, 83, 4, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (166, 83, NULL, 1, 0, 'Hard Bot');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (165, 83, 4, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (166, 83, NULL, 'Hard Bot', 4);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (84, 'finished', datetime('now', '-120 hours'), datetime('now', '-120 hours', '+5 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (167, 84, 5, 0, 1, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (168, 84, NULL, 1, 0, 'Easy Bot');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (167, 84, 5, 'Team A', 5);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (168, 84, NULL, 'Easy Bot', 2);
            INSERT OR IGNORE INTO games (id, status, started_at, finished_at) VALUES (85, 'finished', datetime('now', '-126 hours'), datetime('now', '-126 hours', '+9 minutes'));
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (169, 85, 6, 0, 0, 'Team A');
            INSERT OR IGNORE INTO participants (id, game_id, user_id, is_bot, is_winner, team_name) VALUES (170, 85, NULL, 1, 1, 'Medium Bot');
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (169, 85, 6, 'Team A', 3);
            INSERT OR IGNORE INTO scores (id, game_id, scorer_id, team_name, point_number) VALUES (170, 85, NULL, 'Medium Bot', 5);
        `);
        console.log('Base de datos inicializada y tablas creadas (si no existían).');
    } finally {
        await db.close();
    }
}
[1;30m----------------------------------------[0m

[1;34m=== ./src/services/games.services.ts ===[0m
// auth-service/services/games.service.ts

import { openDb } from '../database';
import redisClient from '../redis-client';

export class GameService {
  // 1. Crear partida y devolver el game_id generado
  static async createGame(tournamentId: number | null = null, match: string | null = null): Promise<number> {
    const db = await openDb();

    const lastRow = await db.get('SELECT MAX(id) AS max_id FROM games');
    const lastId = lastRow?.max_id || 0;
    const gameId = lastId + 100; // Margen de seguridad

    await redisClient.rPush('sqlite_write_queue', JSON.stringify({
      sql: `INSERT INTO games (id, tournament_id, match, status, started_at) VALUES (?, ?, ?, 'in_progress', datetime('now'))`,
      params: [gameId, tournamentId, match]
    }));

    await db.close();

    return gameId;
  }

  // 2. Añadir un participante (jugador humano o bot)
  static async addParticipant(gameId: number, {
    userId = null,
    isBot = false,
    teamName
  }: {
    userId?: number | null;
    isBot?: boolean;
    teamName: string;
  }): Promise<void> {
    const db = await openDb();

    await redisClient.rPush('sqlite_write_queue', JSON.stringify({
      sql: 
      `INSERT INTO participants (game_id, user_id, is_bot, team_name)
       VALUES (?, ?, ?, ?)`,
      params: [gameId, userId, isBot ? 1 : 0, teamName]
  }));
  }

  // 3. Inicializar score en 0 para un participante
  static async initScore(gameId: number, scorerId: number | null, teamName: string): Promise<void> {
    const db = await openDb();

    await redisClient.rPush('sqlite_write_queue', JSON.stringify({
      sql: 
      `INSERT INTO scores (game_id, scorer_id, team_name, point_number)
       VALUES (?, ?, ?, 0)`,
      params: [gameId, scorerId, teamName]
    }));
  }

  // 4. Registrar un punto anotado por un participante
  static async updateScore(gameId: number, scorerId: number | null, teamName: string, pointNumber: number): Promise<void> {
    const db = await openDb();

    await redisClient.rPush('sqlite_write_queue', JSON.stringify({
      sql: 
      `INSERT INTO scores (game_id, scorer_id, team_name, point_number)
       VALUES (?, ?, ?, ?)`,
      params: [gameId, scorerId, teamName, pointNumber]
    }));
  }

  // 5. Finalizar partida y actualizar estado + ganadores
  static async finalizeGame(gameId: number, winnerTeam: string): Promise<void> {
    const db = await openDb();

    await redisClient.rPush('sqlite_write_queue', JSON.stringify({
      sql: 
      `UPDATE games SET status = 'finished', finished_at = datetime('now') WHERE id = ?`,
      params: [gameId]
    }));

    await redisClient.rPush('sqlite_write_queue', JSON.stringify({
      sql: 
      `UPDATE participants
       SET is_winner = CASE WHEN team_name = ? THEN 1 ELSE 0 END
       WHERE game_id = ?`,
      params: [winnerTeam, gameId]
    }));
  }
}[1;30m----------------------------------------[0m

[1;34m=== ./src/services/friends.services.ts ===[0m
// auth-service/src/services/friends.services.ts

import { openDb } from '../database';
import redisClient from '../redis-client';

interface Friend {
    id: number;
    username: string;
    isOnline: boolean;
    elo: number;
}

export async function getFriends(userId: number): Promise<Friend[]> {
  const db = await openDb();

  const friendsRaw = await db.all(`
    SELECT u.id, u.username,
      IFNULL(SUM(CASE WHEN p.user_id = u.id THEN s.point_number ELSE 0 END), 0) AS pointsFor,
      IFNULL(SUM(CASE WHEN p.user_id != u.id THEN s.point_number ELSE 0 END), 0) AS pointsAgainst
    FROM friendships f
    JOIN users u ON (u.id = f.requester_id OR u.id = f.approver_id) AND u.id != ?
    LEFT JOIN participants p ON p.user_id = u.id
    LEFT JOIN scores s ON s.game_id = p.game_id AND s.team_name = p.team_name
    WHERE f.status = 'accepted'
      AND (f.requester_id = ? OR f.approver_id = ?)
    GROUP BY u.id;
  `, [userId, userId, userId]);

  // Opcional: obtener usuarios online de Redis
  // const onlineIds = await getOnlineUserIdsFromRedis();

  const friends: Friend[] = friendsRaw.map(f => ({
    id: f.id,
    username: f.username,
    elo: 1000 + (f.pointsFor - f.pointsAgainst),
    isOnline: false,
  }));

  await db.close();
  return friends;
}

export async function getPendingRequests(userId: number) {
  const db = await openDb();
  const result = await db.all(`
    SELECT u.id, u.username
    FROM friendships f
    JOIN users u ON u.id = f.requester_id
    WHERE f.status = 'pending'
      AND f.approver_id = ?;
  `, [userId]);
  await db.close();
  return result;
}

export async function getAvailableUsers(userId: number) {
  const db = await openDb();
  return db.all(`
    SELECT u.id, u.username
    FROM users u
    WHERE u.id != ?
      AND u.id NOT IN (
        SELECT requester_id FROM friendships WHERE approver_id = ?
        UNION
        SELECT approver_id FROM friendships WHERE requester_id = ?
      );
  `, [userId, userId, userId]);
}

export async function sendFriendRequest(userId: number, targetId: number): Promise<boolean> {
  const db = await openDb();

  // Verifica si ya existe
  const existing = await db.get(
    `SELECT * FROM friendships 
     WHERE (user_id = ? AND friend_id = ?) 
        OR (user_id = ? AND friend_id = ?)`,
    [userId, targetId, targetId, userId]
  );

  if (existing) {
    await db.close();
    return false;
  }

  await redisClient.rPush('sqlite_write_queue', JSON.stringify({
    sql: 
    `INSERT INTO friendships (user_id, friend_id, status) VALUES (?, ?, 'pending')`,
    params: [userId, targetId]
  }));

  await db.close();
  return true;
}

export async function acceptFriendRequest(requesterId: number, approverId: number): Promise<boolean> {
  const db = await openDb();

  const requestExists = await db.get(
    'SELECT * FROM friendships WHERE requester_id = ? AND approver_id = ? AND status = "pending"',
    [requesterId, approverId]
  );

  if (!requestExists) {
    await db.close();
    return false;
  }

  await redisClient.rPush('sqlite_write_queue', JSON.stringify({
    sql: 'UPDATE friendships SET status = "accepted", created_at = datetime("now") WHERE requester_id = ? AND approver_id = ?',
    params: [requesterId, approverId]
  }));

  await db.close();
  return true;
}

export async function rejectFriendRequest(requesterId: number, approverId: number): Promise<boolean> {
  const db = await openDb();

  const requestExists = await db.get(
    'SELECT * FROM friendships WHERE requester_id = ? AND approver_id = ? AND status = "pending"',
    [requesterId, approverId]
  );

  if (!requestExists) {
    await db.close();
    return false;
  }

  await redisClient.rPush('sqlite_write_queue', JSON.stringify({
    sql: 'DELETE FROM friendships WHERE requester_id = ? AND approver_id = ?',
    params: [requesterId, approverId]
  }));

  await db.close();
  return true;
}
[1;30m----------------------------------------[0m

[1;34m=== ./src/controllers/friends.controller.ts ===[0m
// auth-service/src/controllers/friends.controller.ts

import { FastifyRequest, FastifyReply } from 'fastify';
import { getFriends, getPendingRequests, getAvailableUsers, sendFriendRequest } from '../services/friends.services';
import { acceptFriendRequest, rejectFriendRequest } from '../services/friends.services';

export async function getFriendsHandler(request: FastifyRequest, reply: FastifyReply) {
  const userId = (request as any).user.user_id;
  if (!userId) return reply.status(401).send({ error: 'Unauthorized' });

  const friends = await getFriends(userId);
  return reply.send(friends);
}

export async function getPendingRequestsHandler(request: FastifyRequest, reply: FastifyReply) {
  const userId = (request as any).user.user_id;
  if (!userId) return reply.status(401).send({ error: 'Unauthorized' });

  const pending = await getPendingRequests(userId);
  return reply.send(pending);
}

export async function getAvailableUsersHandler(request: FastifyRequest, reply: FastifyReply) {
  const userId = (request as any).user.user_id;
  if (!userId) return reply.status(401).send({ error: 'Unauthorized' });

  const users = await getAvailableUsers(userId);
  return reply.send(users);
}

export async function sendFriendRequestHandler(request: FastifyRequest, reply: FastifyReply) {
  const userId = (request as any).user.user_id;
  const targetId = Number((request.params as any).targetId);
  if (!userId || !targetId || userId === targetId) {
    return reply.status(400).send({ error: 'Invalid target user' });
  }

  try {
    const result = await sendFriendRequest(userId, targetId);
    return reply.send({ success: result });
  } catch (err) {
    console.error('Error sending friend request:', err);
    return reply.status(500).send({ error: 'Server error' });
  }
}

export async function acceptFriendRequestHandler(request: FastifyRequest, reply: FastifyReply) {
  const approverId = (request as any).user.user_id;
  const { senderId: requesterId } = request.body as { senderId: number };

  if (!requesterId) {
    return reply.code(400).send({ message: 'ID del remitente requerido' });
  }

  const success = await acceptFriendRequest(requesterId, approverId);
  if (!success) {
    return reply.code(404).send({ message: 'Solicitud no encontrada' });
  }

  return reply.send({ message: 'Amistad aceptada' });
}

export async function rejectFriendRequestHandler(request: FastifyRequest, reply: FastifyReply) {
  const approverId = (request as any).user.user_id;
  const { senderId: requesterId } = request.body as { senderId: number };

  if (!requesterId) {
    return reply.code(400).send({ message: 'ID del remitente requerido' });
  }

  const success = await rejectFriendRequest(requesterId, approverId);
  if (!success) {
    return reply.code(404).send({ message: 'Solicitud no encontrada' });
  }

  return reply.send({ message: 'Solicitud rechazada' });
}[1;30m----------------------------------------[0m

[1;34m=== ./src/controllers/games.controller.ts ===[0m
// auth-service/controllers/games.controller.ts

import { FastifyRequest, FastifyReply } from 'fastify';
import { GameService } from '../services/games.services';
import { openDb } from '../database';
import redisClient from '../redis-client';

export const startGameHandler = async (req: FastifyRequest, reply: FastifyReply) => {
  try {
    const {
      gameId,
      player1,
      player2,
      tournamentId = null,
      match = null
    } = req.body as any;

    const db = await openDb();

    // Insert en games
    const result = await redisClient.rPush('sqlite_write_queue', JSON.stringify({
      sql: 
        `INSERT INTO games (id, tournament_id, match, status, started_at)
        VALUES (?, ?, ?, 'in_progress', datetime('now'))`,
        params: [gameId, tournamentId, match]
      }));

    // helper para obtener user_id si es humano
    const getUserId = async (username: string | null): Promise<number | null> => {
      if (!username) return null;
      const user = await db.get(`SELECT id FROM users WHERE username = ?`, [username]);
      return user?.id ?? null;
    };

    // player1
    const userId1 = player1.isBot ? null : await getUserId(player1.username);
    await GameService.addParticipant(gameId, {
      userId: userId1,
      isBot: player1.isBot,
      teamName: player1.teamName
    });
    await GameService.initScore(gameId, userId1, player1.teamName);

    // player2
    const userId2 = player2.isBot ? null : await getUserId(player2.username);
    await GameService.addParticipant(gameId, {
      userId: userId2,
      isBot: player2.isBot,
      teamName: player2.teamName
    });
    await GameService.initScore(gameId, userId2, player2.teamName);

    reply.send({ success: true });
  } catch (error) {
    console.error('❌ Error in /api/games/start:', error);
    reply.status(500).send({ error: 'Failed to start game' });
  }
};

export const getUserIdByUsername = async (req: FastifyRequest, reply: FastifyReply) => {
  const { username } = req.query as { username?: string };

  if (!username) {
    return reply.status(400).send({ error: 'Falta el parámetro username' });
  }

  try {
    const db = await openDb();
    const user = await db.get('SELECT id FROM users WHERE username = ?', [username]);
    await db.close();

    if (!user) {
      return reply.status(404).send({ error: 'Usuario no encontrado' });
    }

    return reply.send({ userId: user.id });
  } catch (error) {
    console.error('❌ Error al obtener userId:', error);
    return reply.status(500).send({ error: 'Error interno del servidor' });
  }
};[1;30m----------------------------------------[0m

[1;34m=== ./src/utils/auth-middleware.ts ===[0m
// src/utils/auth-middleware.ts

import { FastifyRequest, FastifyReply } from 'fastify';
import jwt from 'jsonwebtoken';
import redisClient from '../redis-client';

// Extiende el tipo de FastifyRequest para incluir cookies
declare module 'fastify' {
  interface FastifyRequest {
    cookies?: {
      token?: string;
    };
  }
}

const JWT_SECRET = process.env.JWT_SECRET || 'default_secret';

export const verifyToken = async (
  request: FastifyRequest,
  reply: FastifyReply,
  done: (err?: Error) => void
) => {
  const authHeader = request.headers['authorization'];
  const token = authHeader && authHeader.startsWith('Bearer ')
    ? authHeader.slice(7)
    : request.cookies?.token || (request.body as any)?.token;

  if (!token) {
    reply.code(401).send({ message: 'Token requerido' });
    return done(new Error('Unauthorized'));
  }

  try {
    const decoded = jwt.verify(token, JWT_SECRET) as {
      user_id: number;
      username: string;
      email: string;
    };

    const sessionId = `jwt:${token}`;
    const isValid = await redisClient.get(sessionId);
    if (!isValid) {
      reply.code(401).send({ message: 'Sesión cerrada o inválida' });
      return done(new Error('Session invalid'));
    }

    await redisClient.expire(sessionId, 3600); // renovar TTL

    (request as any).user = decoded;
    (request as any).token = token;

    done();
  } catch (err: any) {
    if (err.name === 'TokenExpiredError') {
      reply.code(401).send({ message: 'Token expirado' });
    } else {
      reply.code(403).send({ message: 'Token inválido' });
    }
    done(err);
  }
};[1;30m----------------------------------------[0m

[1;34m=== ./src/server.ts ===[0m
import Fastify from 'fastify';
import fs from 'fs';
import path from 'path';
import jwt from 'jsonwebtoken';
import bcrypt from 'bcryptjs';
import fetch from 'node-fetch';
import dotenv from 'dotenv';
import { openDb, initializeDb } from './database';
import multipart from '@fastify/multipart';
import { pipeline } from 'stream';
import util from 'util';
import { FastifyRequest } from 'fastify';
import { MultipartFile } from '@fastify/multipart';
import { createCanvas, loadImage } from 'canvas';
import { verifyToken } from './utils/auth-middleware';
import gamesRoutes from './routes/games.routes';
import friendsRoutes from './routes/friends.routes';
import { promisify } from 'util';
import { connectRedis } from './redis-client'
import redisClient from './redis-client';

dotenv.config();
const JWT_SECRET = process.env.JWT_SECRET || 'default_secret';
const fastify = Fastify({ logger: true });

fastify.register(multipart);

// Rutas para gestionar el guardado de partidas y estadísticas del juego
fastify.register(gamesRoutes, { prefix: '/auth/games' });

// Ruta para gestionar amistades
fastify.register(friendsRoutes, { prefix: '/auth/friends' });

// Habilitar CORS

fastify.register(require('@fastify/cors'), {
  origin: true,
  credentials: true,
  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],
  allowedHeaders: ['Content-Type', 'Authorization']
});

// Asegurar que las carpetas existen
const dataPath = path.join(__dirname, '../data');
const avatarPath = path.join(dataPath, 'avatars');
if (!fs.existsSync(dataPath)) fs.mkdirSync(dataPath, { recursive: true });
if (!fs.existsSync(avatarPath)) fs.mkdirSync(avatarPath, { recursive: true });

// Registro de rutas estáticas para descargas y avatares
fastify.register(require('@fastify/static'), {
  root: dataPath,
  prefix: '/downloads/'
});
fastify.register(require('@fastify/static'), {
  root: avatarPath,
  prefix: '/avatars/',
  decorateReply: false // evita conflicto
});

// Endpoint para registrar un nuevo usuario
fastify.post('/auth/register', async (request, reply) => {
  const { username, email, password } = request.body as any;
  
  if (!username || !email || !password) {
    return reply.code(400).send({ message: 'Faltan campos requeridos' });
  }

  try {
    const db = await openDb();
    
    // Verificar si el usuario ya existe
    const existingUser = await db.get('SELECT * FROM users WHERE email = ? OR username = ?', [email, username]);
    if (existingUser) {
      await db.close();
      return reply.code(409).send({ message: 'Usuario o email ya existe' });
    }

    const hash = await bcrypt.hash(password, 10);
    
    // Insertar directamente en la base de datos
    await redisClient.rPush('sqlite_write_queue', JSON.stringify({
      sql: 'INSERT INTO users (username, email, password_hash) VALUES (?, ?, ?)',
      params: [username, email, hash]
    }));
    
    await db.close();
    
    return reply.code(201).send({ message: 'Usuario registrado exitosamente' });
  } catch (err: any) {
    console.error('Error en registro:', err);
    if (err.code === 'SQLITE_CONSTRAINT') {
      return reply.code(409).send({ message: 'Usuario o email ya existe' });
    }
    return reply.code(500).send({ message: 'Error interno del servidor' });
  }
});

// Endpoint para iniciar sesión (login) y generar token JWT
fastify.post('/auth/login', async (request, reply) => {
  const { email, password } = request.body as any;
  
  if (!email || !password) {
    return reply.code(400).send({ message: 'Email y contraseña son requeridos' });
  }

  try {
    const db = await openDb();
    const user = await db.get('SELECT * FROM users WHERE email = ?', [email]);
    
    if (!user || !(await bcrypt.compare(password, user.password_hash))) {
      await db.close();
      return reply.code(401).send({ message: 'Credenciales inválidas' });
    }

    const token = jwt.sign({
      user_id: user.id,
      username: user.username,
      email: user.email,
      exp: Math.floor(Date.now() / 1000) + (60 * 60) // 1 hora
    }, JWT_SECRET);

    // Registrar sesión en DB y Redis
    const expiresAt = new Date(Date.now() + 3600 * 1000); // 1 hora// Guardar en Redis: clave = jwt:<token>, valor = user_id
    await redisClient.set(`jwt:${token}`, user.id.toString(), { EX: 3600 }); // 3600s = 1h
    await redisClient.set(`user:${user.id}:online`, 'true');
    await redisClient.sAdd('online_users', user.id.toString());
    await redisClient.set(`user:${user.id}:last_seen`, Date.now().toString());


    await redisClient.rPush('sqlite_write_queue', JSON.stringify({
      sql: `
        INSERT INTO sessions (user_id, session_token, expires_at)
        VALUES (?, ?, ?)
      `,
      params: [user.id, token, expiresAt.toISOString()]
    }));

    // Obtener avatar_url e idioma
    const profile = await db.get('SELECT avatar_url, language FROM user_profiles WHERE user_id = ?', [user.id]);

    await db.close();

    return reply.send({ 
      token,
      user: {
        id: user.id,
        username: user.username,
        email: user.email,
        avatar_url: profile?.avatar_url || null,
        language: profile?.language || 'es'
      }
    });
  } catch (err) {
    console.error('Error en login:', err);
    return reply.code(500).send({ message: 'Error interno del servidor' });
  }
});

// Endpoint para cerrar sesión
fastify.post('/auth/logout', { preHandler: verifyToken }, async (request, reply) => {
  const token = (request as any).token;
  const userId = (request as any).user.user_id;

  try {
    const db = await openDb();
    
    // Eliminar de Redis
    await redisClient.del(`jwt:${token}`); // ✅ Eliminar el token JWT
    await redisClient.del(`user:${userId}:online`);
    await redisClient.sRem('online_users', userId.toString());
    await redisClient.del(`user:${userId}:last_seen`);
    
    return reply.send({ message: 'Sesión cerrada correctamente' });
  } catch (err) {
    console.error('Error en logout:', err);
    return reply.code(500).send({ message: 'Error al cerrar sesión' });
  }
});

// Endpoint heartbeat para mantener sesión activa
fastify.get('/auth/heartbeat', { preHandler: verifyToken }, async (request, reply) => {
  const userId = (request as any).user.user_id;
  
  try {
    // Actualizar timestamp de última actividad
    await redisClient.set(`user:${userId}:last_seen`, Date.now().toString());
    return reply.send({ status: 'active' });
  } catch (err) {
    console.error('Error en heartbeat:', err);
    return reply.code(500).send({ message: 'Error interno' });
  }
});

// Endpoint para obtener usuarios conectados
fastify.get('/auth/online-users', async (request, reply) => {
  try {
    const onlineUsers = await redisClient.sMembers('online_users');
    return reply.send(onlineUsers.map(id => parseInt(id)));
  } catch (err) {
    console.error('Error obteniendo usuarios online:', err);
    return reply.code(500).send({ message: 'Error interno' });
  }
});

// Función de limpieza periódica de usuarios online
async function cleanInactiveSessions() {
  try {
    const onlineUsers = await redisClient.sMembers('online_users');
    const now = Date.now();
    
    for (const userId of onlineUsers) {
      const lastSeen = await redisClient.get(`user:${userId}:last_seen`);
      const inactiveTime = now - parseInt(lastSeen || '0');
      
      // Eliminar si inactivo por más de 10 minutos
      if (inactiveTime > 600000) {
        await redisClient.sRem('online_users', userId);
        await redisClient.del(`user:${userId}:online`);
        await redisClient.del(`user:${userId}:last_seen`);

        const db = await openDb();
        await db.close();
      }
    }
  } catch (err) {
    console.error('Error en limpieza de sesiones:', err);
  }
}

// Iniciar limpieza periódica cada 10 minutos
setInterval(cleanInactiveSessions, 600000);

// Endpoint para subir y optimizar el avatar
fastify.post('/auth/profile/avatar', { preHandler: verifyToken }, async (request, reply) => {
  const userId = (request as any).user.user_id;
  
  const mpRequest = request as FastifyRequest & {
    file: () => Promise<MultipartFile>;
  };

  const data = await mpRequest.file();

  if (!data) {
    return reply.code(400).send({ message: 'No se ha enviado ningún archivo' });
  }

  const allowedTypes = ['image/jpeg', 'image/png', 'image/webp'];
  if (!allowedTypes.includes(data.mimetype)) {
    return reply.code(400).send({ message: 'Tipo de archivo no permitido' });
  }

  if (data.file.truncated) {
    return reply.code(400).send({ message: 'Archivo demasiado grande (máx 2MB)' });
  }

  try {
    const buffer = await data.toBuffer();
    const image = await loadImage(buffer);
    
    // Tamaño máximo deseado
    const MAX_SIZE = 256;
    let width = image.width;
    let height = image.height;

    // Redimensionar manteniendo aspect ratio
    if (width > height && width > MAX_SIZE) {
      height = Math.round((height * MAX_SIZE) / width);
      width = MAX_SIZE;
    } else if (height > MAX_SIZE) {
      width = Math.round((width * MAX_SIZE) / height);
      height = MAX_SIZE;
    }

    // Crear canvas con nuevas dimensiones
    const canvas = createCanvas(width, height);
    const ctx = canvas.getContext('2d');
    ctx.drawImage(image, 0, 0, width, height);

    // Convertir a JPEG con calidad del 80% (más ligero que PNG)
    const processedBuffer = canvas.toBuffer('image/jpeg', { quality: 0.8 });

    const filename = `avatar_${userId}.jpg`;
    const saveDir = '/app/data/avatars';
    const filepath = path.join(saveDir, filename);

    if (!fs.existsSync(saveDir)) {
      fs.mkdirSync(saveDir, { recursive: true });
    }

    fs.writeFileSync(filepath, processedBuffer);

    // Guardar en base de datos
    const db = await openDb();
    await redisClient.rPush('sqlite_write_queue', JSON.stringify({
      sql: `
      INSERT INTO user_profiles (user_id, avatar_url)
      VALUES (?, ?)
      ON CONFLICT(user_id) DO UPDATE SET avatar_url = excluded.avatar_url
      `,
      params: [userId, `/avatars/${filename}`]
    }));

    await db.close();

    return reply.send({ 
      message: '✅ Avatar optimizado y subido correctamente', 
      avatar_url: `http://localhost:8000/avatars/${filename}`,
      dimensions: { width, height },
      size: `${(processedBuffer.length / 1024).toFixed(2)} KB`
    });

  } catch (err) {
    console.error('Error procesando avatar:', err);
    return reply.code(500).send({ message: 'Error procesando avatar' });
  }
});
 
// Endpoint para obtener estadísticas del usuario y generar archivo de historial
fastify.get('/auth/profile/stats', { preHandler: verifyToken }, async (request, reply) => {
  try {
    const db = await openDb();
    const userId = (request as any).user.user_id;

    // Obtener todas las partidas completadas con su info de jugadores
    const games = await db.all(`
      SELECT
        g.id AS game_id,
        g.finished_at,
        g.status,
        g.tournament_id,
        p.user_id AS player_id,
        p.team_name AS team,
        u.username,
        t.name AS tournament_name
      FROM games g
      JOIN participants p ON p.game_id = g.id
      LEFT JOIN users u ON u.id = p.user_id
      LEFT JOIN tournaments t ON g.tournament_id = t.id
      WHERE g.status IN ('finished')
    `);

    // Obtener todos los scores por game + team
    const scores = await db.all(`
      SELECT game_id, team_name, point_number
      FROM scores
    `);

    const scoreMap = new Map<string, number>();
    for (const s of scores) {
      scoreMap.set(`${s.game_id}_${s.team_name}`, s.point_number);
    }

    // Agrupar los jugadores por game_id
    const groupedGames = new Map<number, any[]>();
    for (const g of games) {
      if (!groupedGames.has(g.game_id)) groupedGames.set(g.game_id, []);
      groupedGames.get(g.game_id)!.push(g);
    }

    // Preparar stats individuales
    const userGames = new Map<number, {
      matches: any[],
      pointsFor: number,
      pointsAgainst: number
    }>();

    for (const [gameId, players] of groupedGames.entries()) {
      if (players.length < 1) continue;

      for (const current of players) {
        const opponent = players.find(p => p.player_id !== current.player_id && p.user_id !== null) || null;

        const userScore = scoreMap.get(`${gameId}_${current.team}`) ?? 0;

        let opponentScore = 0;
        let opponentName = 'Bot AI';

        if (opponent) {
          opponentScore = scoreMap.get(`${gameId}_${opponent.team}`) ?? 0;
          opponentName = opponent.username || 'Bot AI';
        } else {
          // Buscar en scores el otro equipo aunque no haya participant asociado
          const allTeams = scores
            .filter(s => s.game_id === gameId)
            .map(s => s.team_name);
          const otherTeam = allTeams.find(t => t !== current.team);
          if (otherTeam) {
            opponentScore = scoreMap.get(`${gameId}_${otherTeam}`) ?? 0;
          }
        }

        if (!userGames.has(current.player_id)) {
          userGames.set(current.player_id, {
            matches: [],
            pointsFor: 0,
            pointsAgainst: 0
          });
        }

        userGames.get(current.player_id)!.pointsFor += userScore;
        userGames.get(current.player_id)!.pointsAgainst += opponentScore;

        userGames.get(current.player_id)!.matches.push({
          id: gameId,
          result: userScore > opponentScore ? 'win' : 'loss',
          opponent: opponentName,
          score: `${userScore}-${opponentScore}`,
          date: current.finished_at,
          tournament: current.tournament_name || '-'
        });
      }
    }

    // Calcular ELOs
    const eloList = Array.from(userGames.entries()).map(([uid, data]) => ({
      user_id: uid,
      elo: 1000 + data.pointsFor - data.pointsAgainst
    }));

    // Asegurar que todos los usuarios están presentes (aun sin partidas)
    const allUsers = await db.all(`SELECT id FROM users`);
    for (const u of allUsers) {
      if (!userGames.has(u.id)) {
        userGames.set(u.id, { matches: [], pointsFor: 0, pointsAgainst: 0 });
        eloList.push({ user_id: u.id, elo: 1000 });
      }
    }

    eloList.sort((a, b) => b.elo - a.elo);
    const ranking = eloList.findIndex(u => u.user_id === userId) + 1;

    const userData = userGames.get(userId)!;
    const wins = userData.matches.filter(m => m.result === 'win').length;
    const losses = userData.matches.filter(m => m.result === 'loss').length;
    const totalGames = wins + losses;
    const winRate = totalGames > 0 ? Math.round((wins / totalGames) * 100) : 0;
    const elo = 1000 + userData.pointsFor - userData.pointsAgainst;

    const matchHistory = userData.matches.sort(
      (a, b) => new Date(b.date).getTime() - new Date(a.date).getTime()
    );

    // Guardar historial completo en txt
    const filePath = path.resolve('/app/data/historial_partidas.txt');
    const matchHistoryText = matchHistory.map(entry =>
      `Partida ${entry.id} | Resultado: ${entry.result} | Oponente: ${entry.opponent} | Torneo: ${entry.tournament} | Marcador: ${entry.score} | Fecha: ${entry.date}`
    );
    fs.writeFileSync(filePath, matchHistoryText.join('\n'));

    // Avatar
    const profile = await db.get('SELECT avatar_url FROM user_profiles WHERE user_id = ?', [userId]);

    await db.close();

    return reply.send({
      totalGames,
      wins,
      losses,
      winRate,
      elo,
      ranking,
      matchHistory: matchHistory.slice(0, 10),
      avatar_url: profile?.avatar_url || null
    });
  } catch (err) {
    console.error('Error obteniendo estadísticas:', err);
    return reply.code(500).send({ message: 'Error interno del servidor' });
  }
});

// Endpoint para obtener el ranking global completo (top 100)
fastify.get('/auth/ranking', async (request, reply) => {
  try {
    const db = await openDb();

    // Obtener partidas finalizadas
    const games = await db.all(`
      SELECT
        g.id AS game_id,
        g.finished_at,
        g.status,
        g.tournament_id,
        p.user_id AS player_id,
        p.team_name AS team,
        u.username,
        t.name AS tournament_name
      FROM games g
      JOIN participants p ON p.game_id = g.id
      LEFT JOIN users u ON u.id = p.user_id
      LEFT JOIN tournaments t ON g.tournament_id = t.id
      WHERE g.status IN ('finished')
    `);

    // Scores
    const scores = await db.all(`
      SELECT game_id, team_name, point_number
      FROM scores
    `);

    const scoreMap = new Map<string, number>();
    for (const s of scores) {
      scoreMap.set(`${s.game_id}_${s.team_name}`, s.point_number);
    }

    // Agrupar jugadores por partida
    const groupedGames = new Map<number, any[]>();
    for (const g of games) {
      if (!groupedGames.has(g.game_id)) groupedGames.set(g.game_id, []);
      groupedGames.get(g.game_id)!.push(g);
    }

    // Calcular estadísticas por jugador
    const userGames = new Map<number, {
      username: string;
      wins: number;
      losses: number;
      pointsFor: number;
      pointsAgainst: number;
    }>();

    for (const [gameId, players] of groupedGames.entries()) {
      if (players.length < 1) continue;

      for (const current of players) {
        const uid = current.player_id;
        if (!uid) continue;

        const opponent = players.find(p => p.player_id !== uid && p.user_id !== null) || null;
        const userScore = scoreMap.get(`${gameId}_${current.team}`) ?? 0;

        let opponentScore = 0;
        if (opponent) {
          opponentScore = scoreMap.get(`${gameId}_${opponent.team}`) ?? 0;
        } else {
          // Buscar el otro equipo aunque sea contra bot
          const allTeams = scores
            .filter(s => s.game_id === gameId)
            .map(s => s.team_name);
          const otherTeam = allTeams.find(t => t !== current.team);
          if (otherTeam) {
            opponentScore = scoreMap.get(`${gameId}_${otherTeam}`) ?? 0;
          }
        }

        if (!userGames.has(uid)) {
          userGames.set(uid, {
            username: current.username || `User${uid}`,
            wins: 0,
            losses: 0,
            pointsFor: 0,
            pointsAgainst: 0
          });
        }

        const stats = userGames.get(uid)!;
        stats.pointsFor += userScore;
        stats.pointsAgainst += opponentScore;
        if (userScore > opponentScore) {
          stats.wins += 1;
        } else {
          stats.losses += 1;
        }
      }
    }

    // Asegurar que todos los usuarios están en el ranking
    const allUsers = await db.all(`SELECT id, username FROM users`);
    for (const u of allUsers) {
      if (!userGames.has(u.id)) {
        userGames.set(u.id, {
          username: u.username,
          wins: 0,
          losses: 0,
          pointsFor: 0,
          pointsAgainst: 0
        });
      }
    }

    // Calcular ELO y preparar la respuesta
    const rankingRaw = Array.from(userGames.entries()).map(([uid, data]) => {
      const totalGames = data.wins + data.losses;
      const winRate = totalGames > 0 ? Math.round((data.wins / totalGames) * 100) : 0;
      const elo = 1000 + data.pointsFor - data.pointsAgainst;

      return {
        id: uid,
        username: data.username,
        wins: data.wins,
        losses: data.losses,
        totalGames,
        winRate,
        elo
      };
    });

    rankingRaw.sort((a, b) => b.elo - a.elo);

    const rankingTop100 = rankingRaw.slice(0, 100).map((entry, index) => ({
      ...entry,
      rank: index + 1,
      points: entry.elo // puedes ajustar esto si usas un sistema distinto de puntos
    }));

    await db.close();
    return reply.send(rankingTop100);
  } catch (err) {
    console.error('Error obteniendo ranking:', err);
    return reply.code(500).send({ message: 'Error interno del servidor' });
  }
});

// Endpoint de home para partidos en juego ('in_progress')
fastify.get('/auth/games/live', async (request, reply) => {
  try {
    const db = await openDb();

    // Buscar partidas en progreso
    const games = await db.all(`
      SELECT g.id AS game_id, g.status, g.started_at
      FROM games g
      WHERE g.status = 'in_progress'
    `);

    if (!games.length) {
      await db.close();
      return reply.send([]);
    }

    // Obtener participantes humanos (no bots) de esas partidas
    const participants = await db.all(`
      SELECT p.game_id, p.team_name, u.username
      FROM participants p
      LEFT JOIN users u ON u.id = p.user_id
      WHERE p.game_id IN (${games.map(g => g.game_id).join(',')})
    `);

    // Obtener puntuaciones por game_id + team
    const scores = await db.all(`
      SELECT game_id, team_name, MAX(point_number) AS score
      FROM scores
      WHERE game_id IN (${games.map(g => g.game_id).join(',')})
      GROUP BY game_id, team_name
    `);

    // Mapear resultados por partida
    const liveMatches = games.map(game => {
      const gameParticipants = participants.filter(p => p.game_id === game.game_id);
      const scoreMap = new Map();
      scores
        .filter(s => s.game_id === game.game_id)
        .forEach(s => scoreMap.set(s.team_name, s.score));
      const [p1, p2] = gameParticipants;
      return {
        id: game.game_id,
        player1: { username: p1?.username || 'Player 1' },
        player2: { username: p2?.username || 'Player 2' },
        score1: scoreMap.get(p1?.team_name) || 0,
        score2: scoreMap.get(p2?.team_name) || 0,
        round: Math.max(scoreMap.get(p1?.team_name) || 0, scoreMap.get(p2?.team_name) || 0)
      };
    });

    await db.close();
    return reply.send(liveMatches);
  } catch (err) {
    console.error('Error obteniendo partidas en vivo:', err);
    return reply.code(500).send({ error: 'Error al obtener partidas en vivo' });
  }
});

// Endpoint para cambiar datos de usuario
fastify.put('/auth/settings/user_data', { preHandler: verifyToken }, async (request, reply) => {
  const db = await openDb();

  try {
    const userId = (request as any).user.user_id;
    const {
      username,
      email,
      new_password,
      current_password
    } = request.body as any;

    const user = await db.get('SELECT * FROM users WHERE id = ?', [userId]);
    if (!user) {
      return reply.code(404).send({ message: 'Usuario no encontrado' });
    }

    const currentPassword = typeof current_password === 'string' ? current_password.trim() : '';
    const newPassword = typeof new_password === 'string' ? new_password.trim() : '';
    const quiereCambiarPassword = currentPassword !== '' || newPassword !== '';

    let updatedPasswordHash = user.password_hash;

    // Validaciones de cambio de contraseña
    if (quiereCambiarPassword) {
      if (!currentPassword) {
        return reply.code(400).send({ message: 'Falta contraseña actual' });
      }

      const isMatch = await bcrypt.compare(currentPassword, user.password_hash);
      if (!isMatch) {
        return reply.code(401).send({ message: 'Contraseña actual incorrecta' });
      }

      if (!newPassword) {
        return reply.code(400).send({ message: 'Nueva contraseña inválida' });
      }

      updatedPasswordHash = await bcrypt.hash(newPassword, 10);
    }

    // Actualizar email, username y contraseña si es válida
    await redisClient.rPush('sqlite_write_queue', JSON.stringify({
      sql: 
      `UPDATE users SET username = ?, email = ?, password_hash = ? WHERE id = ?`,
      params: [
        username ?? user.username,
        email ?? user.email,
        updatedPasswordHash,
        userId
      ]
  }));

    return reply.send({ message: 'Perfil actualizado correctamente' });

  } catch (err) {
    console.error('Error actualizando perfil:', err);
    return reply.code(500).send({ message: 'Error actualizando perfil' });
  } finally {
    await db.close();
  }
});

// Endpoint para obtener datos de usuario (username y email)
fastify.get('/auth/settings/user_data', { preHandler: verifyToken }, async (request, reply) => {
  try {
    const db = await openDb();
    const userId = (request as any).user.user_id;

    const user = await db.get(
      `SELECT username, email FROM users WHERE id = ?`,
      [userId]
    );

    await db.close();

    if (!user) {
      return reply.code(404).send({ message: 'Usuario no encontrado' });
    }

    return reply.send(user);
  } catch (err) {
    console.error('Error al obtener datos de usuario:', err);
    return reply.code(500).send({ message: 'Error al obtener datos de usuario' });
  }
});

// Endpoint para cambiar configuración juego
fastify.put('/auth/settings/config', { preHandler: verifyToken }, async (request, reply) => {
  try {
    const db = await openDb();
    const userId = (request as any).user.user_id;
    const {
      language,
      notifications,
      sound_effects,
      game_difficulty
    } = request.body as any;

    await redisClient.rPush('sqlite_write_queue', JSON.stringify({
      sql: `
        INSERT INTO user_profiles (user_id, language, notifications, sound, difficulty)
        VALUES (?, ?, ?, ?, ?)
        ON CONFLICT(user_id) DO UPDATE SET
          language = excluded.language,
          notifications = excluded.notifications,
          sound = excluded.sound,
          difficulty = excluded.difficulty
      `,
      params: [userId, language, notifications, sound_effects, game_difficulty]
    }));

    await db.close();
    return reply.send({ message: 'Configuración guardada correctamente' });
  } catch (err) {
    console.error('Error guardando configuración:', err);
    return reply.code(500).send({ message: 'Error guardando configuración' });
  }
});

// Obtener configuraciones del juego
fastify.get('/auth/settings/config', { preHandler: verifyToken }, async (request, reply) => {
  try {
    const db = await openDb();
    const userId = (request as any).user.user_id;
    const config = await db.get(
      `SELECT 
        language, 
        notifications, 
        sound AS sound_effects, 
        difficulty AS game_difficulty
      FROM user_profiles 
      WHERE user_id = ?`,
      [userId]
    );
    await db.close();

    if (!config) {
      return reply.code(404).send({ message: 'Configuración no encontrada' });
    }

    return reply.send(config);
  } catch (err) {
    console.error('Error al obtener configuración:', err);
    return reply.code(500).send({ message: 'Error al obtener configuración' });
  }
});

// Endpoint para autenticación con Google (verifica token, crea usuario si no existe, devuelve JWT)
type GooglePayload = {
  email: string;
  name: string;
  picture?: string;
  [key: string]: any;
};
fastify.post('/auth/google', async (request, reply) => {
  const { token } = request.body as any;
  
  if (!token) {
    return reply.code(400).send({ message: 'Falta token de Google' });
  }

  try {
    const res = await fetch(`https://oauth2.googleapis.com/tokeninfo?id_token=${token}`);
    if (!res.ok) {
      return reply.code(401).send({ message: 'Token de Google inválido' });
    }
    
    const payload = (await res.json()) as GooglePayload;
    
    const db = await openDb();
    let user = await db.get('SELECT * FROM users WHERE email = ?', [payload.email]);
    
    if (!user) {
      // Crear nuevo usuario con Google
      const result = await redisClient.rPush('sqlite_write_queue', JSON.stringify({
        sql: 'INSERT INTO users (username, email, password_hash) VALUES (?, ?, ?)',
        params: [payload.name, payload.email, ''] // Sin contraseña para usuarios de Google
    }));
      
      user = await db.get('SELECT * FROM users WHERE email = ?', [payload.email]);
    }

    const jwtToken = jwt.sign({
      user_id: user.id,
      username: user.username,
      email: user.email,
      exp: Math.floor(Date.now() / 1000) + (60 * 60) // 1 hora
    }, JWT_SECRET);

    // Registrar sesión en DB y Redis
    const expiresAt = new Date(Date.now() + 3600 * 1000); // 1 hora
    await redisClient.rPush('sqlite_write_queue', JSON.stringify({
      sql: 
      `INSERT INTO sessions (user_id, session_token, expires_at) 
      VALUES (?, ?, ?)`,
      params: [user.id, jwtToken, expiresAt.toISOString()]
    }));
    await redisClient.set(`user:${user.id}:online`, 'true');
    await redisClient.sAdd('online_users', user.id.toString());
    await redisClient.set(`user:${user.id}:last_seen`, Date.now().toString());
    await redisClient.set(`jwt:${jwtToken}`, user.id.toString(), { EX: 3600 });

    await db.close();
    
    return reply.send({ 
      token: jwtToken,
      user: {
        id: user.id,
        username: user.username,
        email: user.email
      }
    });
  } catch (err) {
    console.error('Error con Google Sign-In:', err);
    return reply.code(500).send({ message: 'Error con Google Sign-In' });
  }
});

// Endpoint para descargar historial
fastify.get('/auth/profile/download-historial', { preHandler: verifyToken }, async (request, reply) => {
  const userId = (request as any).user.user_id;
  const filePath = path.resolve('/app/data/historial_partidas.txt');

  if (!fs.existsSync(filePath)) {
    return reply.code(404).send({ message: 'Historial no encontrado' });
  }

  return reply
    .type('text/plain')
    .header('Content-Disposition', `attachment; filename=historial_${userId}.txt`)
    .send(fs.createReadStream(filePath));
});

// Inicializar base de datos y Redis
Promise.all([initializeDb(), connectRedis()])
  .then(() => {
    fastify.listen({ port: 8000, host: '0.0.0.0' }, (err, address) => {
      if (err) {
        fastify.log.error(err);
        process.exit(1);
      }
      console.log(`Servidor escuchando en ${address}`);
    });
  })
  .catch((err) => {
    console.error('Error al inicializar servicios:', err);
    process.exit(1);
  });

// Cerrar conexiones al apagar el servidor
process.on('SIGINT', async () => {
  await redisClient.quit();
  fastify.close();
  process.exit();
});[1;30m----------------------------------------[0m

[1;34m=== ./src/routes/friends.routes.ts ===[0m
import { FastifyInstance } from 'fastify';
import {
  getFriendsHandler,
  getPendingRequestsHandler,
  getAvailableUsersHandler,
  sendFriendRequestHandler,
  acceptFriendRequestHandler,
  rejectFriendRequestHandler
} from '../controllers/friends.controller';
import { verifyToken } from '../utils/auth-middleware';

export default async function friendsRoutes(fastify: FastifyInstance) {
    console.log("✅ Friends routes registered");
  fastify.get('/', { preHandler: verifyToken }, getFriendsHandler);
  fastify.get('/requests', { preHandler: verifyToken }, getPendingRequestsHandler);
  fastify.get('/available', { preHandler: verifyToken }, getAvailableUsersHandler);
  fastify.post('/request/:targetId', { preHandler: verifyToken }, sendFriendRequestHandler);
  fastify.post('/requests/accept', { preHandler: verifyToken }, acceptFriendRequestHandler);
  fastify.post('/requests/reject', { preHandler: verifyToken }, rejectFriendRequestHandler);
}[1;30m----------------------------------------[0m

[1;34m=== ./src/routes/games.routes.ts ===[0m
// auth-service/routes/games.routes.ts

import { FastifyInstance } from 'fastify';
import { startGameHandler } from '../controllers/games.controller';
import { getUserIdByUsername } from '../controllers/games.controller';

export default async function gamesRoutes(fastify: FastifyInstance) {
  fastify.post('/start', startGameHandler);
fastify.get('/user-id', getUserIdByUsername);
  
}
[1;30m----------------------------------------[0m

[1;34m=== ./src/redis-client.ts ===[0m
// auth-service/src/redis-client.ts
import { createClient } from 'redis';
import dotenv from 'dotenv';

dotenv.config();

const redisClient = createClient({
  url: process.env.REDIS_URL || `redis://:${process.env.REDIS_PASSWORD || ''}@${process.env.REDIS_HOST || 'redis'}:${process.env.REDIS_PORT || '6379'}`
});

redisClient.on('error', (err) => {
  console.error('Redis client error:', err);
});

export async function connectRedis() {
  try {
    if (redisClient.isOpen) {
        console.log('🔁 Redis ya estaba conectado');
        return;
    }

    if (!redisClient.isOpen) {
      await redisClient.connect();
      console.log('✅ Conectado a Redis');
    }
  } catch (err) {
        console.error('Error conectando a Redis:', err);
    }
}

export default redisClient;[1;30m----------------------------------------[0m

[1;31m=== ./package.json (archivo binario, omitido) ===[0m

[1;34m=== ./package-lock.json ===[0m
{
  "name": "auth-service",
  "version": "1.0.0",
  "lockfileVersion": 3,
  "requires": true,
  "packages": {
    "": {
      "name": "auth-service",
      "version": "1.0.0",
      "license": "ISC",
      "dependencies": {
        "@fastify/cors": "^9.0.0",
        "@fastify/multipart": "^7.6.1",
        "bcryptjs": "^2.x.x",
        "canvas": "^2.11.2",
        "dotenv": "^16.x.x",
        "fastify": "^4.x.x",
        "jsonwebtoken": "^9.x.x",
        "node-fetch": "^3.x.x",
        "redis": "^4.6.7",
        "sqlite": "^5.x.x",
        "sqlite3": "^5.x.x"
      },
      "devDependencies": {
        "@types/bcryptjs": "^2.4.2",
        "@types/jsonwebtoken": "^9.0.0",
        "@types/node": "^20.x.x",
        "ts-node": "^10.x.x",
        "ts-node-dev": "^2.x.x",
        "typescript": "^5.x.x"
      }
    },
    "node_modules/@cspotcode/source-map-support": {
      "version": "0.8.1",
      "resolved": "https://registry.npmjs.org/@cspotcode/source-map-support/-/source-map-support-0.8.1.tgz",
      "integrity": "sha512-IchNf6dN4tHoMFIn/7OE8LWZ19Y6q/67Bmf6vnGREv8RSbBVb9LPJxEcnwrcwX6ixSvaiGoomAUvu4YSxXrVgw==",
      "dev": true,
      "dependencies": {
        "@jridgewell/trace-mapping": "0.3.9"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@fastify/accept-negotiator": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@fastify/accept-negotiator/-/accept-negotiator-1.1.0.tgz",
      "integrity": "sha512-OIHZrb2ImZ7XG85HXOONLcJWGosv7sIvM2ifAPQVhg9Lv7qdmMBNVaai4QTdyuaqbKM5eO6sLSQOYI7wEQeCJQ==",
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/@fastify/ajv-compiler": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/@fastify/ajv-compiler/-/ajv-compiler-3.6.0.tgz",
      "integrity": "sha512-LwdXQJjmMD+GwLOkP7TVC68qa+pSSogeWWmznRJ/coyTcfe9qA05AHFSe1eZFwK6q+xVRpChnvFUkf1iYaSZsQ==",
      "dependencies": {
        "ajv": "^8.11.0",
        "ajv-formats": "^2.1.1",
        "fast-uri": "^2.0.0"
      }
    },
    "node_modules/@fastify/busboy": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/@fastify/busboy/-/busboy-1.2.1.tgz",
      "integrity": "sha512-7PQA7EH43S0CxcOa9OeAnaeA0oQ+e/DHNPZwSQM9CQHW76jle5+OvLdibRp/Aafs9KXbLhxyjOTkRjWUbQEd3Q==",
      "dependencies": {
        "text-decoding": "^1.0.0"
      },
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/@fastify/cors": {
      "version": "9.0.1",
      "resolved": "https://registry.npmjs.org/@fastify/cors/-/cors-9.0.1.tgz",
      "integrity": "sha512-YY9Ho3ovI+QHIL2hW+9X4XqQjXLjJqsU+sMV/xFsxZkE8p3GNnYVFpoOxF7SsP5ZL76gwvbo3V9L+FIekBGU4Q==",
      "dependencies": {
        "fastify-plugin": "^4.0.0",
        "mnemonist": "0.39.6"
      }
    },
    "node_modules/@fastify/deepmerge": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/@fastify/deepmerge/-/deepmerge-1.3.0.tgz",
      "integrity": "sha512-J8TOSBq3SoZbDhM9+R/u77hP93gz/rajSA+K2kGyijPpORPWUXHUpTaleoj+92As0S9uPRP7Oi8IqMf0u+ro6A=="
    },
    "node_modules/@fastify/error": {
      "version": "3.4.1",
      "resolved": "https://registry.npmjs.org/@fastify/error/-/error-3.4.1.tgz",
      "integrity": "sha512-wWSvph+29GR783IhmvdwWnN4bUxTD01Vm5Xad4i7i1VuAOItLvbPAb69sb0IQ2N57yprvhNIwAP5B6xfKTmjmQ=="
    },
    "node_modules/@fastify/fast-json-stringify-compiler": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/@fastify/fast-json-stringify-compiler/-/fast-json-stringify-compiler-4.3.0.tgz",
      "integrity": "sha512-aZAXGYo6m22Fk1zZzEUKBvut/CIIQe/BapEORnxiD5Qr0kPHqqI69NtEMCme74h+at72sPhbkb4ZrLd1W3KRLA==",
      "dependencies": {
        "fast-json-stringify": "^5.7.0"
      }
    },
    "node_modules/@fastify/merge-json-schemas": {
      "version": "0.1.1",
      "resolved": "https://registry.npmjs.org/@fastify/merge-json-schemas/-/merge-json-schemas-0.1.1.tgz",
      "integrity": "sha512-fERDVz7topgNjtXsJTTW1JKLy0rhuLRcquYqNR9rF7OcVpCa2OVW49ZPDIhaRRCaUuvVxI+N416xUoF76HNSXA==",
      "dependencies": {
        "fast-deep-equal": "^3.1.3"
      }
    },
    "node_modules/@fastify/multipart": {
      "version": "7.7.3",
      "resolved": "https://registry.npmjs.org/@fastify/multipart/-/multipart-7.7.3.tgz",
      "integrity": "sha512-MG4Gd9FNEXc8qx0OgqoXM10EGO/dN/0iVQ8SrpFMU3d6F6KUfcqD2ZyoQhkm9LWrbiMgdHv5a43x78lASdn5GA==",
      "dependencies": {
        "@fastify/busboy": "^1.0.0",
        "@fastify/deepmerge": "^1.0.0",
        "@fastify/error": "^3.0.0",
        "@fastify/swagger": "^8.3.1",
        "@fastify/swagger-ui": "^1.8.0",
        "end-of-stream": "^1.4.4",
        "fastify-plugin": "^4.0.0",
        "secure-json-parse": "^2.4.0",
        "stream-wormhole": "^1.1.0"
      }
    },
    "node_modules/@fastify/send": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/@fastify/send/-/send-2.1.0.tgz",
      "integrity": "sha512-yNYiY6sDkexoJR0D8IDy3aRP3+L4wdqCpvx5WP+VtEU58sn7USmKynBzDQex5X42Zzvw2gNzzYgP90UfWShLFA==",
      "dependencies": {
        "@lukeed/ms": "^2.0.1",
        "escape-html": "~1.0.3",
        "fast-decode-uri-component": "^1.0.1",
        "http-errors": "2.0.0",
        "mime": "^3.0.0"
      }
    },
    "node_modules/@fastify/static": {
      "version": "6.12.0",
      "resolved": "https://registry.npmjs.org/@fastify/static/-/static-6.12.0.tgz",
      "integrity": "sha512-KK1B84E6QD/FcQWxDI2aiUCwHxMJBI1KeCUzm1BwYpPY1b742+jeKruGHP2uOluuM6OkBPI8CIANrXcCRtC2oQ==",
      "dependencies": {
        "@fastify/accept-negotiator": "^1.0.0",
        "@fastify/send": "^2.0.0",
        "content-disposition": "^0.5.3",
        "fastify-plugin": "^4.0.0",
        "glob": "^8.0.1",
        "p-limit": "^3.1.0"
      }
    },
    "node_modules/@fastify/swagger": {
      "version": "8.15.0",
      "resolved": "https://registry.npmjs.org/@fastify/swagger/-/swagger-8.15.0.tgz",
      "integrity": "sha512-zy+HEEKFqPMS2sFUsQU5X0MHplhKJvWeohBwTCkBAJA/GDYGLGUWQaETEhptiqxK7Hs0fQB9B4MDb3pbwIiCwA==",
      "dependencies": {
        "fastify-plugin": "^4.0.0",
        "json-schema-resolver": "^2.0.0",
        "openapi-types": "^12.0.0",
        "rfdc": "^1.3.0",
        "yaml": "^2.2.2"
      }
    },
    "node_modules/@fastify/swagger-ui": {
      "version": "1.10.2",
      "resolved": "https://registry.npmjs.org/@fastify/swagger-ui/-/swagger-ui-1.10.2.tgz",
      "integrity": "sha512-f2mRqtblm6eRAFQ3e8zSngxVNEtiYY7rISKQVjPA++ZsWc5WYlPVTb6Bx0G/zy0BIoucNqDr/Q2Vb/kTYkOq1A==",
      "dependencies": {
        "@fastify/static": "^6.0.0",
        "fastify-plugin": "^4.0.0",
        "openapi-types": "^12.0.2",
        "rfdc": "^1.3.0",
        "yaml": "^2.2.2"
      }
    },
    "node_modules/@gar/promisify": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/@gar/promisify/-/promisify-1.1.3.tgz",
      "integrity": "sha512-k2Ty1JcVojjJFwrg/ThKi2ujJ7XNLYaFGNB/bWT9wGR+oSMJHMa5w+CUq6p/pVrKeNNgA7pCqEcjSnHVoqJQFw==",
      "optional": true
    },
    "node_modules/@jridgewell/resolve-uri": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz",
      "integrity": "sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==",
      "dev": true,
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/sourcemap-codec": {
      "version": "1.5.4",
      "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.4.tgz",
      "integrity": "sha512-VT2+G1VQs/9oz078bLrYbecdZKs912zQlkelYpuf+SXF+QvZDYJlbx/LSx+meSAwdDFnF8FVXW92AVjjkVmgFw==",
      "dev": true
    },
    "node_modules/@jridgewell/trace-mapping": {
      "version": "0.3.9",
      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.9.tgz",
      "integrity": "sha512-3Belt6tdc8bPgAtbcmdtNJlirVoTmEb5e2gC94PnkwEW9jI6CAHUeoG85tjWP5WquqfavoMtMwiG4P926ZKKuQ==",
      "dev": true,
      "dependencies": {
        "@jridgewell/resolve-uri": "^3.0.3",
        "@jridgewell/sourcemap-codec": "^1.4.10"
      }
    },
    "node_modules/@lukeed/ms": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/@lukeed/ms/-/ms-2.0.2.tgz",
      "integrity": "sha512-9I2Zn6+NJLfaGoz9jN3lpwDgAYvfGeNYdbAIjJOqzs4Tpc+VU3Jqq4IofSUBKajiDS8k9fZIg18/z13mpk1bsA==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/@mapbox/node-pre-gyp": {
      "version": "1.0.11",
      "resolved": "https://registry.npmjs.org/@mapbox/node-pre-gyp/-/node-pre-gyp-1.0.11.tgz",
      "integrity": "sha512-Yhlar6v9WQgUp/He7BdgzOz8lqMQ8sU+jkCq7Wx8Myc5YFJLbEe7lgui/V7G1qB1DJykHSGwreceSaD60Y0PUQ==",
      "dependencies": {
        "detect-libc": "^2.0.0",
        "https-proxy-agent": "^5.0.0",
        "make-dir": "^3.1.0",
        "node-fetch": "^2.6.7",
        "nopt": "^5.0.0",
        "npmlog": "^5.0.1",
        "rimraf": "^3.0.2",
        "semver": "^7.3.5",
        "tar": "^6.1.11"
      },
      "bin": {
        "node-pre-gyp": "bin/node-pre-gyp"
      }
    },
    "node_modules/@mapbox/node-pre-gyp/node_modules/node-fetch": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.7.0.tgz",
      "integrity": "sha512-c4FRfUm/dbcWZ7U+1Wq0AwCyFL+3nt2bEw05wfxSz+DWpWsitgmSgYmy2dQdWyKC1694ELPqMs/YzUSNozLt8A==",
      "dependencies": {
        "whatwg-url": "^5.0.0"
      },
      "engines": {
        "node": "4.x || >=6.0.0"
      },
      "peerDependencies": {
        "encoding": "^0.1.0"
      },
      "peerDependenciesMeta": {
        "encoding": {
          "optional": true
        }
      }
    },
    "node_modules/@npmcli/fs": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@npmcli/fs/-/fs-1.1.1.tgz",
      "integrity": "sha512-8KG5RD0GVP4ydEzRn/I4BNDuxDtqVbOdm8675T49OIG/NGhaK0pjPX7ZcDlvKYbA+ulvVK3ztfcF4uBdOxuJbQ==",
      "optional": true,
      "dependencies": {
        "@gar/promisify": "^1.0.1",
        "semver": "^7.3.5"
      }
    },
    "node_modules/@npmcli/move-file": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@npmcli/move-file/-/move-file-1.1.2.tgz",
      "integrity": "sha512-1SUf/Cg2GzGDyaf15aR9St9TWlb+XvbZXWpDx8YKs7MLzMH/BCeopv+y9vzrzgkfykCGuWOlSu3mZhj2+FQcrg==",
      "deprecated": "This functionality has been moved to @npmcli/fs",
      "optional": true,
      "dependencies": {
        "mkdirp": "^1.0.4",
        "rimraf": "^3.0.2"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/@redis/bloom": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@redis/bloom/-/bloom-1.2.0.tgz",
      "integrity": "sha512-HG2DFjYKbpNmVXsa0keLHp/3leGJz1mjh09f2RLGGLQZzSHpkmZWuwJbAvo3QcRY8p80m5+ZdXZdYOSBLlp7Cg==",
      "peerDependencies": {
        "@redis/client": "^1.0.0"
      }
    },
    "node_modules/@redis/client": {
      "version": "1.6.1",
      "resolved": "https://registry.npmjs.org/@redis/client/-/client-1.6.1.tgz",
      "integrity": "sha512-/KCsg3xSlR+nCK8/8ZYSknYxvXHwubJrU82F3Lm1Fp6789VQ0/3RJKfsmRXjqfaTA++23CvC3hqmqe/2GEt6Kw==",
      "dependencies": {
        "cluster-key-slot": "1.1.2",
        "generic-pool": "3.9.0",
        "yallist": "4.0.0"
      },
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/@redis/graph": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/@redis/graph/-/graph-1.1.1.tgz",
      "integrity": "sha512-FEMTcTHZozZciLRl6GiiIB4zGm5z5F3F6a6FZCyrfxdKOhFlGkiAqlexWMBzCi4DcRoyiOsuLfW+cjlGWyExOw==",
      "peerDependencies": {
        "@redis/client": "^1.0.0"
      }
    },
    "node_modules/@redis/json": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/@redis/json/-/json-1.0.7.tgz",
      "integrity": "sha512-6UyXfjVaTBTJtKNG4/9Z8PSpKE6XgSyEb8iwaqDcy+uKrd/DGYHTWkUdnQDyzm727V7p21WUMhsqz5oy65kPcQ==",
      "peerDependencies": {
        "@redis/client": "^1.0.0"
      }
    },
    "node_modules/@redis/search": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/@redis/search/-/search-1.2.0.tgz",
      "integrity": "sha512-tYoDBbtqOVigEDMAcTGsRlMycIIjwMCgD8eR2t0NANeQmgK/lvxNAvYyb6bZDD4frHRhIHkJu2TBRvB0ERkOmw==",
      "peerDependencies": {
        "@redis/client": "^1.0.0"
      }
    },
    "node_modules/@redis/time-series": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/@redis/time-series/-/time-series-1.1.0.tgz",
      "integrity": "sha512-c1Q99M5ljsIuc4YdaCwfUEXsofakb9c8+Zse2qxTadu8TalLXuAESzLvFAvNVbkmSlvlzIQOLpBCmWI9wTOt+g==",
      "peerDependencies": {
        "@redis/client": "^1.0.0"
      }
    },
    "node_modules/@tootallnate/once": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/@tootallnate/once/-/once-1.1.2.tgz",
      "integrity": "sha512-RbzJvlNzmRq5c3O09UipeuXno4tA1FE6ikOjxZK0tuxVv3412l64l5t1W5pj4+rJq9vpkm/kwiR07aZXnsKPxw==",
      "optional": true,
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/@tsconfig/node10": {
      "version": "1.0.11",
      "resolved": "https://registry.npmjs.org/@tsconfig/node10/-/node10-1.0.11.tgz",
      "integrity": "sha512-DcRjDCujK/kCk/cUe8Xz8ZSpm8mS3mNNpta+jGCA6USEDfktlNvm1+IuZ9eTcDbNk41BHwpHHeW+N1lKCz4zOw==",
      "dev": true
    },
    "node_modules/@tsconfig/node12": {
      "version": "1.0.11",
      "resolved": "https://registry.npmjs.org/@tsconfig/node12/-/node12-1.0.11.tgz",
      "integrity": "sha512-cqefuRsh12pWyGsIoBKJA9luFu3mRxCA+ORZvA4ktLSzIuCUtWVxGIuXigEwO5/ywWFMZ2QEGKWvkZG1zDMTag==",
      "dev": true
    },
    "node_modules/@tsconfig/node14": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/@tsconfig/node14/-/node14-1.0.3.tgz",
      "integrity": "sha512-ysT8mhdixWK6Hw3i1V2AeRqZ5WfXg1G43mqoYlM2nc6388Fq5jcXyr5mRsqViLx/GJYdoL0bfXD8nmF+Zn/Iow==",
      "dev": true
    },
    "node_modules/@tsconfig/node16": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/@tsconfig/node16/-/node16-1.0.4.tgz",
      "integrity": "sha512-vxhUy4J8lyeyinH7Azl1pdd43GJhZH/tP2weN8TntQblOY+A0XbT8DJk1/oCPuOOyg/Ja757rG0CgHcWC8OfMA==",
      "dev": true
    },
    "node_modules/@types/bcryptjs": {
      "version": "2.4.6",
      "resolved": "https://registry.npmjs.org/@types/bcryptjs/-/bcryptjs-2.4.6.tgz",
      "integrity": "sha512-9xlo6R2qDs5uixm0bcIqCeMCE6HiQsIyel9KQySStiyqNl2tnj2mP3DX1Nf56MD6KMenNNlBBsy3LJ7gUEQPXQ==",
      "dev": true
    },
    "node_modules/@types/jsonwebtoken": {
      "version": "9.0.10",
      "resolved": "https://registry.npmjs.org/@types/jsonwebtoken/-/jsonwebtoken-9.0.10.tgz",
      "integrity": "sha512-asx5hIG9Qmf/1oStypjanR7iKTv0gXQ1Ov/jfrX6kS/EO0OFni8orbmGCn0672NHR3kXHwpAwR+B368ZGN/2rA==",
      "dev": true,
      "dependencies": {
        "@types/ms": "*",
        "@types/node": "*"
      }
    },
    "node_modules/@types/ms": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/@types/ms/-/ms-2.1.0.tgz",
      "integrity": "sha512-GsCCIZDE/p3i96vtEqx+7dBUGXrc7zeSK3wwPHIaRThS+9OhWIXRqzs4d6k1SVU8g91DrNRWxWUGhp5KXQb2VA==",
      "dev": true
    },
    "node_modules/@types/node": {
      "version": "20.19.9",
      "resolved": "https://registry.npmjs.org/@types/node/-/node-20.19.9.tgz",
      "integrity": "sha512-cuVNgarYWZqxRJDQHEB58GEONhOK79QVR/qYx4S7kcUObQvUwvFnYxJuuHUKm2aieN9X3yZB4LZsuYNU1Qphsw==",
      "dev": true,
      "dependencies": {
        "undici-types": "~6.21.0"
      }
    },
    "node_modules/@types/strip-bom": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/@types/strip-bom/-/strip-bom-3.0.0.tgz",
      "integrity": "sha512-xevGOReSYGM7g/kUBZzPqCrR/KYAo+F0yiPc85WFTJa0MSLtyFTVTU6cJu/aV4mid7IffDIWqo69THF2o4JiEQ==",
      "dev": true
    },
    "node_modules/@types/strip-json-comments": {
      "version": "0.0.30",
      "resolved": "https://registry.npmjs.org/@types/strip-json-comments/-/strip-json-comments-0.0.30.tgz",
      "integrity": "sha512-7NQmHra/JILCd1QqpSzl8+mJRc8ZHz3uDm8YV1Ks9IhK0epEiTw8aIErbvH9PI+6XbqhyIQy3462nEsn7UVzjQ==",
      "dev": true
    },
    "node_modules/abbrev": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/abbrev/-/abbrev-1.1.1.tgz",
      "integrity": "sha512-nne9/IiQ/hzIhY6pdDnbBtz7DjPTKrY00P/zvPSm5pOFkl6xuGrGnXn/VtTNNfNtAfZ9/1RtehkszU9qcTii0Q=="
    },
    "node_modules/abstract-logging": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/abstract-logging/-/abstract-logging-2.0.1.tgz",
      "integrity": "sha512-2BjRTZxTPvheOvGbBslFSYOUkr+SjPtOnrLP33f+VIWLzezQpZcqVg7ja3L4dBXmzzgwT+a029jRx5PCi3JuiA=="
    },
    "node_modules/acorn": {
      "version": "8.15.0",
      "resolved": "https://registry.npmjs.org/acorn/-/acorn-8.15.0.tgz",
      "integrity": "sha512-NZyJarBfL7nWwIq+FDL6Zp/yHEhePMNnnJ0y3qfieCrmNvYct8uvtiV41UvlSe6apAfk0fY1FbWx+NwfmpvtTg==",
      "dev": true,
      "bin": {
        "acorn": "bin/acorn"
      },
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/acorn-walk": {
      "version": "8.3.4",
      "resolved": "https://registry.npmjs.org/acorn-walk/-/acorn-walk-8.3.4.tgz",
      "integrity": "sha512-ueEepnujpqee2o5aIYnvHU6C0A42MNdsIDeqy5BydrkuC5R1ZuUFnm27EeFJGoEHJQgn3uleRvmTXaJgfXbt4g==",
      "dev": true,
      "dependencies": {
        "acorn": "^8.11.0"
      },
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/agent-base": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/agent-base/-/agent-base-6.0.2.tgz",
      "integrity": "sha512-RZNwNclF7+MS/8bDg70amg32dyeZGZxiDuQmZxKLAlQjr3jGyLx+4Kkk58UO7D2QdgFIQCovuSuZESne6RG6XQ==",
      "dependencies": {
        "debug": "4"
      },
      "engines": {
        "node": ">= 6.0.0"
      }
    },
    "node_modules/agentkeepalive": {
      "version": "4.6.0",
      "resolved": "https://registry.npmjs.org/agentkeepalive/-/agentkeepalive-4.6.0.tgz",
      "integrity": "sha512-kja8j7PjmncONqaTsB8fQ+wE2mSU2DJ9D4XKoJ5PFWIdRMa6SLSN1ff4mOr4jCbfRSsxR4keIiySJU0N9T5hIQ==",
      "optional": true,
      "dependencies": {
        "humanize-ms": "^1.2.1"
      },
      "engines": {
        "node": ">= 8.0.0"
      }
    },
    "node_modules/aggregate-error": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/aggregate-error/-/aggregate-error-3.1.0.tgz",
      "integrity": "sha512-4I7Td01quW/RpocfNayFdFVk1qSuoh0E7JrbRJ16nH01HhKFQ88INq9Sd+nd72zqRySlr9BmDA8xlEJ6vJMrYA==",
      "optional": true,
      "dependencies": {
        "clean-stack": "^2.0.0",
        "indent-string": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/ajv": {
      "version": "8.17.1",
      "resolved": "https://registry.npmjs.org/ajv/-/ajv-8.17.1.tgz",
      "integrity": "sha512-B/gBuNg5SiMTrPkC+A2+cW0RszwxYmn6VYxB/inlBStS5nx6xHIt/ehKRhIMhqusl7a8LjQoZnjCs5vhwxOQ1g==",
      "dependencies": {
        "fast-deep-equal": "^3.1.3",
        "fast-uri": "^3.0.1",
        "json-schema-traverse": "^1.0.0",
        "require-from-string": "^2.0.2"
      },
      "funding": {
        "type": "github",
        "url": "https://github.com/sponsors/epoberezkin"
      }
    },
    "node_modules/ajv-formats": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/ajv-formats/-/ajv-formats-2.1.1.tgz",
      "integrity": "sha512-Wx0Kx52hxE7C18hkMEggYlEifqWZtYaRgouJor+WMdPnQyEK13vgEWyVNup7SoeeoLMsr4kf5h6dOW11I15MUA==",
      "dependencies": {
        "ajv": "^8.0.0"
      },
      "peerDependencies": {
        "ajv": "^8.0.0"
      },
      "peerDependenciesMeta": {
        "ajv": {
          "optional": true
        }
      }
    },
    "node_modules/ajv/node_modules/fast-uri": {
      "version": "3.0.6",
      "resolved": "https://registry.npmjs.org/fast-uri/-/fast-uri-3.0.6.tgz",
      "integrity": "sha512-Atfo14OibSv5wAp4VWNsFYE1AchQRTv9cBGWET4pZWHzYshFSS9NQI6I57rdKn9croWVMbYFbLhJ+yJvmZIIHw==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/fastify"
        },
        {
          "type": "opencollective",
          "url": "https://opencollective.com/fastify"
        }
      ]
    },
    "node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/anymatch": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz",
      "integrity": "sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==",
      "dev": true,
      "dependencies": {
        "normalize-path": "^3.0.0",
        "picomatch": "^2.0.4"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/aproba": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/aproba/-/aproba-2.1.0.tgz",
      "integrity": "sha512-tLIEcj5GuR2RSTnxNKdkK0dJ/GrC7P38sUkiDmDuHfsHmbagTFAxDVIBltoklXEVIQ/f14IL8IMJ5pn9Hez1Ew=="
    },
    "node_modules/are-we-there-yet": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/are-we-there-yet/-/are-we-there-yet-2.0.0.tgz",
      "integrity": "sha512-Ci/qENmwHnsYo9xKIcUJN5LeDKdJ6R1Z1j9V/J5wyq8nh/mYPEpIKJbBZXtZjG04HiK7zV/p6Vs9952MrMeUIw==",
      "deprecated": "This package is no longer supported.",
      "dependencies": {
        "delegates": "^1.0.0",
        "readable-stream": "^3.6.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/arg": {
      "version": "4.1.3",
      "resolved": "https://registry.npmjs.org/arg/-/arg-4.1.3.tgz",
      "integrity": "sha512-58S9QDqG0Xx27YwPSt9fJxivjYl432YCwfDMfZ+71RAqUrZef7LrKQZ3LHLOwCS4FLNBplP533Zx895SeOCHvA==",
      "dev": true
    },
    "node_modules/atomic-sleep": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/atomic-sleep/-/atomic-sleep-1.0.0.tgz",
      "integrity": "sha512-kNOjDqAh7px0XWNI+4QbzoiR/nTkHAWNud2uvnJquD1/x5a7EQZMJT0AczqK0Qn67oY/TTQ1LbUKajZpp3I9tQ==",
      "engines": {
        "node": ">=8.0.0"
      }
    },
    "node_modules/avvio": {
      "version": "8.4.0",
      "resolved": "https://registry.npmjs.org/avvio/-/avvio-8.4.0.tgz",
      "integrity": "sha512-CDSwaxINFy59iNwhYnkvALBwZiTydGkOecZyPkqBpABYR1KqGEsET0VOOYDwtleZSUIdeY36DC2bSZ24CO1igA==",
      "dependencies": {
        "@fastify/error": "^3.3.0",
        "fastq": "^1.17.1"
      }
    },
    "node_modules/balanced-match": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw=="
    },
    "node_modules/base64-js": {
      "version": "1.5.1",
      "resolved": "https://registry.npmjs.org/base64-js/-/base64-js-1.5.1.tgz",
      "integrity": "sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ]
    },
    "node_modules/bcryptjs": {
      "version": "2.4.3",
      "resolved": "https://registry.npmjs.org/bcryptjs/-/bcryptjs-2.4.3.tgz",
      "integrity": "sha512-V/Hy/X9Vt7f3BbPJEi8BdVFMByHi+jNXrYkW3huaybV/kQ0KJg0Y6PkEMbn+zeT+i+SiKZ/HMqJGIIt4LZDqNQ=="
    },
    "node_modules/binary-extensions": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.3.0.tgz",
      "integrity": "sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==",
      "dev": true,
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/bindings": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/bindings/-/bindings-1.5.0.tgz",
      "integrity": "sha512-p2q/t/mhvuOj/UeLlV6566GD/guowlr0hHxClI0W9m7MWYkL1F0hLo+0Aexs9HSPCtR1SXQ0TD3MMKrXZajbiQ==",
      "dependencies": {
        "file-uri-to-path": "1.0.0"
      }
    },
    "node_modules/bl": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/bl/-/bl-4.1.0.tgz",
      "integrity": "sha512-1W07cM9gS6DcLperZfFSj+bWLtaPGSOHWhPiGzXmvVJbRLdG82sH/Kn8EtW1VqWVA54AKf2h5k5BbnIbwF3h6w==",
      "dependencies": {
        "buffer": "^5.5.0",
        "inherits": "^2.0.4",
        "readable-stream": "^3.4.0"
      }
    },
    "node_modules/brace-expansion": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.2.tgz",
      "integrity": "sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==",
      "dependencies": {
        "balanced-match": "^1.0.0"
      }
    },
    "node_modules/braces": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.3.tgz",
      "integrity": "sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==",
      "dev": true,
      "dependencies": {
        "fill-range": "^7.1.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/buffer": {
      "version": "5.7.1",
      "resolved": "https://registry.npmjs.org/buffer/-/buffer-5.7.1.tgz",
      "integrity": "sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "dependencies": {
        "base64-js": "^1.3.1",
        "ieee754": "^1.1.13"
      }
    },
    "node_modules/buffer-equal-constant-time": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/buffer-equal-constant-time/-/buffer-equal-constant-time-1.0.1.tgz",
      "integrity": "sha512-zRpUiDwd/xk6ADqPMATG8vc9VPrkck7T07OIx0gnjmJAnHnTVXNQG3vfvWNuiZIkwu9KrKdA1iJKfsfTVxE6NA=="
    },
    "node_modules/buffer-from": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.2.tgz",
      "integrity": "sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==",
      "dev": true
    },
    "node_modules/cacache": {
      "version": "15.3.0",
      "resolved": "https://registry.npmjs.org/cacache/-/cacache-15.3.0.tgz",
      "integrity": "sha512-VVdYzXEn+cnbXpFgWs5hTT7OScegHVmLhJIR8Ufqk3iFD6A6j5iSX1KuBTfNEv4tdJWE2PzA6IVFtcLC7fN9wQ==",
      "optional": true,
      "dependencies": {
        "@npmcli/fs": "^1.0.0",
        "@npmcli/move-file": "^1.0.1",
        "chownr": "^2.0.0",
        "fs-minipass": "^2.0.0",
        "glob": "^7.1.4",
        "infer-owner": "^1.0.4",
        "lru-cache": "^6.0.0",
        "minipass": "^3.1.1",
        "minipass-collect": "^1.0.2",
        "minipass-flush": "^1.0.5",
        "minipass-pipeline": "^1.2.2",
        "mkdirp": "^1.0.3",
        "p-map": "^4.0.0",
        "promise-inflight": "^1.0.1",
        "rimraf": "^3.0.2",
        "ssri": "^8.0.1",
        "tar": "^6.0.2",
        "unique-filename": "^1.1.1"
      },
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/cacache/node_modules/brace-expansion": {
      "version": "1.1.12",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz",
      "integrity": "sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==",
      "optional": true,
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/cacache/node_modules/glob": {
      "version": "7.2.3",
      "resolved": "https://registry.npmjs.org/glob/-/glob-7.2.3.tgz",
      "integrity": "sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==",
      "deprecated": "Glob versions prior to v9 are no longer supported",
      "optional": true,
      "dependencies": {
        "fs.realpath": "^1.0.0",
        "inflight": "^1.0.4",
        "inherits": "2",
        "minimatch": "^3.1.1",
        "once": "^1.3.0",
        "path-is-absolute": "^1.0.0"
      },
      "engines": {
        "node": "*"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/cacache/node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "optional": true,
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/canvas": {
      "version": "2.11.2",
      "resolved": "https://registry.npmjs.org/canvas/-/canvas-2.11.2.tgz",
      "integrity": "sha512-ItanGBMrmRV7Py2Z+Xhs7cT+FNt5K0vPL4p9EZ/UX/Mu7hFbkxSjKF2KVtPwX7UYWp7dRKnrTvReflgrItJbdw==",
      "hasInstallScript": true,
      "dependencies": {
        "@mapbox/node-pre-gyp": "^1.0.0",
        "nan": "^2.17.0",
        "simple-get": "^3.0.3"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/chokidar": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-3.6.0.tgz",
      "integrity": "sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==",
      "dev": true,
      "dependencies": {
        "anymatch": "~3.1.2",
        "braces": "~3.0.2",
        "glob-parent": "~5.1.2",
        "is-binary-path": "~2.1.0",
        "is-glob": "~4.0.1",
        "normalize-path": "~3.0.0",
        "readdirp": "~3.6.0"
      },
      "engines": {
        "node": ">= 8.10.0"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      },
      "optionalDependencies": {
        "fsevents": "~2.3.2"
      }
    },
    "node_modules/chownr": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/chownr/-/chownr-2.0.0.tgz",
      "integrity": "sha512-bIomtDF5KGpdogkLd9VspvFzk9KfpyyGlS8YFVZl7TGPBHL5snIOnxeshwVgPteQ9b4Eydl+pVbIyE1DcvCWgQ==",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/clean-stack": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/clean-stack/-/clean-stack-2.2.0.tgz",
      "integrity": "sha512-4diC9HaTE+KRAMWhDhrGOECgWZxoevMc5TlkObMqNSsVU62PYzXZ/SMTjzyGAFF1YusgxGcSWTEXBhp0CPwQ1A==",
      "optional": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/cluster-key-slot": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/cluster-key-slot/-/cluster-key-slot-1.1.2.tgz",
      "integrity": "sha512-RMr0FhtfXemyinomL4hrWcYJxmX6deFdCxpJzhDttxgO1+bcCnkk+9drydLVDmAMG7NE6aN/fl4F7ucU/90gAA==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/color-support": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/color-support/-/color-support-1.1.3.tgz",
      "integrity": "sha512-qiBjkpbMLO/HL68y+lh4q0/O1MZFj2RX6X/KmMa3+gJD3z+WwI1ZzDHysvqHGS3mP6mznPckpXmw1nI9cJjyRg==",
      "bin": {
        "color-support": "bin.js"
      }
    },
    "node_modules/concat-map": {
      "version": "0.0.1",
      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
      "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg=="
    },
    "node_modules/console-control-strings": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/console-control-strings/-/console-control-strings-1.1.0.tgz",
      "integrity": "sha512-ty/fTekppD2fIwRvnZAVdeOiGd1c7YXEixbgJTNzqcxJWKQnjJ/V1bNEEE6hygpM3WjwHFUVK6HTjWSzV4a8sQ=="
    },
    "node_modules/content-disposition": {
      "version": "0.5.4",
      "resolved": "https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.4.tgz",
      "integrity": "sha512-FveZTNuGw04cxlAiWbzi6zTAL/lhehaWbTtgluJh4/E95DqMwTmha3KZN1aAWA8cFIhHzMZUvLevkw5Rqk+tSQ==",
      "dependencies": {
        "safe-buffer": "5.2.1"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/cookie": {
      "version": "0.7.2",
      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.7.2.tgz",
      "integrity": "sha512-yki5XnKuf750l50uGTllt6kKILY4nQ1eNIQatoXEByZ5dWgnKqbnqmTrBE5B4N7lrMJKQ2ytWMiTO2o0v6Ew/w==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/create-require": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/create-require/-/create-require-1.1.1.tgz",
      "integrity": "sha512-dcKFX3jn0MpIaXjisoRvexIJVEKzaq7z2rZKxf+MSr9TkdmHmsU4m2lcLojrj/FHl8mk5VxMmYA+ftRkP/3oKQ==",
      "dev": true
    },
    "node_modules/data-uri-to-buffer": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/data-uri-to-buffer/-/data-uri-to-buffer-4.0.1.tgz",
      "integrity": "sha512-0R9ikRb668HB7QDxT1vkpuUBtqc53YyAwMwGeUFKRojY/NWKvdZ+9UYtRfGmhqNbRkTSVpMbmyhXipFFv2cb/A==",
      "engines": {
        "node": ">= 12"
      }
    },
    "node_modules/debug": {
      "version": "4.4.1",
      "resolved": "https://registry.npmjs.org/debug/-/debug-4.4.1.tgz",
      "integrity": "sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==",
      "dependencies": {
        "ms": "^2.1.3"
      },
      "engines": {
        "node": ">=6.0"
      },
      "peerDependenciesMeta": {
        "supports-color": {
          "optional": true
        }
      }
    },
    "node_modules/decompress-response": {
      "version": "4.2.1",
      "resolved": "https://registry.npmjs.org/decompress-response/-/decompress-response-4.2.1.tgz",
      "integrity": "sha512-jOSne2qbyE+/r8G1VU+G/82LBs2Fs4LAsTiLSHOCOMZQl2OKZ6i8i4IyHemTe+/yIXOtTcRQMzPcgyhoFlqPkw==",
      "dependencies": {
        "mimic-response": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/deep-extend": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/deep-extend/-/deep-extend-0.6.0.tgz",
      "integrity": "sha512-LOHxIOaPYdHlJRtCQfDIVZtfw/ufM8+rVj649RIHzcm/vGwQRXFt6OPqIFWsm2XEMrNIEtWR64sY1LEKD2vAOA==",
      "engines": {
        "node": ">=4.0.0"
      }
    },
    "node_modules/delegates": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/delegates/-/delegates-1.0.0.tgz",
      "integrity": "sha512-bd2L678uiWATM6m5Z1VzNCErI3jiGzt6HGY8OVICs40JQq/HALfbyNJmp0UDakEY4pMMaN0Ly5om/B1VI/+xfQ=="
    },
    "node_modules/depd": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/depd/-/depd-2.0.0.tgz",
      "integrity": "sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/detect-libc": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/detect-libc/-/detect-libc-2.0.4.tgz",
      "integrity": "sha512-3UDv+G9CsCKO1WKMGw9fwq/SWJYbI0c5Y7LU1AXYoDdbhE2AHQ6N6Nb34sG8Fj7T5APy8qXDCKuuIHd1BR0tVA==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/diff": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/diff/-/diff-4.0.2.tgz",
      "integrity": "sha512-58lmxKSA4BNyLz+HHMUzlOEpg09FV+ev6ZMe3vJihgdxzgcwZ8VoEEPmALCZG9LmqfVoNMMKpttIYTVG6uDY7A==",
      "dev": true,
      "engines": {
        "node": ">=0.3.1"
      }
    },
    "node_modules/dotenv": {
      "version": "16.6.1",
      "resolved": "https://registry.npmjs.org/dotenv/-/dotenv-16.6.1.tgz",
      "integrity": "sha512-uBq4egWHTcTt33a72vpSG0z3HnPuIl6NqYcTrKEg2azoEyl2hpW0zqlxysq2pK9HlDIHyHyakeYaYnSAwd8bow==",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://dotenvx.com"
      }
    },
    "node_modules/dynamic-dedupe": {
      "version": "0.3.0",
      "resolved": "https://registry.npmjs.org/dynamic-dedupe/-/dynamic-dedupe-0.3.0.tgz",
      "integrity": "sha512-ssuANeD+z97meYOqd50e04Ze5qp4bPqo8cCkI4TRjZkzAUgIDTrXV1R8QCdINpiI+hw14+rYazvTRdQrz0/rFQ==",
      "dev": true,
      "dependencies": {
        "xtend": "^4.0.0"
      }
    },
    "node_modules/ecdsa-sig-formatter": {
      "version": "1.0.11",
      "resolved": "https://registry.npmjs.org/ecdsa-sig-formatter/-/ecdsa-sig-formatter-1.0.11.tgz",
      "integrity": "sha512-nagl3RYrbNv6kQkeJIpt6NJZy8twLB/2vtz6yN9Z4vRKHN4/QZJIEbqohALSgwKdnksuY3k5Addp5lg8sVoVcQ==",
      "dependencies": {
        "safe-buffer": "^5.0.1"
      }
    },
    "node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A=="
    },
    "node_modules/encoding": {
      "version": "0.1.13",
      "resolved": "https://registry.npmjs.org/encoding/-/encoding-0.1.13.tgz",
      "integrity": "sha512-ETBauow1T35Y/WZMkio9jiM0Z5xjHHmJ4XmjZOq1l/dXz3lr2sRn87nJy20RupqSh1F2m3HHPSp8ShIPQJrJ3A==",
      "optional": true,
      "dependencies": {
        "iconv-lite": "^0.6.2"
      }
    },
    "node_modules/end-of-stream": {
      "version": "1.4.5",
      "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.5.tgz",
      "integrity": "sha512-ooEGc6HP26xXq/N+GCGOT0JKCLDGrq2bQUZrQ7gyrJiZANJ/8YDTxTpQBXGMn+WbIQXNVpyWymm7KYVICQnyOg==",
      "dependencies": {
        "once": "^1.4.0"
      }
    },
    "node_modules/env-paths": {
      "version": "2.2.1",
      "resolved": "https://registry.npmjs.org/env-paths/-/env-paths-2.2.1.tgz",
      "integrity": "sha512-+h1lkLKhZMTYjog1VEpJNG7NZJWcuc2DDk/qsqSTRRCOXiLjeQ1d1/udrUGhqMxUgAlwKNZ0cf2uqan5GLuS2A==",
      "optional": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/err-code": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/err-code/-/err-code-2.0.3.tgz",
      "integrity": "sha512-2bmlRpNKBxT/CRmPOlyISQpNj+qSeYvcym/uT0Jx2bMOlKLtSy1ZmLuVxSEKKyor/N5yhvp/ZiG1oE3DEYMSFA==",
      "optional": true
    },
    "node_modules/escape-html": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz",
      "integrity": "sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow=="
    },
    "node_modules/expand-template": {
      "version": "2.0.3",
      "resolved": "https://registry.npmjs.org/expand-template/-/expand-template-2.0.3.tgz",
      "integrity": "sha512-XYfuKMvj4O35f/pOXLObndIRvyQ+/+6AhODh+OKWj9S9498pHHn/IMszH+gt0fBCRWMNfk1ZSp5x3AifmnI2vg==",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/fast-content-type-parse": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/fast-content-type-parse/-/fast-content-type-parse-1.1.0.tgz",
      "integrity": "sha512-fBHHqSTFLVnR61C+gltJuE5GkVQMV0S2nqUO8TJ+5Z3qAKG8vAx4FKai1s5jq/inV1+sREynIWSuQ6HgoSXpDQ=="
    },
    "node_modules/fast-decode-uri-component": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/fast-decode-uri-component/-/fast-decode-uri-component-1.0.1.tgz",
      "integrity": "sha512-WKgKWg5eUxvRZGwW8FvfbaH7AXSh2cL+3j5fMGzUMCxWBJ3dV3a7Wz8y2f/uQ0e3B6WmodD3oS54jTQ9HVTIIg=="
    },
    "node_modules/fast-deep-equal": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
      "integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q=="
    },
    "node_modules/fast-json-stringify": {
      "version": "5.16.1",
      "resolved": "https://registry.npmjs.org/fast-json-stringify/-/fast-json-stringify-5.16.1.tgz",
      "integrity": "sha512-KAdnLvy1yu/XrRtP+LJnxbBGrhN+xXu+gt3EUvZhYGKCr3lFHq/7UFJHHFgmJKoqlh6B40bZLEv7w46B0mqn1g==",
      "dependencies": {
        "@fastify/merge-json-schemas": "^0.1.0",
        "ajv": "^8.10.0",
        "ajv-formats": "^3.0.1",
        "fast-deep-equal": "^3.1.3",
        "fast-uri": "^2.1.0",
        "json-schema-ref-resolver": "^1.0.1",
        "rfdc": "^1.2.0"
      }
    },
    "node_modules/fast-json-stringify/node_modules/ajv-formats": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/ajv-formats/-/ajv-formats-3.0.1.tgz",
      "integrity": "sha512-8iUql50EUR+uUcdRQ3HDqa6EVyo3docL8g5WJ3FNcWmu62IbkGUue/pEyLBW8VGKKucTPgqeks4fIU1DA4yowQ==",
      "dependencies": {
        "ajv": "^8.0.0"
      },
      "peerDependencies": {
        "ajv": "^8.0.0"
      },
      "peerDependenciesMeta": {
        "ajv": {
          "optional": true
        }
      }
    },
    "node_modules/fast-querystring": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/fast-querystring/-/fast-querystring-1.1.2.tgz",
      "integrity": "sha512-g6KuKWmFXc0fID8WWH0jit4g0AGBoJhCkJMb1RmbsSEUNvQ+ZC8D6CUZ+GtF8nMzSPXnhiePyyqqipzNNEnHjg==",
      "dependencies": {
        "fast-decode-uri-component": "^1.0.1"
      }
    },
    "node_modules/fast-redact": {
      "version": "3.5.0",
      "resolved": "https://registry.npmjs.org/fast-redact/-/fast-redact-3.5.0.tgz",
      "integrity": "sha512-dwsoQlS7h9hMeYUq1W++23NDcBLV4KqONnITDV9DjfS3q1SgDGVrBdvvTLUotWtPSD7asWDV9/CmsZPy8Hf70A==",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/fast-uri": {
      "version": "2.4.0",
      "resolved": "https://registry.npmjs.org/fast-uri/-/fast-uri-2.4.0.tgz",
      "integrity": "sha512-ypuAmmMKInk5q7XcepxlnUWDLWv4GFtaJqAzWKqn62IpQ3pejtr5dTVbt3vwqVaMKmkNR55sTT+CqUKIaT21BA=="
    },
    "node_modules/fastify": {
      "version": "4.29.1",
      "resolved": "https://registry.npmjs.org/fastify/-/fastify-4.29.1.tgz",
      "integrity": "sha512-m2kMNHIG92tSNWv+Z3UeTR9AWLLuo7KctC7mlFPtMEVrfjIhmQhkQnT9v15qA/BfVq3vvj134Y0jl9SBje3jXQ==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/fastify"
        },
        {
          "type": "opencollective",
          "url": "https://opencollective.com/fastify"
        }
      ],
      "dependencies": {
        "@fastify/ajv-compiler": "^3.5.0",
        "@fastify/error": "^3.4.0",
        "@fastify/fast-json-stringify-compiler": "^4.3.0",
        "abstract-logging": "^2.0.1",
        "avvio": "^8.3.0",
        "fast-content-type-parse": "^1.1.0",
        "fast-json-stringify": "^5.8.0",
        "find-my-way": "^8.0.0",
        "light-my-request": "^5.11.0",
        "pino": "^9.0.0",
        "process-warning": "^3.0.0",
        "proxy-addr": "^2.0.7",
        "rfdc": "^1.3.0",
        "secure-json-parse": "^2.7.0",
        "semver": "^7.5.4",
        "toad-cache": "^3.3.0"
      }
    },
    "node_modules/fastify-plugin": {
      "version": "4.5.1",
      "resolved": "https://registry.npmjs.org/fastify-plugin/-/fastify-plugin-4.5.1.tgz",
      "integrity": "sha512-stRHYGeuqpEZTL1Ef0Ovr2ltazUT9g844X5z/zEBFLG8RYlpDiOCIG+ATvYEp+/zmc7sN29mcIMp8gvYplYPIQ=="
    },
    "node_modules/fastq": {
      "version": "1.19.1",
      "resolved": "https://registry.npmjs.org/fastq/-/fastq-1.19.1.tgz",
      "integrity": "sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==",
      "dependencies": {
        "reusify": "^1.0.4"
      }
    },
    "node_modules/fetch-blob": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/fetch-blob/-/fetch-blob-3.2.0.tgz",
      "integrity": "sha512-7yAQpD2UMJzLi1Dqv7qFYnPbaPx7ZfFK6PiIxQ4PfkGPyNyl2Ugx+a/umUonmKqjhM4DnfbMvdX6otXq83soQQ==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/jimmywarting"
        },
        {
          "type": "paypal",
          "url": "https://paypal.me/jimmywarting"
        }
      ],
      "dependencies": {
        "node-domexception": "^1.0.0",
        "web-streams-polyfill": "^3.0.3"
      },
      "engines": {
        "node": "^12.20 || >= 14.13"
      }
    },
    "node_modules/file-uri-to-path": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/file-uri-to-path/-/file-uri-to-path-1.0.0.tgz",
      "integrity": "sha512-0Zt+s3L7Vf1biwWZ29aARiVYLx7iMGnEUl9x33fbB/j3jR81u/O2LbqK+Bm1CDSNDKVtJ/YjwY7TUd5SkeLQLw=="
    },
    "node_modules/fill-range": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz",
      "integrity": "sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==",
      "dev": true,
      "dependencies": {
        "to-regex-range": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/find-my-way": {
      "version": "8.2.2",
      "resolved": "https://registry.npmjs.org/find-my-way/-/find-my-way-8.2.2.tgz",
      "integrity": "sha512-Dobi7gcTEq8yszimcfp/R7+owiT4WncAJ7VTTgFH1jYJ5GaG1FbhjwDG820hptN0QDFvzVY3RfCzdInvGPGzjA==",
      "dependencies": {
        "fast-deep-equal": "^3.1.3",
        "fast-querystring": "^1.0.0",
        "safe-regex2": "^3.1.0"
      },
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/formdata-polyfill": {
      "version": "4.0.10",
      "resolved": "https://registry.npmjs.org/formdata-polyfill/-/formdata-polyfill-4.0.10.tgz",
      "integrity": "sha512-buewHzMvYL29jdeQTVILecSaZKnt/RJWjoZCF5OW60Z67/GmSLBkOFM7qh1PI3zFNtJbaZL5eQu1vLfazOwj4g==",
      "dependencies": {
        "fetch-blob": "^3.1.2"
      },
      "engines": {
        "node": ">=12.20.0"
      }
    },
    "node_modules/forwarded": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz",
      "integrity": "sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/fs-constants": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs-constants/-/fs-constants-1.0.0.tgz",
      "integrity": "sha512-y6OAwoSIf7FyjMIv94u+b5rdheZEjzR63GTyZJm5qh4Bi+2YgwLCcI/fPFZkL5PSixOt6ZNKm+w+Hfp/Bciwow=="
    },
    "node_modules/fs-minipass": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/fs-minipass/-/fs-minipass-2.1.0.tgz",
      "integrity": "sha512-V/JgOLFCS+R6Vcq0slCuaeWEdNC3ouDlJMNIsacH2VtALiu9mV4LPrHc5cDl8k5aw6J8jwgWWpiTo5RYhmIzvg==",
      "dependencies": {
        "minipass": "^3.0.0"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/fs.realpath": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
      "integrity": "sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw=="
    },
    "node_modules/fsevents": {
      "version": "2.3.3",
      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",
      "integrity": "sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==",
      "dev": true,
      "hasInstallScript": true,
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
      }
    },
    "node_modules/function-bind": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
      "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
      "dev": true,
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/gauge": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/gauge/-/gauge-3.0.2.tgz",
      "integrity": "sha512-+5J6MS/5XksCuXq++uFRsnUd7Ovu1XenbeuIuNRJxYWjgQbPuFhT14lAvsWfqfAmnwluf1OwMjz39HjfLPci0Q==",
      "deprecated": "This package is no longer supported.",
      "dependencies": {
        "aproba": "^1.0.3 || ^2.0.0",
        "color-support": "^1.1.2",
        "console-control-strings": "^1.0.0",
        "has-unicode": "^2.0.1",
        "object-assign": "^4.1.1",
        "signal-exit": "^3.0.0",
        "string-width": "^4.2.3",
        "strip-ansi": "^6.0.1",
        "wide-align": "^1.1.2"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/generic-pool": {
      "version": "3.9.0",
      "resolved": "https://registry.npmjs.org/generic-pool/-/generic-pool-3.9.0.tgz",
      "integrity": "sha512-hymDOu5B53XvN4QT9dBmZxPX4CWhBPPLguTZ9MMFeFa/Kg0xWVfylOVNlJji/E7yTZWFd/q9GO5TxDLq156D7g==",
      "engines": {
        "node": ">= 4"
      }
    },
    "node_modules/github-from-package": {
      "version": "0.0.0",
      "resolved": "https://registry.npmjs.org/github-from-package/-/github-from-package-0.0.0.tgz",
      "integrity": "sha512-SyHy3T1v2NUXn29OsWdxmK6RwHD+vkj3v8en8AOBZ1wBQ/hCAQ5bAQTD02kW4W9tUp/3Qh6J8r9EvntiyCmOOw=="
    },
    "node_modules/glob": {
      "version": "8.1.0",
      "resolved": "https://registry.npmjs.org/glob/-/glob-8.1.0.tgz",
      "integrity": "sha512-r8hpEjiQEYlF2QU0df3dS+nxxSIreXQS1qRhMJM0Q5NDdR386C7jb7Hwwod8Fgiuex+k0GFjgft18yvxm5XoCQ==",
      "deprecated": "Glob versions prior to v9 are no longer supported",
      "dependencies": {
        "fs.realpath": "^1.0.0",
        "inflight": "^1.0.4",
        "inherits": "2",
        "minimatch": "^5.0.1",
        "once": "^1.3.0"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "dev": true,
      "dependencies": {
        "is-glob": "^4.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/graceful-fs": {
      "version": "4.2.11",
      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgz",
      "integrity": "sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==",
      "optional": true
    },
    "node_modules/has-unicode": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/has-unicode/-/has-unicode-2.0.1.tgz",
      "integrity": "sha512-8Rf9Y83NBReMnx0gFzA8JImQACstCYWUplepDa9xprwwtmgEZUF0h/i5xSA625zB/I37EtrswSST6OXxwaaIJQ=="
    },
    "node_modules/hasown": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
      "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
      "dev": true,
      "dependencies": {
        "function-bind": "^1.1.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/http-cache-semantics": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/http-cache-semantics/-/http-cache-semantics-4.2.0.tgz",
      "integrity": "sha512-dTxcvPXqPvXBQpq5dUr6mEMJX4oIEFv6bwom3FDwKRDsuIjjJGANqhBuoAn9c1RQJIdAKav33ED65E2ys+87QQ==",
      "optional": true
    },
    "node_modules/http-errors": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz",
      "integrity": "sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==",
      "dependencies": {
        "depd": "2.0.0",
        "inherits": "2.0.4",
        "setprototypeof": "1.2.0",
        "statuses": "2.0.1",
        "toidentifier": "1.0.1"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/http-proxy-agent": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/http-proxy-agent/-/http-proxy-agent-4.0.1.tgz",
      "integrity": "sha512-k0zdNgqWTGA6aeIRVpvfVob4fL52dTfaehylg0Y4UvSySvOq/Y+BOyPrgpUrA7HylqvU8vIZGsRuXmspskV0Tg==",
      "optional": true,
      "dependencies": {
        "@tootallnate/once": "1",
        "agent-base": "6",
        "debug": "4"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/https-proxy-agent": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-5.0.1.tgz",
      "integrity": "sha512-dFcAjpTQFgoLMzC2VwU+C/CbS7uRL0lWmxDITmqm7C+7F0Odmj6s9l6alZc6AELXhrnggM2CeWSXHGOdX2YtwA==",
      "dependencies": {
        "agent-base": "6",
        "debug": "4"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/humanize-ms": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/humanize-ms/-/humanize-ms-1.2.1.tgz",
      "integrity": "sha512-Fl70vYtsAFb/C06PTS9dZBo7ihau+Tu/DNCk/OyHhea07S+aeMWpFFkUaXRa8fI+ScZbEI8dfSxwY7gxZ9SAVQ==",
      "optional": true,
      "dependencies": {
        "ms": "^2.0.0"
      }
    },
    "node_modules/iconv-lite": {
      "version": "0.6.3",
      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.6.3.tgz",
      "integrity": "sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==",
      "optional": true,
      "dependencies": {
        "safer-buffer": ">= 2.1.2 < 3.0.0"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/ieee754": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/ieee754/-/ieee754-1.2.1.tgz",
      "integrity": "sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ]
    },
    "node_modules/imurmurhash": {
      "version": "0.1.4",
      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
      "integrity": "sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==",
      "optional": true,
      "engines": {
        "node": ">=0.8.19"
      }
    },
    "node_modules/indent-string": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/indent-string/-/indent-string-4.0.0.tgz",
      "integrity": "sha512-EdDDZu4A2OyIK7Lr/2zG+w5jmbuk1DVBnEwREQvBzspBJkCEbRa8GxU1lghYcaGJCnRWibjDXlq779X1/y5xwg==",
      "optional": true,
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/infer-owner": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/infer-owner/-/infer-owner-1.0.4.tgz",
      "integrity": "sha512-IClj+Xz94+d7irH5qRyfJonOdfTzuDaifE6ZPWfx0N0+/ATZCbuTPq2prFl526urkQd90WyUKIh1DfBQ2hMz9A==",
      "optional": true
    },
    "node_modules/inflight": {
      "version": "1.0.6",
      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
      "integrity": "sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==",
      "deprecated": "This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.",
      "dependencies": {
        "once": "^1.3.0",
        "wrappy": "1"
      }
    },
    "node_modules/inherits": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ=="
    },
    "node_modules/ini": {
      "version": "1.3.8",
      "resolved": "https://registry.npmjs.org/ini/-/ini-1.3.8.tgz",
      "integrity": "sha512-JV/yugV2uzW5iMRSiZAyDtQd+nxtUnjeLt0acNdw98kKLrvuRVyB80tsREOE7yvGVgalhZ6RNXCmEHkUKBKxew=="
    },
    "node_modules/ip-address": {
      "version": "9.0.5",
      "resolved": "https://registry.npmjs.org/ip-address/-/ip-address-9.0.5.tgz",
      "integrity": "sha512-zHtQzGojZXTwZTHQqra+ETKd4Sn3vgi7uBmlPoXVWZqYvuKmtI0l/VZTjqGmJY9x88GGOaZ9+G9ES8hC4T4X8g==",
      "optional": true,
      "dependencies": {
        "jsbn": "1.1.0",
        "sprintf-js": "^1.1.3"
      },
      "engines": {
        "node": ">= 12"
      }
    },
    "node_modules/ipaddr.js": {
      "version": "1.9.1",
      "resolved": "https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz",
      "integrity": "sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==",
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/is-binary-path": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz",
      "integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==",
      "dev": true,
      "dependencies": {
        "binary-extensions": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-core-module": {
      "version": "2.16.1",
      "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.16.1.tgz",
      "integrity": "sha512-UfoeMA6fIJ8wTYFEUjelnaGI67v6+N7qXJEvQuIGa99l4xsCruSYOVSQ0uPANn4dAzm8lkYPaKLrrijLq7x23w==",
      "dev": true,
      "dependencies": {
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-extglob": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-glob": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
      "dev": true,
      "dependencies": {
        "is-extglob": "^2.1.1"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-lambda": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/is-lambda/-/is-lambda-1.0.1.tgz",
      "integrity": "sha512-z7CMFGNrENq5iFB9Bqo64Xk6Y9sg+epq1myIcdHaGnbMTYOxvzsEtdYqQUylB7LxfkvgrrjP32T6Ywciio9UIQ==",
      "optional": true
    },
    "node_modules/is-number": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
      "dev": true,
      "engines": {
        "node": ">=0.12.0"
      }
    },
    "node_modules/isexe": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
      "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
      "optional": true
    },
    "node_modules/jsbn": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/jsbn/-/jsbn-1.1.0.tgz",
      "integrity": "sha512-4bYVV3aAMtDTTu4+xsDYa6sy9GyJ69/amsu9sYF2zqjiEoZA5xJi3BrfX3uY+/IekIu7MwdObdbDWpoZdBv3/A==",
      "optional": true
    },
    "node_modules/json-schema-ref-resolver": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/json-schema-ref-resolver/-/json-schema-ref-resolver-1.0.1.tgz",
      "integrity": "sha512-EJAj1pgHc1hxF6vo2Z3s69fMjO1INq6eGHXZ8Z6wCQeldCuwxGK9Sxf4/cScGn3FZubCVUehfWtcDM/PLteCQw==",
      "dependencies": {
        "fast-deep-equal": "^3.1.3"
      }
    },
    "node_modules/json-schema-resolver": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/json-schema-resolver/-/json-schema-resolver-2.0.0.tgz",
      "integrity": "sha512-pJ4XLQP4Q9HTxl6RVDLJ8Cyh1uitSs0CzDBAz1uoJ4sRD/Bk7cFSXL1FUXDW3zJ7YnfliJx6eu8Jn283bpZ4Yg==",
      "dependencies": {
        "debug": "^4.1.1",
        "rfdc": "^1.1.4",
        "uri-js": "^4.2.2"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/Eomm/json-schema-resolver?sponsor=1"
      }
    },
    "node_modules/json-schema-traverse": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-1.0.0.tgz",
      "integrity": "sha512-NM8/P9n3XjXhIZn1lLhkFaACTOURQXjWhV4BA/RnOv8xvgqtqpAX9IO4mRQxSx1Rlo4tqzeqb0sOlruaOy3dug=="
    },
    "node_modules/jsonwebtoken": {
      "version": "9.0.2",
      "resolved": "https://registry.npmjs.org/jsonwebtoken/-/jsonwebtoken-9.0.2.tgz",
      "integrity": "sha512-PRp66vJ865SSqOlgqS8hujT5U4AOgMfhrwYIuIhfKaoSCZcirrmASQr8CX7cUg+RMih+hgznrjp99o+W4pJLHQ==",
      "dependencies": {
        "jws": "^3.2.2",
        "lodash.includes": "^4.3.0",
        "lodash.isboolean": "^3.0.3",
        "lodash.isinteger": "^4.0.4",
        "lodash.isnumber": "^3.0.3",
        "lodash.isplainobject": "^4.0.6",
        "lodash.isstring": "^4.0.1",
        "lodash.once": "^4.0.0",
        "ms": "^2.1.1",
        "semver": "^7.5.4"
      },
      "engines": {
        "node": ">=12",
        "npm": ">=6"
      }
    },
    "node_modules/jwa": {
      "version": "1.4.2",
      "resolved": "https://registry.npmjs.org/jwa/-/jwa-1.4.2.tgz",
      "integrity": "sha512-eeH5JO+21J78qMvTIDdBXidBd6nG2kZjg5Ohz/1fpa28Z4CcsWUzJ1ZZyFq/3z3N17aZy+ZuBoHljASbL1WfOw==",
      "dependencies": {
        "buffer-equal-constant-time": "^1.0.1",
        "ecdsa-sig-formatter": "1.0.11",
        "safe-buffer": "^5.0.1"
      }
    },
    "node_modules/jws": {
      "version": "3.2.2",
      "resolved": "https://registry.npmjs.org/jws/-/jws-3.2.2.tgz",
      "integrity": "sha512-YHlZCB6lMTllWDtSPHz/ZXTsi8S00usEV6v1tjq8tOUZzw7DpSDWVXjXDre6ed1w/pd495ODpHZYSdkRTsa0HA==",
      "dependencies": {
        "jwa": "^1.4.1",
        "safe-buffer": "^5.0.1"
      }
    },
    "node_modules/light-my-request": {
      "version": "5.14.0",
      "resolved": "https://registry.npmjs.org/light-my-request/-/light-my-request-5.14.0.tgz",
      "integrity": "sha512-aORPWntbpH5esaYpGOOmri0OHDOe3wC5M2MQxZ9dvMLZm6DnaAn0kJlcbU9hwsQgLzmZyReKwFwwPkR+nHu5kA==",
      "dependencies": {
        "cookie": "^0.7.0",
        "process-warning": "^3.0.0",
        "set-cookie-parser": "^2.4.1"
      }
    },
    "node_modules/lodash.includes": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/lodash.includes/-/lodash.includes-4.3.0.tgz",
      "integrity": "sha512-W3Bx6mdkRTGtlJISOvVD/lbqjTlPPUDTMnlXZFnVwi9NKJ6tiAk6LVdlhZMm17VZisqhKcgzpO5Wz91PCt5b0w=="
    },
    "node_modules/lodash.isboolean": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/lodash.isboolean/-/lodash.isboolean-3.0.3.tgz",
      "integrity": "sha512-Bz5mupy2SVbPHURB98VAcw+aHh4vRV5IPNhILUCsOzRmsTmSQ17jIuqopAentWoehktxGd9e/hbIXq980/1QJg=="
    },
    "node_modules/lodash.isinteger": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/lodash.isinteger/-/lodash.isinteger-4.0.4.tgz",
      "integrity": "sha512-DBwtEWN2caHQ9/imiNeEA5ys1JoRtRfY3d7V9wkqtbycnAmTvRRmbHKDV4a0EYc678/dia0jrte4tjYwVBaZUA=="
    },
    "node_modules/lodash.isnumber": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/lodash.isnumber/-/lodash.isnumber-3.0.3.tgz",
      "integrity": "sha512-QYqzpfwO3/CWf3XP+Z+tkQsfaLL/EnUlXWVkIk5FUPc4sBdTehEqZONuyRt2P67PXAk+NXmTBcc97zw9t1FQrw=="
    },
    "node_modules/lodash.isplainobject": {
      "version": "4.0.6",
      "resolved": "https://registry.npmjs.org/lodash.isplainobject/-/lodash.isplainobject-4.0.6.tgz",
      "integrity": "sha512-oSXzaWypCMHkPC3NvBEaPHf0KsA5mvPrOPgQWDsbg8n7orZ290M0BmC/jgRZ4vcJ6DTAhjrsSYgdsW/F+MFOBA=="
    },
    "node_modules/lodash.isstring": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/lodash.isstring/-/lodash.isstring-4.0.1.tgz",
      "integrity": "sha512-0wJxfxH1wgO3GrbuP+dTTk7op+6L41QCXbGINEmD+ny/G/eCqGzxyCsh7159S+mgDDcoarnBw6PC1PS5+wUGgw=="
    },
    "node_modules/lodash.once": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/lodash.once/-/lodash.once-4.1.1.tgz",
      "integrity": "sha512-Sb487aTOCr9drQVL8pIxOzVhafOjZN9UU54hiN8PU3uAiSV7lx1yYNpbNmex2PK6dSJoNTSJUUswT651yww3Mg=="
    },
    "node_modules/lru-cache": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz",
      "integrity": "sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==",
      "optional": true,
      "dependencies": {
        "yallist": "^4.0.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/make-dir": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-3.1.0.tgz",
      "integrity": "sha512-g3FeP20LNwhALb/6Cz6Dd4F2ngze0jz7tbzrD2wAV+o9FeNHe4rL+yK2md0J/fiSf1sa1ADhXqi5+oVwOM/eGw==",
      "dependencies": {
        "semver": "^6.0.0"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/make-dir/node_modules/semver": {
      "version": "6.3.1",
      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
      "bin": {
        "semver": "bin/semver.js"
      }
    },
    "node_modules/make-error": {
      "version": "1.3.6",
      "resolved": "https://registry.npmjs.org/make-error/-/make-error-1.3.6.tgz",
      "integrity": "sha512-s8UhlNe7vPKomQhC1qFelMokr/Sc3AgNbso3n74mVPA5LTZwkB9NlXf4XPamLxJE8h0gh73rM94xvwRT2CVInw==",
      "dev": true
    },
    "node_modules/make-fetch-happen": {
      "version": "9.1.0",
      "resolved": "https://registry.npmjs.org/make-fetch-happen/-/make-fetch-happen-9.1.0.tgz",
      "integrity": "sha512-+zopwDy7DNknmwPQplem5lAZX/eCOzSvSNNcSKm5eVwTkOBzoktEfXsa9L23J/GIRhxRsaxzkPEhrJEpE2F4Gg==",
      "optional": true,
      "dependencies": {
        "agentkeepalive": "^4.1.3",
        "cacache": "^15.2.0",
        "http-cache-semantics": "^4.1.0",
        "http-proxy-agent": "^4.0.1",
        "https-proxy-agent": "^5.0.0",
        "is-lambda": "^1.0.1",
        "lru-cache": "^6.0.0",
        "minipass": "^3.1.3",
        "minipass-collect": "^1.0.2",
        "minipass-fetch": "^1.3.2",
        "minipass-flush": "^1.0.5",
        "minipass-pipeline": "^1.2.4",
        "negotiator": "^0.6.2",
        "promise-retry": "^2.0.1",
        "socks-proxy-agent": "^6.0.0",
        "ssri": "^8.0.0"
      },
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/mime": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/mime/-/mime-3.0.0.tgz",
      "integrity": "sha512-jSCU7/VB1loIWBZe14aEYHU/+1UMEHoaO7qxCOVJOw9GgH72VAWppxNcjU+x9a2k3GSIBXNKxXQFqRvvZ7vr3A==",
      "bin": {
        "mime": "cli.js"
      },
      "engines": {
        "node": ">=10.0.0"
      }
    },
    "node_modules/mimic-response": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-2.1.0.tgz",
      "integrity": "sha512-wXqjST+SLt7R009ySCglWBCFpjUygmCIfD790/kVbiGmUgfYGuB14PiTd5DwVxSV4NcYHjzMkoj5LjQZwTQLEA==",
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/minimatch": {
      "version": "5.1.6",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-5.1.6.tgz",
      "integrity": "sha512-lKwV/1brpG6mBUFHtb7NUmtABCb2WZZmm2wNiOA5hAb8VdCS4B3dtMWyvcoViccwAW/COERjXLt0zP1zXUN26g==",
      "dependencies": {
        "brace-expansion": "^2.0.1"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/minimist": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.8.tgz",
      "integrity": "sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/minipass": {
      "version": "3.3.6",
      "resolved": "https://registry.npmjs.org/minipass/-/minipass-3.3.6.tgz",
      "integrity": "sha512-DxiNidxSEK+tHG6zOIklvNOwm3hvCrbUrdtzY74U6HKTJxvIDfOUL5W5P2Ghd3DTkhhKPYGqeNUIh5qcM4YBfw==",
      "dependencies": {
        "yallist": "^4.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/minipass-collect": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/minipass-collect/-/minipass-collect-1.0.2.tgz",
      "integrity": "sha512-6T6lH0H8OG9kITm/Jm6tdooIbogG9e0tLgpY6mphXSm/A9u8Nq1ryBG+Qspiub9LjWlBPsPS3tWQ/Botq4FdxA==",
      "optional": true,
      "dependencies": {
        "minipass": "^3.0.0"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/minipass-fetch": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/minipass-fetch/-/minipass-fetch-1.4.1.tgz",
      "integrity": "sha512-CGH1eblLq26Y15+Azk7ey4xh0J/XfJfrCox5LDJiKqI2Q2iwOLOKrlmIaODiSQS8d18jalF6y2K2ePUm0CmShw==",
      "optional": true,
      "dependencies": {
        "minipass": "^3.1.0",
        "minipass-sized": "^1.0.3",
        "minizlib": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      },
      "optionalDependencies": {
        "encoding": "^0.1.12"
      }
    },
    "node_modules/minipass-flush": {
      "version": "1.0.5",
      "resolved": "https://registry.npmjs.org/minipass-flush/-/minipass-flush-1.0.5.tgz",
      "integrity": "sha512-JmQSYYpPUqX5Jyn1mXaRwOda1uQ8HP5KAT/oDSLCzt1BYRhQU0/hDtsB1ufZfEEzMZ9aAVmsBw8+FWsIXlClWw==",
      "optional": true,
      "dependencies": {
        "minipass": "^3.0.0"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/minipass-pipeline": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/minipass-pipeline/-/minipass-pipeline-1.2.4.tgz",
      "integrity": "sha512-xuIq7cIOt09RPRJ19gdi4b+RiNvDFYe5JH+ggNvBqGqpQXcru3PcRmOZuHBKWK1Txf9+cQ+HMVN4d6z46LZP7A==",
      "optional": true,
      "dependencies": {
        "minipass": "^3.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/minipass-sized": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/minipass-sized/-/minipass-sized-1.0.3.tgz",
      "integrity": "sha512-MbkQQ2CTiBMlA2Dm/5cY+9SWFEN8pzzOXi6rlM5Xxq0Yqbda5ZQy9sU75a673FE9ZK0Zsbr6Y5iP6u9nktfg2g==",
      "optional": true,
      "dependencies": {
        "minipass": "^3.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/minizlib": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/minizlib/-/minizlib-2.1.2.tgz",
      "integrity": "sha512-bAxsR8BVfj60DWXHE3u30oHzfl4G7khkSuPW+qvpd7jFRHm7dLxOjUk1EHACJ/hxLY8phGJ0YhYHZo7jil7Qdg==",
      "dependencies": {
        "minipass": "^3.0.0",
        "yallist": "^4.0.0"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/mkdirp": {
      "version": "1.0.4",
      "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-1.0.4.tgz",
      "integrity": "sha512-vVqVZQyf3WLx2Shd0qJ9xuvqgAyKPLAiqITEtqW0oIUjzo3PePDd6fW9iFz30ef7Ysp/oiWqbhszeGWW2T6Gzw==",
      "bin": {
        "mkdirp": "bin/cmd.js"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/mkdirp-classic": {
      "version": "0.5.3",
      "resolved": "https://registry.npmjs.org/mkdirp-classic/-/mkdirp-classic-0.5.3.tgz",
      "integrity": "sha512-gKLcREMhtuZRwRAfqP3RFW+TK4JqApVBtOIftVgjuABpAtpxhPGaDcfvbhNvD0B8iD1oUr/txX35NjcaY6Ns/A=="
    },
    "node_modules/mnemonist": {
      "version": "0.39.6",
      "resolved": "https://registry.npmjs.org/mnemonist/-/mnemonist-0.39.6.tgz",
      "integrity": "sha512-A/0v5Z59y63US00cRSLiloEIw3t5G+MiKz4BhX21FI+YBJXBOGW0ohFxTxO08dsOYlzxo87T7vGfZKYp2bcAWA==",
      "dependencies": {
        "obliterator": "^2.0.1"
      }
    },
    "node_modules/ms": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA=="
    },
    "node_modules/nan": {
      "version": "2.23.0",
      "resolved": "https://registry.npmjs.org/nan/-/nan-2.23.0.tgz",
      "integrity": "sha512-1UxuyYGdoQHcGg87Lkqm3FzefucTa0NAiOcuRsDmysep3c1LVCRK2krrUDafMWtjSG04htvAmvg96+SDknOmgQ=="
    },
    "node_modules/napi-build-utils": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/napi-build-utils/-/napi-build-utils-2.0.0.tgz",
      "integrity": "sha512-GEbrYkbfF7MoNaoh2iGG84Mnf/WZfB0GdGEsM8wz7Expx/LlWf5U8t9nvJKXSp3qr5IsEbK04cBGhol/KwOsWA=="
    },
    "node_modules/negotiator": {
      "version": "0.6.4",
      "resolved": "https://registry.npmjs.org/negotiator/-/negotiator-0.6.4.tgz",
      "integrity": "sha512-myRT3DiWPHqho5PrJaIRyaMv2kgYf0mUVgBNOYMuCH5Ki1yEiQaf/ZJuQ62nvpc44wL5WDbTX7yGJi1Neevw8w==",
      "optional": true,
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/node-abi": {
      "version": "3.75.0",
      "resolved": "https://registry.npmjs.org/node-abi/-/node-abi-3.75.0.tgz",
      "integrity": "sha512-OhYaY5sDsIka7H7AtijtI9jwGYLyl29eQn/W623DiN/MIv5sUqc4g7BIDThX+gb7di9f6xK02nkp8sdfFWZLTg==",
      "dependencies": {
        "semver": "^7.3.5"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/node-addon-api": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/node-addon-api/-/node-addon-api-7.1.1.tgz",
      "integrity": "sha512-5m3bsyrjFWE1xf7nz7YXdN4udnVtXK6/Yfgn5qnahL6bCkf2yKt4k3nuTKAtT4r3IG8JNR2ncsIMdZuAzJjHQQ=="
    },
    "node_modules/node-domexception": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/node-domexception/-/node-domexception-1.0.0.tgz",
      "integrity": "sha512-/jKZoMpw0F8GRwl4/eLROPA3cfcXtLApP0QzLmUT/HuPCZWyB7IY9ZrMeKw2O/nFIqPQB3PVM9aYm0F312AXDQ==",
      "deprecated": "Use your platform's native DOMException instead",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/jimmywarting"
        },
        {
          "type": "github",
          "url": "https://paypal.me/jimmywarting"
        }
      ],
      "engines": {
        "node": ">=10.5.0"
      }
    },
    "node_modules/node-fetch": {
      "version": "3.3.2",
      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-3.3.2.tgz",
      "integrity": "sha512-dRB78srN/l6gqWulah9SrxeYnxeddIG30+GOqK/9OlLVyLg3HPnr6SqOWTWOXKRwC2eGYCkZ59NNuSgvSrpgOA==",
      "dependencies": {
        "data-uri-to-buffer": "^4.0.0",
        "fetch-blob": "^3.1.4",
        "formdata-polyfill": "^4.0.10"
      },
      "engines": {
        "node": "^12.20.0 || ^14.13.1 || >=16.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/node-fetch"
      }
    },
    "node_modules/node-gyp": {
      "version": "8.4.1",
      "resolved": "https://registry.npmjs.org/node-gyp/-/node-gyp-8.4.1.tgz",
      "integrity": "sha512-olTJRgUtAb/hOXG0E93wZDs5YiJlgbXxTwQAFHyNlRsXQnYzUaF2aGgujZbw+hR8aF4ZG/rST57bWMWD16jr9w==",
      "optional": true,
      "dependencies": {
        "env-paths": "^2.2.0",
        "glob": "^7.1.4",
        "graceful-fs": "^4.2.6",
        "make-fetch-happen": "^9.1.0",
        "nopt": "^5.0.0",
        "npmlog": "^6.0.0",
        "rimraf": "^3.0.2",
        "semver": "^7.3.5",
        "tar": "^6.1.2",
        "which": "^2.0.2"
      },
      "bin": {
        "node-gyp": "bin/node-gyp.js"
      },
      "engines": {
        "node": ">= 10.12.0"
      }
    },
    "node_modules/node-gyp/node_modules/are-we-there-yet": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/are-we-there-yet/-/are-we-there-yet-3.0.1.tgz",
      "integrity": "sha512-QZW4EDmGwlYur0Yyf/b2uGucHQMa8aFUP7eu9ddR73vvhFyt4V0Vl3QHPcTNJ8l6qYOBdxgXdnBXQrHilfRQBg==",
      "deprecated": "This package is no longer supported.",
      "optional": true,
      "dependencies": {
        "delegates": "^1.0.0",
        "readable-stream": "^3.6.0"
      },
      "engines": {
        "node": "^12.13.0 || ^14.15.0 || >=16.0.0"
      }
    },
    "node_modules/node-gyp/node_modules/brace-expansion": {
      "version": "1.1.12",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz",
      "integrity": "sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==",
      "optional": true,
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/node-gyp/node_modules/gauge": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/gauge/-/gauge-4.0.4.tgz",
      "integrity": "sha512-f9m+BEN5jkg6a0fZjleidjN51VE1X+mPFQ2DJ0uv1V39oCLCbsGe6yjbBnp7eK7z/+GAon99a3nHuqbuuthyPg==",
      "deprecated": "This package is no longer supported.",
      "optional": true,
      "dependencies": {
        "aproba": "^1.0.3 || ^2.0.0",
        "color-support": "^1.1.3",
        "console-control-strings": "^1.1.0",
        "has-unicode": "^2.0.1",
        "signal-exit": "^3.0.7",
        "string-width": "^4.2.3",
        "strip-ansi": "^6.0.1",
        "wide-align": "^1.1.5"
      },
      "engines": {
        "node": "^12.13.0 || ^14.15.0 || >=16.0.0"
      }
    },
    "node_modules/node-gyp/node_modules/glob": {
      "version": "7.2.3",
      "resolved": "https://registry.npmjs.org/glob/-/glob-7.2.3.tgz",
      "integrity": "sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==",
      "deprecated": "Glob versions prior to v9 are no longer supported",
      "optional": true,
      "dependencies": {
        "fs.realpath": "^1.0.0",
        "inflight": "^1.0.4",
        "inherits": "2",
        "minimatch": "^3.1.1",
        "once": "^1.3.0",
        "path-is-absolute": "^1.0.0"
      },
      "engines": {
        "node": "*"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/node-gyp/node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "optional": true,
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/node-gyp/node_modules/npmlog": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/npmlog/-/npmlog-6.0.2.tgz",
      "integrity": "sha512-/vBvz5Jfr9dT/aFWd0FIRf+T/Q2WBsLENygUaFUqstqsycmZAP/t5BvFJTK0viFmSUxiUKTUplWy5vt+rvKIxg==",
      "deprecated": "This package is no longer supported.",
      "optional": true,
      "dependencies": {
        "are-we-there-yet": "^3.0.0",
        "console-control-strings": "^1.1.0",
        "gauge": "^4.0.3",
        "set-blocking": "^2.0.0"
      },
      "engines": {
        "node": "^12.13.0 || ^14.15.0 || >=16.0.0"
      }
    },
    "node_modules/nopt": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/nopt/-/nopt-5.0.0.tgz",
      "integrity": "sha512-Tbj67rffqceeLpcRXrT7vKAN8CwfPeIBgM7E6iBkmKLV7bEMwpGgYLGv0jACUsECaa/vuxP0IjEont6umdMgtQ==",
      "dependencies": {
        "abbrev": "1"
      },
      "bin": {
        "nopt": "bin/nopt.js"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/normalize-path": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
      "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/npmlog": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/npmlog/-/npmlog-5.0.1.tgz",
      "integrity": "sha512-AqZtDUWOMKs1G/8lwylVjrdYgqA4d9nu8hc+0gzRxlDb1I10+FHBGMXs6aiQHFdCUUlqH99MUMuLfzWDNDtfxw==",
      "deprecated": "This package is no longer supported.",
      "dependencies": {
        "are-we-there-yet": "^2.0.0",
        "console-control-strings": "^1.1.0",
        "gauge": "^3.0.0",
        "set-blocking": "^2.0.0"
      }
    },
    "node_modules/object-assign": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
      "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/obliterator": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/obliterator/-/obliterator-2.0.5.tgz",
      "integrity": "sha512-42CPE9AhahZRsMNslczq0ctAEtqk8Eka26QofnqC346BZdHDySk3LWka23LI7ULIw11NmltpiLagIq8gBozxTw=="
    },
    "node_modules/on-exit-leak-free": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/on-exit-leak-free/-/on-exit-leak-free-2.1.2.tgz",
      "integrity": "sha512-0eJJY6hXLGf1udHwfNftBqH+g73EU4B504nZeKpz1sYRKafAghwxEJunB2O7rDZkL4PGfsMVnTXZ2EjibbqcsA==",
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/once": {
      "version": "1.4.0",
      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
      "integrity": "sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==",
      "dependencies": {
        "wrappy": "1"
      }
    },
    "node_modules/openapi-types": {
      "version": "12.1.3",
      "resolved": "https://registry.npmjs.org/openapi-types/-/openapi-types-12.1.3.tgz",
      "integrity": "sha512-N4YtSYJqghVu4iek2ZUvcN/0aqH1kRDuNqzcycDxhOUpg7GdvLa2F3DgS6yBNhInhv2r/6I0Flkn7CqL8+nIcw=="
    },
    "node_modules/p-limit": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz",
      "integrity": "sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==",
      "dependencies": {
        "yocto-queue": "^0.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/p-map": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/p-map/-/p-map-4.0.0.tgz",
      "integrity": "sha512-/bjOqmgETBYB5BoEeGVea8dmvHb2m9GLy1E9W43yeyfP6QQCZGFNa+XRceJEuDB6zqr+gKpIAmlLebMpykw/MQ==",
      "optional": true,
      "dependencies": {
        "aggregate-error": "^3.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/path-is-absolute": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
      "integrity": "sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/path-parse": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
      "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==",
      "dev": true
    },
    "node_modules/picomatch": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
      "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
      "dev": true,
      "engines": {
        "node": ">=8.6"
      },
      "funding": {
        "url": "https://github.com/sponsors/jonschlinkert"
      }
    },
    "node_modules/pino": {
      "version": "9.7.0",
      "resolved": "https://registry.npmjs.org/pino/-/pino-9.7.0.tgz",
      "integrity": "sha512-vnMCM6xZTb1WDmLvtG2lE/2p+t9hDEIvTWJsu6FejkE62vB7gDhvzrpFR4Cw2to+9JNQxVnkAKVPA1KPB98vWg==",
      "dependencies": {
        "atomic-sleep": "^1.0.0",
        "fast-redact": "^3.1.1",
        "on-exit-leak-free": "^2.1.0",
        "pino-abstract-transport": "^2.0.0",
        "pino-std-serializers": "^7.0.0",
        "process-warning": "^5.0.0",
        "quick-format-unescaped": "^4.0.3",
        "real-require": "^0.2.0",
        "safe-stable-stringify": "^2.3.1",
        "sonic-boom": "^4.0.1",
        "thread-stream": "^3.0.0"
      },
      "bin": {
        "pino": "bin.js"
      }
    },
    "node_modules/pino-abstract-transport": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/pino-abstract-transport/-/pino-abstract-transport-2.0.0.tgz",
      "integrity": "sha512-F63x5tizV6WCh4R6RHyi2Ml+M70DNRXt/+HANowMflpgGFMAym/VKm6G7ZOQRjqN7XbGxK1Lg9t6ZrtzOaivMw==",
      "dependencies": {
        "split2": "^4.0.0"
      }
    },
    "node_modules/pino-std-serializers": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/pino-std-serializers/-/pino-std-serializers-7.0.0.tgz",
      "integrity": "sha512-e906FRY0+tV27iq4juKzSYPbUj2do2X2JX4EzSca1631EB2QJQUqGbDuERal7LCtOpxl6x3+nvo9NPZcmjkiFA=="
    },
    "node_modules/pino/node_modules/process-warning": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/process-warning/-/process-warning-5.0.0.tgz",
      "integrity": "sha512-a39t9ApHNx2L4+HBnQKqxxHNs1r7KF+Intd8Q/g1bUh6q0WIp9voPXJ/x0j+ZL45KF1pJd9+q2jLIRMfvEshkA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/fastify"
        },
        {
          "type": "opencollective",
          "url": "https://opencollective.com/fastify"
        }
      ]
    },
    "node_modules/prebuild-install": {
      "version": "7.1.3",
      "resolved": "https://registry.npmjs.org/prebuild-install/-/prebuild-install-7.1.3.tgz",
      "integrity": "sha512-8Mf2cbV7x1cXPUILADGI3wuhfqWvtiLA1iclTDbFRZkgRQS0NqsPZphna9V+HyTEadheuPmjaJMsbzKQFOzLug==",
      "dependencies": {
        "detect-libc": "^2.0.0",
        "expand-template": "^2.0.3",
        "github-from-package": "0.0.0",
        "minimist": "^1.2.3",
        "mkdirp-classic": "^0.5.3",
        "napi-build-utils": "^2.0.0",
        "node-abi": "^3.3.0",
        "pump": "^3.0.0",
        "rc": "^1.2.7",
        "simple-get": "^4.0.0",
        "tar-fs": "^2.0.0",
        "tunnel-agent": "^0.6.0"
      },
      "bin": {
        "prebuild-install": "bin.js"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/prebuild-install/node_modules/decompress-response": {
      "version": "6.0.0",
      "resolved": "https://registry.npmjs.org/decompress-response/-/decompress-response-6.0.0.tgz",
      "integrity": "sha512-aW35yZM6Bb/4oJlZncMH2LCoZtJXTRxES17vE3hoRiowU2kWHaJKFkSBDnDR+cm9J+9QhXmREyIfv0pji9ejCQ==",
      "dependencies": {
        "mimic-response": "^3.1.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/prebuild-install/node_modules/mimic-response": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-3.1.0.tgz",
      "integrity": "sha512-z0yWI+4FDrrweS8Zmt4Ej5HdJmky15+L2e6Wgn3+iK5fWzb6T3fhNFq2+MeTRb064c6Wr4N/wv0DzQTjNzHNGQ==",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/prebuild-install/node_modules/simple-get": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/simple-get/-/simple-get-4.0.1.tgz",
      "integrity": "sha512-brv7p5WgH0jmQJr1ZDDfKDOSeWWg+OVypG99A/5vYGPqJ6pxiaHLy8nxtFjBA7oMa01ebA9gfh1uMCFqOuXxvA==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "dependencies": {
        "decompress-response": "^6.0.0",
        "once": "^1.3.1",
        "simple-concat": "^1.0.0"
      }
    },
    "node_modules/process-warning": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/process-warning/-/process-warning-3.0.0.tgz",
      "integrity": "sha512-mqn0kFRl0EoqhnL0GQ0veqFHyIN1yig9RHh/InzORTUiZHFRAur+aMtRkELNwGs9aNwKS6tg/An4NYBPGwvtzQ=="
    },
    "node_modules/promise-inflight": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/promise-inflight/-/promise-inflight-1.0.1.tgz",
      "integrity": "sha512-6zWPyEOFaQBJYcGMHBKTKJ3u6TBsnMFOIZSa6ce1e/ZrrsOlnHRHbabMjLiBYKp+n44X9eUI6VUPaukCXHuG4g==",
      "optional": true
    },
    "node_modules/promise-retry": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/promise-retry/-/promise-retry-2.0.1.tgz",
      "integrity": "sha512-y+WKFlBR8BGXnsNlIHFGPZmyDf3DFMoLhaflAnyZgV6rG6xu+JwesTo2Q9R6XwYmtmwAFCkAk3e35jEdoeh/3g==",
      "optional": true,
      "dependencies": {
        "err-code": "^2.0.2",
        "retry": "^0.12.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/proxy-addr": {
      "version": "2.0.7",
      "resolved": "https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz",
      "integrity": "sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==",
      "dependencies": {
        "forwarded": "0.2.0",
        "ipaddr.js": "1.9.1"
      },
      "engines": {
        "node": ">= 0.10"
      }
    },
    "node_modules/pump": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/pump/-/pump-3.0.3.tgz",
      "integrity": "sha512-todwxLMY7/heScKmntwQG8CXVkWUOdYxIvY2s0VWAAMh/nd8SoYiRaKjlr7+iCs984f2P8zvrfWcDDYVb73NfA==",
      "dependencies": {
        "end-of-stream": "^1.1.0",
        "once": "^1.3.1"
      }
    },
    "node_modules/punycode": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz",
      "integrity": "sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/quick-format-unescaped": {
      "version": "4.0.4",
      "resolved": "https://registry.npmjs.org/quick-format-unescaped/-/quick-format-unescaped-4.0.4.tgz",
      "integrity": "sha512-tYC1Q1hgyRuHgloV/YXs2w15unPVh8qfu/qCTfhTYamaw7fyhumKa2yGpdSo87vY32rIclj+4fWYQXUMs9EHvg=="
    },
    "node_modules/rc": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/rc/-/rc-1.2.8.tgz",
      "integrity": "sha512-y3bGgqKj3QBdxLbLkomlohkvsA8gdAiUQlSBJnBhfn+BPxg4bc62d8TcBW15wavDfgexCgccckhcZvywyQYPOw==",
      "dependencies": {
        "deep-extend": "^0.6.0",
        "ini": "~1.3.0",
        "minimist": "^1.2.0",
        "strip-json-comments": "~2.0.1"
      },
      "bin": {
        "rc": "cli.js"
      }
    },
    "node_modules/readable-stream": {
      "version": "3.6.2",
      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.6.2.tgz",
      "integrity": "sha512-9u/sniCrY3D5WdsERHzHE4G2YCXqoG5FTHUiCC4SIbr6XcLZBY05ya9EKjYek9O5xOAwjGq+1JdGBAS7Q9ScoA==",
      "dependencies": {
        "inherits": "^2.0.3",
        "string_decoder": "^1.1.1",
        "util-deprecate": "^1.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/readdirp": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz",
      "integrity": "sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==",
      "dev": true,
      "dependencies": {
        "picomatch": "^2.2.1"
      },
      "engines": {
        "node": ">=8.10.0"
      }
    },
    "node_modules/real-require": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/real-require/-/real-require-0.2.0.tgz",
      "integrity": "sha512-57frrGM/OCTLqLOAh0mhVA9VBMHd+9U7Zb2THMGdBUoZVOtGbJzjxsYGDJ3A9AYYCP4hn6y1TVbaOfzWtm5GFg==",
      "engines": {
        "node": ">= 12.13.0"
      }
    },
    "node_modules/redis": {
      "version": "4.7.1",
      "resolved": "https://registry.npmjs.org/redis/-/redis-4.7.1.tgz",
      "integrity": "sha512-S1bJDnqLftzHXHP8JsT5II/CtHWQrASX5K96REjWjlmWKrviSOLWmM7QnRLstAWsu1VBBV1ffV6DzCvxNP0UJQ==",
      "dependencies": {
        "@redis/bloom": "1.2.0",
        "@redis/client": "1.6.1",
        "@redis/graph": "1.1.1",
        "@redis/json": "1.0.7",
        "@redis/search": "1.2.0",
        "@redis/time-series": "1.1.0"
      }
    },
    "node_modules/require-from-string": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/require-from-string/-/require-from-string-2.0.2.tgz",
      "integrity": "sha512-Xf0nWe6RseziFMu+Ap9biiUbmplq6S9/p+7w7YXP/JBHhrUDDUhwa+vANyubuqfZWTveU//DYVGsDG7RKL/vEw==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/resolve": {
      "version": "1.22.10",
      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.22.10.tgz",
      "integrity": "sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w==",
      "dev": true,
      "dependencies": {
        "is-core-module": "^2.16.0",
        "path-parse": "^1.0.7",
        "supports-preserve-symlinks-flag": "^1.0.0"
      },
      "bin": {
        "resolve": "bin/resolve"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/ret": {
      "version": "0.4.3",
      "resolved": "https://registry.npmjs.org/ret/-/ret-0.4.3.tgz",
      "integrity": "sha512-0f4Memo5QP7WQyUEAYUO3esD/XjOc3Zjjg5CPsAq1p8sIu0XPeMbHJemKA0BO7tV0X7+A0FoEpbmHXWxPyD3wQ==",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/retry": {
      "version": "0.12.0",
      "resolved": "https://registry.npmjs.org/retry/-/retry-0.12.0.tgz",
      "integrity": "sha512-9LkiTwjUh6rT555DtE9rTX+BKByPfrMzEAtnlEtdEwr3Nkffwiihqe2bWADg+OQRjt9gl6ICdmB/ZFDCGAtSow==",
      "optional": true,
      "engines": {
        "node": ">= 4"
      }
    },
    "node_modules/reusify": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/reusify/-/reusify-1.1.0.tgz",
      "integrity": "sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==",
      "engines": {
        "iojs": ">=1.0.0",
        "node": ">=0.10.0"
      }
    },
    "node_modules/rfdc": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/rfdc/-/rfdc-1.4.1.tgz",
      "integrity": "sha512-q1b3N5QkRUWUl7iyylaaj3kOpIT0N2i9MqIEQXP73GVsN9cw3fdx8X63cEmWhJGi2PPCF23Ijp7ktmd39rawIA=="
    },
    "node_modules/rimraf": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz",
      "integrity": "sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==",
      "deprecated": "Rimraf versions prior to v4 are no longer supported",
      "dependencies": {
        "glob": "^7.1.3"
      },
      "bin": {
        "rimraf": "bin.js"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/rimraf/node_modules/brace-expansion": {
      "version": "1.1.12",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz",
      "integrity": "sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==",
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/rimraf/node_modules/glob": {
      "version": "7.2.3",
      "resolved": "https://registry.npmjs.org/glob/-/glob-7.2.3.tgz",
      "integrity": "sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==",
      "deprecated": "Glob versions prior to v9 are no longer supported",
      "dependencies": {
        "fs.realpath": "^1.0.0",
        "inflight": "^1.0.4",
        "inherits": "2",
        "minimatch": "^3.1.1",
        "once": "^1.3.0",
        "path-is-absolute": "^1.0.0"
      },
      "engines": {
        "node": "*"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/rimraf/node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/safe-buffer": {
      "version": "5.2.1",
      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
      "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ]
    },
    "node_modules/safe-regex2": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/safe-regex2/-/safe-regex2-3.1.0.tgz",
      "integrity": "sha512-RAAZAGbap2kBfbVhvmnTFv73NWLMvDGOITFYTZBAaY8eR+Ir4ef7Up/e7amo+y1+AH+3PtLkrt9mvcTsG9LXug==",
      "dependencies": {
        "ret": "~0.4.0"
      }
    },
    "node_modules/safe-stable-stringify": {
      "version": "2.5.0",
      "resolved": "https://registry.npmjs.org/safe-stable-stringify/-/safe-stable-stringify-2.5.0.tgz",
      "integrity": "sha512-b3rppTKm9T+PsVCBEOUR46GWI7fdOs00VKZ1+9c1EWDaDMvjQc6tUwuFyIprgGgTcWoVHSKrU8H31ZHA2e0RHA==",
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/safer-buffer": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
      "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==",
      "optional": true
    },
    "node_modules/secure-json-parse": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/secure-json-parse/-/secure-json-parse-2.7.0.tgz",
      "integrity": "sha512-6aU+Rwsezw7VR8/nyvKTx8QpWH9FrcYiXXlqC4z5d5XQBDRqtbfsRjnwGyqbi3gddNtWHuEk9OANUotL26qKUw=="
    },
    "node_modules/semver": {
      "version": "7.7.2",
      "resolved": "https://registry.npmjs.org/semver/-/semver-7.7.2.tgz",
      "integrity": "sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==",
      "bin": {
        "semver": "bin/semver.js"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/set-blocking": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/set-blocking/-/set-blocking-2.0.0.tgz",
      "integrity": "sha512-KiKBS8AnWGEyLzofFfmvKwpdPzqiy16LvQfK3yv/fVH7Bj13/wl3JSR1J+rfgRE9q7xUJK4qvgS8raSOeLUehw=="
    },
    "node_modules/set-cookie-parser": {
      "version": "2.7.1",
      "resolved": "https://registry.npmjs.org/set-cookie-parser/-/set-cookie-parser-2.7.1.tgz",
      "integrity": "sha512-IOc8uWeOZgnb3ptbCURJWNjWUPcO3ZnTTdzsurqERrP6nPyv+paC55vJM0LpOlT2ne+Ix+9+CRG1MNLlyZ4GjQ=="
    },
    "node_modules/setprototypeof": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz",
      "integrity": "sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw=="
    },
    "node_modules/signal-exit": {
      "version": "3.0.7",
      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.7.tgz",
      "integrity": "sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ=="
    },
    "node_modules/simple-concat": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/simple-concat/-/simple-concat-1.0.1.tgz",
      "integrity": "sha512-cSFtAPtRhljv69IK0hTVZQ+OfE9nePi/rtJmw5UjHeVyVroEqJXP1sFztKUy1qU+xvz3u/sfYJLa947b7nAN2Q==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ]
    },
    "node_modules/simple-get": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/simple-get/-/simple-get-3.1.1.tgz",
      "integrity": "sha512-CQ5LTKGfCpvE1K0n2us+kuMPbk/q0EKl82s4aheV9oXjFEz6W/Y7oQFVJuU6QG77hRT4Ghb5RURteF5vnWjupA==",
      "dependencies": {
        "decompress-response": "^4.2.0",
        "once": "^1.3.1",
        "simple-concat": "^1.0.0"
      }
    },
    "node_modules/smart-buffer": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/smart-buffer/-/smart-buffer-4.2.0.tgz",
      "integrity": "sha512-94hK0Hh8rPqQl2xXc3HsaBoOXKV20MToPkcXvwbISWLEs+64sBq5kFgn2kJDHb1Pry9yrP0dxrCI9RRci7RXKg==",
      "optional": true,
      "engines": {
        "node": ">= 6.0.0",
        "npm": ">= 3.0.0"
      }
    },
    "node_modules/socks": {
      "version": "2.8.6",
      "resolved": "https://registry.npmjs.org/socks/-/socks-2.8.6.tgz",
      "integrity": "sha512-pe4Y2yzru68lXCb38aAqRf5gvN8YdjP1lok5o0J7BOHljkyCGKVz7H3vpVIXKD27rj2giOJ7DwVyk/GWrPHDWA==",
      "optional": true,
      "dependencies": {
        "ip-address": "^9.0.5",
        "smart-buffer": "^4.2.0"
      },
      "engines": {
        "node": ">= 10.0.0",
        "npm": ">= 3.0.0"
      }
    },
    "node_modules/socks-proxy-agent": {
      "version": "6.2.1",
      "resolved": "https://registry.npmjs.org/socks-proxy-agent/-/socks-proxy-agent-6.2.1.tgz",
      "integrity": "sha512-a6KW9G+6B3nWZ1yB8G7pJwL3ggLy1uTzKAgCb7ttblwqdz9fMGJUuTy3uFzEP48FAs9FLILlmzDlE2JJhVQaXQ==",
      "optional": true,
      "dependencies": {
        "agent-base": "^6.0.2",
        "debug": "^4.3.3",
        "socks": "^2.6.2"
      },
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/sonic-boom": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/sonic-boom/-/sonic-boom-4.2.0.tgz",
      "integrity": "sha512-INb7TM37/mAcsGmc9hyyI6+QR3rR1zVRu36B0NeGXKnOOLiZOfER5SA+N7X7k3yUYRzLWafduTDvJAfDswwEww==",
      "dependencies": {
        "atomic-sleep": "^1.0.0"
      }
    },
    "node_modules/source-map": {
      "version": "0.6.1",
      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
      "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
      "dev": true,
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/source-map-support": {
      "version": "0.5.21",
      "resolved": "https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.21.tgz",
      "integrity": "sha512-uBHU3L3czsIyYXKX88fdrGovxdSCoTGDRZ6SYXtSRxLZUzHg5P/66Ht6uoUlHu9EZod+inXhKo3qQgwXUT/y1w==",
      "dev": true,
      "dependencies": {
        "buffer-from": "^1.0.0",
        "source-map": "^0.6.0"
      }
    },
    "node_modules/split2": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/split2/-/split2-4.2.0.tgz",
      "integrity": "sha512-UcjcJOWknrNkF6PLX83qcHM6KHgVKNkV62Y8a5uYDVv9ydGQVwAHMKqHdJje1VTWpljG0WYpCDhrCdAOYH4TWg==",
      "engines": {
        "node": ">= 10.x"
      }
    },
    "node_modules/sprintf-js": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.1.3.tgz",
      "integrity": "sha512-Oo+0REFV59/rz3gfJNKQiBlwfHaSESl1pcGyABQsnnIfWOFt6JNj5gCog2U6MLZ//IGYD+nA8nI+mTShREReaA==",
      "optional": true
    },
    "node_modules/sqlite": {
      "version": "5.1.1",
      "resolved": "https://registry.npmjs.org/sqlite/-/sqlite-5.1.1.tgz",
      "integrity": "sha512-oBkezXa2hnkfuJwUo44Hl9hS3er+YFtueifoajrgidvqsJRQFpc5fKoAkAor1O5ZnLoa28GBScfHXs8j0K358Q=="
    },
    "node_modules/sqlite3": {
      "version": "5.1.7",
      "resolved": "https://registry.npmjs.org/sqlite3/-/sqlite3-5.1.7.tgz",
      "integrity": "sha512-GGIyOiFaG+TUra3JIfkI/zGP8yZYLPQ0pl1bH+ODjiX57sPhrLU5sQJn1y9bDKZUFYkX1crlrPfSYt0BKKdkog==",
      "hasInstallScript": true,
      "dependencies": {
        "bindings": "^1.5.0",
        "node-addon-api": "^7.0.0",
        "prebuild-install": "^7.1.1",
        "tar": "^6.1.11"
      },
      "optionalDependencies": {
        "node-gyp": "8.x"
      },
      "peerDependencies": {
        "node-gyp": "8.x"
      },
      "peerDependenciesMeta": {
        "node-gyp": {
          "optional": true
        }
      }
    },
    "node_modules/ssri": {
      "version": "8.0.1",
      "resolved": "https://registry.npmjs.org/ssri/-/ssri-8.0.1.tgz",
      "integrity": "sha512-97qShzy1AiyxvPNIkLWoGua7xoQzzPjQ0HAH4B0rWKo7SZ6USuPcrUiAFrws0UH8RrbWmgq3LMTObhPIHbbBeQ==",
      "optional": true,
      "dependencies": {
        "minipass": "^3.1.1"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/statuses": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz",
      "integrity": "sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==",
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/stream-wormhole": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/stream-wormhole/-/stream-wormhole-1.1.0.tgz",
      "integrity": "sha512-gHFfL3px0Kctd6Po0M8TzEvt3De/xu6cnRrjlfYNhwbhLPLwigI2t1nc6jrzNuaYg5C4YF78PPFuQPzRiqn9ew==",
      "engines": {
        "node": ">=4.0.0"
      }
    },
    "node_modules/string_decoder": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.3.0.tgz",
      "integrity": "sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==",
      "dependencies": {
        "safe-buffer": "~5.2.0"
      }
    },
    "node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/strip-bom": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz",
      "integrity": "sha512-vavAMRXOgBVNF6nyEEmL3DBK19iRpDcoIwW+swQ+CbGiu7lju6t+JklA1MHweoWtadgt4ISVUsXLyDq34ddcwA==",
      "dev": true,
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/strip-json-comments": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-2.0.1.tgz",
      "integrity": "sha512-4gB8na07fecVVkOI6Rs4e7T6NOTki5EmL7TUduTs6bu3EdnSycntVJ4re8kgZA+wx9IueI2Y11bfbgwtzuE0KQ==",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/supports-preserve-symlinks-flag": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
      "integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==",
      "dev": true,
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/tar": {
      "version": "6.2.1",
      "resolved": "https://registry.npmjs.org/tar/-/tar-6.2.1.tgz",
      "integrity": "sha512-DZ4yORTwrbTj/7MZYq2w+/ZFdI6OZ/f9SFHR+71gIVUZhOQPHzVCLpvRnPgyaMpfWxxk/4ONva3GQSyNIKRv6A==",
      "dependencies": {
        "chownr": "^2.0.0",
        "fs-minipass": "^2.0.0",
        "minipass": "^5.0.0",
        "minizlib": "^2.1.1",
        "mkdirp": "^1.0.3",
        "yallist": "^4.0.0"
      },
      "engines": {
        "node": ">=10"
      }
    },
    "node_modules/tar-fs": {
      "version": "2.1.3",
      "resolved": "https://registry.npmjs.org/tar-fs/-/tar-fs-2.1.3.tgz",
      "integrity": "sha512-090nwYJDmlhwFwEW3QQl+vaNnxsO2yVsd45eTKRBzSzu+hlb1w2K9inVq5b0ngXuLVqQ4ApvsUHHnu/zQNkWAg==",
      "dependencies": {
        "chownr": "^1.1.1",
        "mkdirp-classic": "^0.5.2",
        "pump": "^3.0.0",
        "tar-stream": "^2.1.4"
      }
    },
    "node_modules/tar-fs/node_modules/chownr": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/chownr/-/chownr-1.1.4.tgz",
      "integrity": "sha512-jJ0bqzaylmJtVnNgzTeSOs8DPavpbYgEr/b0YL8/2GO3xJEhInFmhKMUnEJQjZumK7KXGFhUy89PrsJWlakBVg=="
    },
    "node_modules/tar-stream": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/tar-stream/-/tar-stream-2.2.0.tgz",
      "integrity": "sha512-ujeqbceABgwMZxEJnk2HDY2DlnUZ+9oEcb1KzTVfYHio0UE6dG71n60d8D2I4qNvleWrrXpmjpt7vZeF1LnMZQ==",
      "dependencies": {
        "bl": "^4.0.3",
        "end-of-stream": "^1.4.1",
        "fs-constants": "^1.0.0",
        "inherits": "^2.0.3",
        "readable-stream": "^3.1.1"
      },
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/tar/node_modules/minipass": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/minipass/-/minipass-5.0.0.tgz",
      "integrity": "sha512-3FnjYuehv9k6ovOEbyOswadCDPX1piCfhV8ncmYtHOjuPwylVWsghTLo7rabjC3Rx5xD4HDx8Wm1xnMF7S5qFQ==",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/text-decoding": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/text-decoding/-/text-decoding-1.0.0.tgz",
      "integrity": "sha512-/0TJD42KDnVwKmDK6jj3xP7E2MG7SHAOG4tyTgyUCRPdHwvkquYNLEQltmdMa3owq3TkddCVcTsoctJI8VQNKA=="
    },
    "node_modules/thread-stream": {
      "version": "3.1.0",
      "resolved": "https://registry.npmjs.org/thread-stream/-/thread-stream-3.1.0.tgz",
      "integrity": "sha512-OqyPZ9u96VohAyMfJykzmivOrY2wfMSf3C5TtFJVgN+Hm6aj+voFhlK+kZEIv2FBh1X6Xp3DlnCOfEQ3B2J86A==",
      "dependencies": {
        "real-require": "^0.2.0"
      }
    },
    "node_modules/to-regex-range": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
      "dev": true,
      "dependencies": {
        "is-number": "^7.0.0"
      },
      "engines": {
        "node": ">=8.0"
      }
    },
    "node_modules/toad-cache": {
      "version": "3.7.0",
      "resolved": "https://registry.npmjs.org/toad-cache/-/toad-cache-3.7.0.tgz",
      "integrity": "sha512-/m8M+2BJUpoJdgAHoG+baCwBT+tf2VraSfkBgl0Y00qIWt41DJ8R5B8nsEw0I58YwF5IZH6z24/2TobDKnqSWw==",
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/toidentifier": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz",
      "integrity": "sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==",
      "engines": {
        "node": ">=0.6"
      }
    },
    "node_modules/tr46": {
      "version": "0.0.3",
      "resolved": "https://registry.npmjs.org/tr46/-/tr46-0.0.3.tgz",
      "integrity": "sha512-N3WMsuqV66lT30CrXNbEjx4GEwlow3v6rr4mCcv6prnfwhS01rkgyFdjPNBYd9br7LpXV1+Emh01fHnq2Gdgrw=="
    },
    "node_modules/tree-kill": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/tree-kill/-/tree-kill-1.2.2.tgz",
      "integrity": "sha512-L0Orpi8qGpRG//Nd+H90vFB+3iHnue1zSSGmNOOCh1GLJ7rUKVwV2HvijphGQS2UmhUZewS9VgvxYIdgr+fG1A==",
      "dev": true,
      "bin": {
        "tree-kill": "cli.js"
      }
    },
    "node_modules/ts-node": {
      "version": "10.9.2",
      "resolved": "https://registry.npmjs.org/ts-node/-/ts-node-10.9.2.tgz",
      "integrity": "sha512-f0FFpIdcHgn8zcPSbf1dRevwt047YMnaiJM3u2w2RewrB+fob/zePZcrOyQoLMMO7aBIddLcQIEK5dYjkLnGrQ==",
      "dev": true,
      "dependencies": {
        "@cspotcode/source-map-support": "^0.8.0",
        "@tsconfig/node10": "^1.0.7",
        "@tsconfig/node12": "^1.0.7",
        "@tsconfig/node14": "^1.0.0",
        "@tsconfig/node16": "^1.0.2",
        "acorn": "^8.4.1",
        "acorn-walk": "^8.1.1",
        "arg": "^4.1.0",
        "create-require": "^1.1.0",
        "diff": "^4.0.1",
        "make-error": "^1.1.1",
        "v8-compile-cache-lib": "^3.0.1",
        "yn": "3.1.1"
      },
      "bin": {
        "ts-node": "dist/bin.js",
        "ts-node-cwd": "dist/bin-cwd.js",
        "ts-node-esm": "dist/bin-esm.js",
        "ts-node-script": "dist/bin-script.js",
        "ts-node-transpile-only": "dist/bin-transpile.js",
        "ts-script": "dist/bin-script-deprecated.js"
      },
      "peerDependencies": {
        "@swc/core": ">=1.2.50",
        "@swc/wasm": ">=1.2.50",
        "@types/node": "*",
        "typescript": ">=2.7"
      },
      "peerDependenciesMeta": {
        "@swc/core": {
          "optional": true
        },
        "@swc/wasm": {
          "optional": true
        }
      }
    },
    "node_modules/ts-node-dev": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/ts-node-dev/-/ts-node-dev-2.0.0.tgz",
      "integrity": "sha512-ywMrhCfH6M75yftYvrvNarLEY+SUXtUvU8/0Z6llrHQVBx12GiFk5sStF8UdfE/yfzk9IAq7O5EEbTQsxlBI8w==",
      "dev": true,
      "dependencies": {
        "chokidar": "^3.5.1",
        "dynamic-dedupe": "^0.3.0",
        "minimist": "^1.2.6",
        "mkdirp": "^1.0.4",
        "resolve": "^1.0.0",
        "rimraf": "^2.6.1",
        "source-map-support": "^0.5.12",
        "tree-kill": "^1.2.2",
        "ts-node": "^10.4.0",
        "tsconfig": "^7.0.0"
      },
      "bin": {
        "ts-node-dev": "lib/bin.js",
        "tsnd": "lib/bin.js"
      },
      "engines": {
        "node": ">=0.8.0"
      },
      "peerDependencies": {
        "node-notifier": "*",
        "typescript": "*"
      },
      "peerDependenciesMeta": {
        "node-notifier": {
          "optional": true
        }
      }
    },
    "node_modules/ts-node-dev/node_modules/brace-expansion": {
      "version": "1.1.12",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz",
      "integrity": "sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==",
      "dev": true,
      "dependencies": {
        "balanced-match": "^1.0.0",
        "concat-map": "0.0.1"
      }
    },
    "node_modules/ts-node-dev/node_modules/glob": {
      "version": "7.2.3",
      "resolved": "https://registry.npmjs.org/glob/-/glob-7.2.3.tgz",
      "integrity": "sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==",
      "deprecated": "Glob versions prior to v9 are no longer supported",
      "dev": true,
      "dependencies": {
        "fs.realpath": "^1.0.0",
        "inflight": "^1.0.4",
        "inherits": "2",
        "minimatch": "^3.1.1",
        "once": "^1.3.0",
        "path-is-absolute": "^1.0.0"
      },
      "engines": {
        "node": "*"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/ts-node-dev/node_modules/minimatch": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "dev": true,
      "dependencies": {
        "brace-expansion": "^1.1.7"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/ts-node-dev/node_modules/rimraf": {
      "version": "2.7.1",
      "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
      "integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
      "deprecated": "Rimraf versions prior to v4 are no longer supported",
      "dev": true,
      "dependencies": {
        "glob": "^7.1.3"
      },
      "bin": {
        "rimraf": "bin.js"
      }
    },
    "node_modules/tsconfig": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/tsconfig/-/tsconfig-7.0.0.tgz",
      "integrity": "sha512-vZXmzPrL+EmC4T/4rVlT2jNVMWCi/O4DIiSj3UHg1OE5kCKbk4mfrXc6dZksLgRM/TZlKnousKH9bbTazUWRRw==",
      "dev": true,
      "dependencies": {
        "@types/strip-bom": "^3.0.0",
        "@types/strip-json-comments": "0.0.30",
        "strip-bom": "^3.0.0",
        "strip-json-comments": "^2.0.0"
      }
    },
    "node_modules/tunnel-agent": {
      "version": "0.6.0",
      "resolved": "https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.6.0.tgz",
      "integrity": "sha512-McnNiV1l8RYeY8tBgEpuodCC1mLUdbSN+CYBL7kJsJNInOP8UjDDEwdk6Mw60vdLLrr5NHKZhMAOSrR2NZuQ+w==",
      "dependencies": {
        "safe-buffer": "^5.0.1"
      },
      "engines": {
        "node": "*"
      }
    },
    "node_modules/typescript": {
      "version": "5.8.3",
      "resolved": "https://registry.npmjs.org/typescript/-/typescript-5.8.3.tgz",
      "integrity": "sha512-p1diW6TqL9L07nNxvRMM7hMMw4c5XOo/1ibL4aAIGmSAt9slTE1Xgw5KWuof2uTOvCg9BY7ZRi+GaF+7sfgPeQ==",
      "dev": true,
      "bin": {
        "tsc": "bin/tsc",
        "tsserver": "bin/tsserver"
      },
      "engines": {
        "node": ">=14.17"
      }
    },
    "node_modules/undici-types": {
      "version": "6.21.0",
      "resolved": "https://registry.npmjs.org/undici-types/-/undici-types-6.21.0.tgz",
      "integrity": "sha512-iwDZqg0QAGrg9Rav5H4n0M64c3mkR59cJ6wQp+7C4nI0gsmExaedaYLNO44eT4AtBBwjbTiGPMlt2Md0T9H9JQ==",
      "dev": true
    },
    "node_modules/unique-filename": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/unique-filename/-/unique-filename-1.1.1.tgz",
      "integrity": "sha512-Vmp0jIp2ln35UTXuryvjzkjGdRyf9b2lTXuSYUiPmzRcl3FDtYqAwOnTJkAngD9SWhnoJzDbTKwaOrZ+STtxNQ==",
      "optional": true,
      "dependencies": {
        "unique-slug": "^2.0.0"
      }
    },
    "node_modules/unique-slug": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/unique-slug/-/unique-slug-2.0.2.tgz",
      "integrity": "sha512-zoWr9ObaxALD3DOPfjPSqxt4fnZiWblxHIgeWqW8x7UqDzEtHEQLzji2cuJYQFCU6KmoJikOYAZlrTHHebjx2w==",
      "optional": true,
      "dependencies": {
        "imurmurhash": "^0.1.4"
      }
    },
    "node_modules/uri-js": {
      "version": "4.4.1",
      "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz",
      "integrity": "sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==",
      "dependencies": {
        "punycode": "^2.1.0"
      }
    },
    "node_modules/util-deprecate": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
      "integrity": "sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw=="
    },
    "node_modules/v8-compile-cache-lib": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/v8-compile-cache-lib/-/v8-compile-cache-lib-3.0.1.tgz",
      "integrity": "sha512-wa7YjyUGfNZngI/vtK0UHAN+lgDCxBPCylVXGp0zu59Fz5aiGtNXaq3DhIov063MorB+VfufLh3JlF2KdTK3xg==",
      "dev": true
    },
    "node_modules/web-streams-polyfill": {
      "version": "3.3.3",
      "resolved": "https://registry.npmjs.org/web-streams-polyfill/-/web-streams-polyfill-3.3.3.tgz",
      "integrity": "sha512-d2JWLCivmZYTSIoge9MsgFCZrt571BikcWGYkjC1khllbTeDlGqZ2D8vD8E/lJa8WGWbb7Plm8/XJYV7IJHZZw==",
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/webidl-conversions": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-3.0.1.tgz",
      "integrity": "sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ=="
    },
    "node_modules/whatwg-url": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-5.0.0.tgz",
      "integrity": "sha512-saE57nupxk6v3HY35+jzBwYa0rKSy0XR8JSxZPwgLr7ys0IBzhGviA1/TUGJLmSVqs8pb9AnvICXEuOHLprYTw==",
      "dependencies": {
        "tr46": "~0.0.3",
        "webidl-conversions": "^3.0.0"
      }
    },
    "node_modules/which": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
      "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
      "optional": true,
      "dependencies": {
        "isexe": "^2.0.0"
      },
      "bin": {
        "node-which": "bin/node-which"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/wide-align": {
      "version": "1.1.5",
      "resolved": "https://registry.npmjs.org/wide-align/-/wide-align-1.1.5.tgz",
      "integrity": "sha512-eDMORYaPNZ4sQIuuYPDHdQvf4gyCF9rEEV/yPxGfwPkRodwEgiMUUXTx/dex+Me0wxx53S+NgUHaP7y3MGlDmg==",
      "dependencies": {
        "string-width": "^1.0.2 || 2 || 3 || 4"
      }
    },
    "node_modules/wrappy": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
      "integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ=="
    },
    "node_modules/xtend": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/xtend/-/xtend-4.0.2.tgz",
      "integrity": "sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ==",
      "dev": true,
      "engines": {
        "node": ">=0.4"
      }
    },
    "node_modules/yallist": {
      "version": "4.0.0",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz",
      "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A=="
    },
    "node_modules/yaml": {
      "version": "2.8.0",
      "resolved": "https://registry.npmjs.org/yaml/-/yaml-2.8.0.tgz",
      "integrity": "sha512-4lLa/EcQCB0cJkyts+FpIRx5G/llPxfP6VQU5KByHEhLxY3IJCH0f0Hy1MHI8sClTvsIb8qwRJ6R/ZdlDJ/leQ==",
      "bin": {
        "yaml": "bin.mjs"
      },
      "engines": {
        "node": ">= 14.6"
      }
    },
    "node_modules/yn": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/yn/-/yn-3.1.1.tgz",
      "integrity": "sha512-Ux4ygGWsu2c7isFWe8Yu1YluJmqVhxqK2cLXNQA5AcC3QfbGNpM7fu0Y8b/z16pXLnFxZYvWhd3fhBY9DLmC6Q==",
      "dev": true,
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/yocto-queue": {
      "version": "0.1.0",
      "resolved": "https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz",
      "integrity": "sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    }
  }
}
[1;30m----------------------------------------[0m

[1;34m=== ./Dockerfile ===[0m
FROM node:20

WORKDIR /app

# Instala dependencias del sistema necesarias para compilar 'canvas'
RUN apt-get update && apt-get install -y \
    build-essential \
    libcairo2-dev \
    libpango1.0-dev \
    libjpeg-dev \
    libgif-dev \
    librsvg2-dev \
    && rm -rf /var/lib/apt/lists/*

# Copia package.json y package-lock.json
COPY package*.json ./

# Fuerza la reconstrucción de canvas desde cero
RUN npm install --build-from-source=canvas

# Copia el código fuente
COPY . .

# Compila el proyecto
RUN npm run build

EXPOSE 8000

CMD ["npm", "start"][1;30m----------------------------------------[0m
